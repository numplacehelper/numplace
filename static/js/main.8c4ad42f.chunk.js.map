{"version":3,"sources":["images/forward.svg","images/forwardDisabled.svg","images/fastForward.svg","images/fastForwardDisabled.svg","images/backward.svg","images/backwardDisabled.svg","images/rewind.svg","images/rewindDisabled.svg","images/select.svg","images/selectDisabled.svg","images/erase.svg","images/eraseDisabled.svg","images/close.svg","components/Cell.js","Config.js","util/combinations.js","Util.js","components/NumPanelBlock.js","components/sudokuBoard/CellContainer.js","components/sudokuBoard/Marker.js","components/sudokuBoard/BoardBlock.js","components/sudokuBoard/SudokuBoard.js","components/control/NewGame.js","components/control/SampleGames.js","components/control/Restart.js","components/control/SetUp.js","components/control/ControlPanel.js","components/helper/Check.js","components/helper/helpMode/HelpModeButtons.js","components/helper/helpMode/SingleNum.js","components/helper/helpMode/MultipleNums.js","components/helper/helpMode/CandidatesLevels.js","components/helper/helpMode/Controls.js","components/helper/helpMode/NumCounter.js","components/helper/helpMode/HelpModePane.js","components/helper/MarkerButton.js","components/helper/LangButton.js","components/helper/HelpButton.js","components/helper/Indicator.js","components/helper/HelperPanel.js","components/Footer.js","components/floating/Delete.js","components/floating/Cancel.js","components/floating/NumPanelControl.js","components/floating/NumPanel.js","components/floating/Floating.js","components/floating/ShowMessage.js","App.js","util/Random.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","_this$props","this","props","cellId","num","lastCandidate","clsName","onClick","react_default","a","createElement","id","className","data-num","Component","Config","lang","en","ja","size","sizeB","numCells","Math","pow","maxLoopNum","maxUnionSize","maxSquareNum","traceTypes","numMatrix","candidate","marker","traceElementTypes","Object","assign","operation","operationTypes","manual","auto","candidateLevelTypes","level0","candidateTypes","displayCandidates","removeByInsertedNum","singleCandidate","singleExclusive","multipleExclusive","square","assumptionTest","level1","level2","level3","level4","level5","level6","candidateLevelTypesArray","stepByStepLevels","candidateLevels","restrictionTypes","row","column","col","block","blk","restrictionTypesShort","r","c","b","restrictionTypesStraightArray","restrictionTypesStraightShortArray","restrictionTypesArray","invBRC","mode","set","play","helpModeArray4display","helpMode","none","singleNum","candidates","both","multipleNums","helpModeArray4displayOnMultipleNums","helpModeArray","updateHelpModes","checkModeArray","checkMode","duplicates","correctness","processTypes","insertion","panelIds","sudokuBoard","cellContainerSuffix","control","helper","numPanelContainer","numPanelWrapper","numPanel","numPanelCell","numPanelControl","messageWrapper","footer","footerCredit","textForm","panelClassNames","subBlock","cell","cellContainer","smallCell","subCell","cellNum","panelTitles","header","buttonIds","newGame","sampleGameWrapper","sampleGameInnerWrapper","sampleGame","setup","save","restart","check","checkWrapper","singleNumRadio","singleNumButton","multipleNumsLabel","multipleNumsCheckbox","candidateWrapper","controlButtonWrapper","controls","controlLabelSkipIneffective","help","helperLableWrapper","indicatorWrapper","indicator","numCounterWrapper","numCounter","numCounterBar","delete","cancel","buttonClassNames","sampleGameFrame","sampleGameButton","checkTitle","checkButton","singleNumTitle","singleNumContainer","singleNumRadioWrapper","singleNumButtonWrapper","singleNumDisabled","singleNumDone","singleNumExceeding","multipleNumsContainer","multipleNumsCheckBoxWrapper","multipleNumsDisabled","multipleNumsDone","multipleNumsExceeding","candidateTitle","candidateContainer","candidateButtonWrapper","candidateDisabled","candidateButton","controlSkipIneffective","buttonStatus","waiting","active","disabled","buttonTitles","edit","sampleGames","langButtonTitles","helpModeButtonIds","container","wrapper","title","helpModeButtonClassNames","formNames","skipIneffective","candidateActiveControls","candidateControls","reset","backward","forward","fastForward","select","erase","keys","candidateControlArray","candidateButtonGroupNames","candidateButtons","exclusiveMultiples4marker","candidateStatus","assigned","selected","selectable","exclusiveSingle","exclusiveDouble","exclusiveTriple","exclusiveQuadruple","exclusiveSquare","removable","removed","shadowed","weaklyShadowed","inhibited","exclusiveTypes4marker","exclusiveMultiples","narrowExclusiveStatuses","exclusiveStatuses","wideExclusiveStatuses","selectedList","wideSelectedList","wideRemovedList","narrowCandidateList","markerRelatedExclusiveTypes","candidateList","wideCandidateList","registered","duplicated","checkButtonLabels","checkTitleCaptions","helpModeButtonLabels","helpModeCaptions","singleNumLevels","singleNumCaptions","candidateLevelCaptions","constrolIconCaptions","candidateControlIconSizes","small","large","backwardStopCondition","wrongInsertion","numInsertion","result","passed","failed","messages","success","failure","alertMessages","deadEnd","wrongQuestion","helpPath","helpFiles","dummyMatrix","sampleGameClassList","sampleGameClasses","beginner","easy","medium","hard","xtreme","sampleGameTitles","credit","publisher","author","book","question","matrix","creditTemplate","k_combinations","k","i","j","combs","head","tailcombs","length","push","slice","concat","Util","N","arguments","undefined","Array","from","idxSequence","getIndexSequence","redundant","reverse","map","blockId","parseInt","getBlockNumFromBlockId","toUpperCase","val","len","fill","_this","initArray","_this2","initMatrix","arr","getNsequence","numPanelMatrix","splice","idxs","nums","status","type","rcbIdx","unionSize","isBackward","constructor","idx","truth","rcType","rc","checkedArray","forEach","getContentFromMatrix","cellInfo","_this3","getCandidateStatusArray","n2i","_this4","statusArray","targetStatuses","_this5","convertExclusive2Candidates","includes","candidateNums","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","isNarrowCandidate","i2n","err","return","statuses","getNarrowCandidateNumsFromStatusArray","_this6","candidateNumMatrix","getNumsFromCandidateNumMatrix","idxArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","initCellIdx","_this7","markerIdx","isExclusiveSingle","getFirstLetter","initMarkerIdx","isExclusiveDoubleOrTriple","isInSameRowCol","blkIdx","isInSameBlock","initMarkerInfo","_ref4","numInfo","candInfoArray","markerInfoArray","defineProperty","initTraceItem","candInfos","markerInfos","_this8","reduce","getRowColIndicesFromBlockIdx","dic","regMatrix","appMatrix","appearance","isRegisteredMatrix","regRow","isRegistered","assignStatus2Candidates","prevStatuses","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","cellInfoSub","initCellInfo","getCandidateStatus","_this9","traceItem","trace","infoType","particularTrace","filter","particularTraceItem","flattenMatrix2Array","getAllParticularInfosFromTrace","numCounts","allIdxs","getAllCellIndicies","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getNumFromNumMatrix","countWideSelectedCellsInCandidates","_this10","count","candCell","isWideSelectedInStatuses","cellInfos","_this11","_this12","_this13","isCandidate","countCandidates","candNums","getCandidateNums","pop","_this14","isWideRemoved","countNarrowCandidates","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_ref7","_ref6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref10","_ref9","isSelectable","address","markerNums","getNumsFromMarkerNums","isMarkerIndex","getNumFromMarkerNums","markerInfo","getNumArrayFromMarkerNums","ary","n","m","level","classTitle","capitalize","getSampleGameButtonId","levelId","gameInfo","getSampleGameInfo","gameNumMatrix","deepCopy","gameClass","convZero2Null","_levelId$split","split","_levelId$split2","langs","values","indexOf","crediteInfo","_arr","_i","_ref13","_ref12","key","replace","blkIndex","blockCellIndices","getBlkIndicesFromIdx","getNumbersFromIndices","getNumbersFromBlockIndex","blkNum","getNumbersFromBlockIdx","indices","_this15","cellIndices","_this16","colNums","_this17","_this18","rowBase","floor","colBase","getRowIndicesFromBlockIdx","getColIndicesFromBlockIdx","_this19","flipRCType","counterRC","shortIdxArray","_this20","rowIdxs","colIdxs","getCellIdxsFromMarkerIdx","removeWideSelectedCellIdxs","cellIdxs","_this21","isWideSelectedInCell","_this22","targetCellIndices","getCellIndices","isIdxInDuplicates","getRowIndicesFromIdx","getColIndicesFromIdx","blockIdx","getBlockIdxFromCellIdx","getBlkRowIndicesFromIdx","getBlkColIndicesFromIdx","removeSelectCells","_this23","rows2","getRowIndicesWithoutTheIdx","cols2","getColIndicesWithoutTheIdx","blks2","getBlockOnlyIndicesFromCellIdx","rows","cols","bIdx","nBlock","getBlkIndicesFromNum","rcbType","_this24","getCandidateCellIndices","cellIndicesTmp","removeDuplicatedIndices","unionCell","getRelatedIndices4union","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","prevStatus","_this25","relatedCellInfos","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop","counterRCType","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iterator10","blkIdxs","_arr2","_i2","blkSequence","getRowColWiseBlockIdxSequence","r1c1","r1c1n1","R1C12Index","_this26","getCellIndicesFromBlockId","index2R1C1","markerId","toLowerCase","_this27","cellIdx","blockSeq","getRelatedBlockIdxsFromCellIdx","markerIdxs","_arr3","_i3","blockIdxs","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_ref16","_ref15","infoArray","getInfoArrayFromMarkerNums","infos","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_ref19","_ref18","isReset","abs","isTheNumInMarker","findNumInMarker","getFirstNullIdx","sortMarkerNums","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_ref22","_ref21","targetMarkerInfo","_i4","mInfo","setMarkerNum","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","assignMarkerStatusSub","assignMarkerStatus","getMarkerStatus","rcInfo","sorted","shift","newNum","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_ref25","_ref24","markerStatus","markerTrace","findPreviousMarkerInfo","updateMarkerStatus","revMarkerTrace","matchedMarkerInfo","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","prevMInfo","isMatchTwoMarkers","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_ref28","_ref27","countNonZeroCells","_this28","rowInfo","_this29","colInfo","_this30","blkInfo","dupCellIndices","cellInfoArray","getCellInfoArrayFromIndices","nulllessCellInfoArray","removeNullsFromCellInfo","sort","isTwoIdxsSame","_this31","dup","findDuplicatedIndices","dupidx","ansMatrix","wrongIdxs","isMatrixAllNull","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","isNumCorrect","ans","isAllNull","elem","ary1","ary2","isSame","e1","removeDuplicatedNumbers","statusList","toConsumableArray","idx1","idx2","JSON","stringify","idxs1","idxs2","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_ref31","_ref30","_this32","directions","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_loop2","rcIdxs","isAllNumbersSame","v","_iterator24","_ret2","_this33","pairCell","exclusiveCandidates","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","exCand","blkIdx1","_this34","idxsArray","_this35","isInCellInfoArray","_this36","didx","blockNum","getIsDuplicatedFromIndices","_this37","appearanceMatrix","allCellIdxs","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","appendNum","assignAppearance","candidateLevel","_this38","removeTypes","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","getCandidateStatuses","combinedStatus","combineStatuses","isSelected","hasSelected","dataset","conditions","_this39","isStepByStep","isSkipIneffective","candidateTrace","prevMarkerTrace","getAllMarkerInfosFromTrace","expectedLength","getUnionSizes","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_loop3","candidateCells","getSingleNumCandidateCells","direction","convertRCType2Direction","targetCellInfo","convertCellInfo2MarkerInfo","isInExclusiveCandidates","isStatusWorth2Store","updateCellIdxs","_this39$assignCandida","assignCandidateStatus4SingleNum","_this39$assignCandida2","updateCellInfo","_this39$assignCandida3","_this39$assignCandida4","isCellsAllWideRemoved","_iterator28","_ret3","rcIdx","candidateIdxs","targetIdxs","_this40","untargetIdxs","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","_this$getSingleNumBTa","getSingleNumBTargetIdxs","_this$getSingleNumBTa2","getSingleNumBUntargetIdxs","_this$assignCandidate","_this$assignCandidate2","untargetCellInfo","_this$assignCandidate3","_this$assignCandidate4","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","candInfo","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","_ref34","_ref33","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","_ref37","_ref36","initCube","initMarkerNums","initDataset","setCandidates","traceItems","_dataset","isSkipLevel1","processType","helperLevel","setCandidatesLevel1","isAllWideSelected","getLevelNumFromFunctionName","loopNum","exclusiveCandidateLength","setSelectableA","setSelectableB","gameLevel","setSingleNumExclusiveCandidates","setExclusiveUnionA","setExclusiveUnionB","setSquareCandidates","setAssumptionTest","nLevel","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","_this$updateCandidate","updateCandidateOfTheCell","_this$updateRelatedCe","updateRelatedCells","singleNumValue","candidateTraceTmp","numSequence","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","_iteratorNormalCompletion37","_didIteratorError37","_iteratorError37","_step37","_iterator37","_this$updateCandidate3","_this$updateCandidate4","_this$updateRelatedCe3","_this$updateRelatedCe4","getMarkerIdxsFromCellIdx","_iteratorNormalCompletion38","_didIteratorError38","_iteratorError38","_step38","_iterator38","markerTraceTmp","_this$updateMarkerSta","updateMarkerStatus2Selectable","_this$updateMarkerSta2","initTraceItemCandidate","selectableCells","findSingleCandidateCellsB","_iteratorNormalCompletion39","_didIteratorError39","_iteratorError39","_step39","_iterator39","_this$updateCandidate5","_this$updateCandidate6","_this$updateRelatedCe5","_this$updateRelatedCe6","_iteratorNormalCompletion40","_didIteratorError40","_iteratorError40","_step40","_iterator40","_this$updateMarkerSta3","_this$updateMarkerSta4","_iteratorNormalCompletion41","_didIteratorError41","_iteratorError41","_step41","_iterator41","setSingleNumExclusiveCandidatesA","setSingleNumExclusiveCandidatesB","_this41","unionSizes","candNumMatrix","getCandidateNumMatrix","_iteratorNormalCompletion42","_didIteratorError42","_iteratorError42","_step42","_iterator42","_iteratorNormalCompletion43","_didIteratorError43","_iteratorError43","_step43","_iterator43","cellIndicesLength","_iteratorNormalCompletion44","_didIteratorError44","_iteratorError44","_step44","_loop4","candLengths","candidateCellIndices","countNumsInCandidateNumMatrix","unionCells","findExclusiveUnionA","console","log","_iteratorNormalCompletion45","_didIteratorError45","_iteratorError45","_step45","_iterator45","isInCellInfoArrayIgnoringRCBInfo","_this41$updateCandida","updateCandidates4UnionA","_this41$updateCandida2","_iteratorNormalCompletion46","_didIteratorError46","_iteratorError46","_step46","_iterator46","_this41$updateMarkerS","_this41$updateMarkerS2","_iterator44","_ret4","candIdxArray","_iteratorNormalCompletion47","_didIteratorError47","_iteratorError47","_step47","_iterator47","unionIdxs","numsUnion","getUnionNumbers","numArray","_iteratorNormalCompletion48","_didIteratorError48","_iteratorError48","_step48","_iterator48","_iteratorNormalCompletion49","_didIteratorError49","_iteratorError49","_step49","_iterator49","_iteratorNormalCompletion50","_didIteratorError50","_iteratorError50","_step50","_iterator50","extractCellInfoFromCandidate","cellLength","_iteratorNormalCompletion51","_didIteratorError51","_iteratorError51","_step51","_iterator51","unionCellArrayB","findExclusiveUnionB","_iteratorNormalCompletion52","_didIteratorError52","_iteratorError52","_step52","_iterator52","unionCellB","_this$updateCandidate7","updateCandidates4UnionB","_this$updateCandidate8","_iteratorNormalCompletion53","_didIteratorError53","_iteratorError53","_step53","_iterator53","_this$updateMarkerSta5","_this$updateMarkerSta6","targetCellInfos","_iteratorNormalCompletion54","_didIteratorError54","_iteratorError54","_step54","_iterator54","idxsUnion","getUnionIndices","_this42","squareNums","_iteratorNormalCompletion55","_didIteratorError55","_iteratorError55","_step55","_iterator55","rowcol","_iteratorNormalCompletion56","_didIteratorError56","_iteratorError56","_step56","_loop5","exclusiveSquareCandidates","isExclusiveSquare","_iteratorNormalCompletion57","_didIteratorError57","_iteratorError57","_step57","_iterator57","squareNum","getSquareTargetCells","squareCellInfoArray","findSquareCells","_iteratorNormalCompletion58","_didIteratorError58","_iteratorError58","_step58","_iterator58","squareCellInfo","isInExclusiveSquareCandidates","_this42$updateCandida","updateCandidates4Square","_this42$updateCandida2","_iterator56","_ret5","_this43","indexArray","_iteratorNormalCompletion59","_didIteratorError59","_iteratorError59","_step59","_iterator59","iRC","squareCellInfos","flipRowCol","_iteratorNormalCompletion60","_didIteratorError60","_iteratorError60","_step60","_iterator60","iSet","candidateRCIdxsArray","targetCellInfoSets","findAssumptionTest","_iteratorNormalCompletion61","_didIteratorError61","_iteratorError61","_step61","_iterator61","targetCellInfoSet","_iteratorNormalCompletion62","_didIteratorError62","_iteratorError62","_step62","_iterator62","_ref40","_ref39","_iteratorNormalCompletion63","_didIteratorError63","_iteratorError63","_step63","_iterator63","cInfo","inhibitedNum","assignRemovable2Candidates","assignAssumptionTest2Candidates","_this44","getNarrowCandidateNums","rectangles","getRectangleSet","_iteratorNormalCompletion64","_didIteratorError64","_iteratorError64","_step64","_iterator64","rectangle","getAssumptionTestCellInfo","rectangleSet","_loop6","pivotCellInfo","rowMemberCellInfos","colMemberCellInfos","_iteratorNormalCompletion65","_didIteratorError65","_iteratorError65","_step65","_loop7","rowCell","_iteratorNormalCompletion66","_didIteratorError66","_iteratorError66","_step66","_loop8","colCell","oppositeCellInfos","_iterator66","_iterator65","rectangleCellInfos","_this45","_iteratorNormalCompletion67","_didIteratorError67","_iteratorError67","_step67","_iterator67","_ref43","_ref42","aPair","counterPair","_iteratorNormalCompletion68","_didIteratorError68","_iteratorError68","_step68","_iterator68","_ref46","_ref45","pivotCell","oppositeCell","_iteratorNormalCompletion69","_didIteratorError69","_iteratorError69","_step69","_loop9","pNum","counterNums","isTwoArraysSame","_iterator69","_ret6","_iteratorNormalCompletion70","_didIteratorError70","_iteratorError70","_step70","_iterator70","markerTraceItem","markerInfoA","markerInfoB","targetTrace","getTraceItemsWithSelectables","_iteratorNormalCompletion71","_didIteratorError71","_iteratorError71","_step71","_iterator71","targetTraceItem","numTrace","_iteratorNormalCompletion72","_didIteratorError72","_iteratorError72","_step72","_iterator72","newCellInfo","isSelectableCellInfo","assignNum2NumMatrix","assignSelected2Candidates","_iteratorNormalCompletion73","_didIteratorError73","_iteratorError73","_step73","_iterator73","markerInfos4Trace","_Util$resetMarker","resetMarker","_Util$resetMarker2","isRemovableCellInfo","_iteratorNormalCompletion74","_didIteratorError74","_iteratorError74","_step74","_iterator74","isRemovable","assignRemoved2Candidates","_iteratorNormalCompletion75","_didIteratorError75","_iteratorError75","_step75","_iterator75","getSelectableIdx","_this$updateCandidate9","getTraceItemsWithRemovableWithoutSelectable","_iteratorNormalCompletion76","_didIteratorError76","_iteratorError76","_step76","_iterator76","_iteratorNormalCompletion77","_didIteratorError77","_iteratorError77","_step77","_iterator77","_iteratorNormalCompletion78","_didIteratorError78","_iteratorError78","_step78","_iterator78","isRemovable4erase","_i6","_iteratorNormalCompletion79","_didIteratorError79","_iteratorError79","_step79","_iterator79","cellInfo4num","_iteratorNormalCompletion80","_didIteratorError80","_iteratorError80","_step80","_iterator80","isWideExclusiveCandidate","assignCandidate2Candidates","excludingStatus","hasStatus","filterTraceItems","getRelatedCellInfo4unionA","_iteratorNormalCompletion81","_didIteratorError81","_iteratorError81","_step81","_iterator81","_iteratorNormalCompletion83","_didIteratorError83","_iteratorError83","_step83","_iterator83","_iteratorNormalCompletion82","_didIteratorError82","_iteratorError82","_step82","_iterator82","isCellAllWideRemoved","_iteratorNormalCompletion84","_didIteratorError84","_iteratorError84","_step84","_iterator84","_iteratorNormalCompletion86","_didIteratorError86","_iteratorError86","_step86","_iterator86","assignStatus","getRelatedCellInfo4unionB","removableTargetCellInfos","_i7","_iteratorNormalCompletion85","_didIteratorError85","_iteratorError85","_step85","_iterator85","_this46","counterDirection","squareIndices","rawRCIdxs","keyRCIdxs","unTargetCellInfos","_iteratorNormalCompletion87","_didIteratorError87","_iteratorError87","_step87","_iterator87","keyRCIdx","_iteratorNormalCompletion88","_didIteratorError88","_iteratorError88","_step88","_iterator88","_i8","assignExclusiveSquare2Candidates","_i9","_this47","singleCandidateCells","_iteratorNormalCompletion89","_didIteratorError89","_iteratorError89","_step89","_iterator89","_ref49","_ref48","_iteratorNormalCompletion90","_didIteratorError90","_iteratorError90","_step90","_loop10","_ref50","_ref51","cand","_iterator90","_ret7","_iteratorNormalCompletion91","_didIteratorError91","_iteratorError91","_step91","_iterator91","_this48","_iteratorNormalCompletion92","_didIteratorError92","_iteratorError92","_step92","_iterator92","_iteratorNormalCompletion93","_didIteratorError93","_iteratorError93","_step93","_iterator93","_ret8","_iteratorNormalCompletion94","_didIteratorError94","_iteratorError94","_step94","_iterator94","selectStatus","removeStatus","_iteratorNormalCompletion95","_didIteratorError95","_iteratorError95","_step95","_iterator95","isRemoved","relatedIndices","getRelatedIndicesBesidesItself","_iteratorNormalCompletion96","_didIteratorError96","_iteratorError96","_step96","_iterator96","_this$updateCandidate11","_this$updateCandidate12","_this$updateRelatedCe7","_this$updateRelatedCe8","_this49","having","_this50","isWideSelected","_this51","isCandidates","_this52","countWideRemoved","_this53","isWrong","isExclusiveDouble","isExclusiveTriple","candidateUpper","statusCandidateUpper","statusSelectable","statusRemovable","_this54","_iteratorNormalCompletion97","_didIteratorError97","_iteratorError97","_step97","_iterator97","_ref54","_ref53","_this55","isWideCandidate","candidateArray","_this56","_this57","isCandidateWithoutRemovable","_this58","filteredCellIndices","_this59","_iteratorNormalCompletion98","_didIteratorError98","_iteratorError98","_step98","_iterator98","_iteratorNormalCompletion99","_didIteratorError99","_iteratorError99","_step99","_iterator99","getRelatedCellIndicesByMarkerIdx","_iteratorNormalCompletion100","_didIteratorError100","_iteratorError100","_step100","_iterator100","_this$setSelectableA","setSelectableA2MarkerNums","_this$setSelectableA2","_this$setSelectableB","setSelectableB2MarkerNums","_this$setSelectableB2","_this60","relatedMarkerIdxs","_iteratorNormalCompletion101","_didIteratorError101","_iteratorError101","_step101","_iterator101","relatedMarkerIdx","relatedMarkerInfo","concerningCellInfos","getTargetCellIndicesByMarkerIdx","countNumInCandidates","assignSelectable2MarkerNums","selectableNum","getSelectableNum","_iteratorNormalCompletion102","_didIteratorError102","_iteratorError102","_step102","_iterator102","_this61","assignedNums","concernedCellIdxs","targetCellIdxs","isNumInCell","removableNums","_iteratorNormalCompletion103","_didIteratorError103","_iteratorError103","_step103","_iterator103","_iteratorNormalCompletion105","_didIteratorError105","_iteratorError105","_step105","_iterator105","_iteratorNormalCompletion104","_didIteratorError104","_iteratorError104","_step104","_iterator104","tmpMarkerInfo","assignExclusiveDouble2MarkerNums","assignExclusiveTriple2MarkerNums","doubleExclusiveCellIdxs","getWideCandidateNums","_iteratorNormalCompletion106","_didIteratorError106","_iteratorError106","_step106","_iterator106","unTargetIdxs","_iteratorNormalCompletion107","_didIteratorError107","_iteratorError107","_step107","_iterator107","targetCellInfos4nums2","isTwoIdxSetsSame","_iteratorNormalCompletion108","_didIteratorError108","_iteratorError108","_step108","_iterator108","selectableCellInfos","_iteratorNormalCompletion109","_didIteratorError109","_iteratorError109","_step109","_loop11","selectableCellInfo","removableCellIdxs","_iteratorNormalCompletion110","_didIteratorError110","_iteratorError110","_step110","_iterator110","_iterator109","oldStatus","newStatus","exclusive","_iteratorNormalCompletion111","_didIteratorError111","_iteratorError111","_step111","_iterator111","target","removingKeys","keyName","item","_iteratorNormalCompletion112","_didIteratorError112","_iteratorError112","_step112","_iterator112","exSquares","_this62","_iteratorNormalCompletion113","_didIteratorError113","_iteratorError113","_step113","_loop12","exSquare","tIdx","_iterator113","_ret9","x","max","_iteratorNormalCompletion114","_didIteratorError114","_iteratorError114","_step114","_iterator114","rcbTypes","s","isSubCell","functionName","str","numSet","numsArray","idxSet","charAt","prototype","apply","lines","convNull2Zero","join","data","_iteratorNormalCompletion115","_didIteratorError115","_iteratorError115","_step115","_iterator115","org","parse","filename","file","Blob","window","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","NumPanelBlock","blockClass","cellIdBase","cellClass","inhibitedClass","appearanceArray","onClickFunc","cellLabels","clsNames","getCellNumClass","cells","components_Cell","CellContainer","appearanceSubCellArray","appearanceSmallCell","onCellClick","handleCandidateCell","components_NumPanelBlock","Marker","getCells","cellLabel","_this$props2","rowColType","rowColClass","idBase","idBaseShort","rowColIdBase","abbreviateBlockId","wrapperId","wrapperClass","getBlockIdxFromBlockId","rowColNIndices","getBlkRowColIndicesFromIdx","cellIdBases","rowCols","nRC","BoardBlock","showFloating","handleNumInsert","handleMarkerCell","displayNums","blockWrapperId","getSingleCandidate","isSelectableCell","sudokuBoard_CellContainer","markOnClickFunc","sudokuBoard_Marker","SudokuBoard","numbers","getAppearanceMatrixFromCandidates","getAppearanceMatrixFromNumMatrix","blocks","getBlockIdByNum","isRegisteredArray","isDuplicatedArray","sudokuBoard_BoardBlock","NewGame","handleNewGame","SampleGames","sampleGameID","handleSampleGames","buttonSet","getSampleGameList","innerWrapperId","innerWrapperClass","buttons","_","buttonId","btnClsName","buttonTitle","getSampleGameButtonLabel","getSampleGameButtonTitle","Restart","handleRestart","SetUp","handleSetUp","ControlPanel","control_NewGame","control_SetUp","control_SampleGames","control_Restart","Check","getButton","handleCheck","myself","name","label","titleCaption","titleClassName","HelpModeButtons","handleHelpMode","buttonType","SingleNum","handleSingleNum","radios","labelDivClassName","labelClassName","toString","onChange","checked","MultipleNums","handleChange","event","handleMultipleNums","checkboxs","labelId","checkboxId","CandidateLevels","handleCandidateLevels","handleCandidates","getLevelNum","getCandidateLevelTitle","getCandidateLevelId","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkboxIsSkip","React","createRef","controlType","_activeSymbols","_disabledSymbols","_iconStyles","handleControls","activeSymbols","forwardLogo","fastForwardLogo","backwardLogo","rewindLogo","selectLogo","eraseLogo","disabledSymbols","forwardDisabledLogo","fastForwardDisabledLogo","backwardDisabledLogo","rewindDisabledLogo","selectDisabledLogo","eraseDisabledLogo","iconSizeSmall","iconSizeLarge","iconStyleSmall","width","height","iconStyleLarge","iconStyles","symbol","src","style","alt","getControlId","handleCheckbox","e","handleSkipIneffectiveStatus","currentTarget","setState","state","ref","NumCounter","getNumCounter","counterID","clsCounter","bars","barID","clsCounterBar","counters","HelpModePane","helpMode_MultipleNums","helpMode_SingleNum","helpMode_HelpModeButtons","helpMode_NumCounter","CandidatesLevels","helpMode_Controls","MarkerButton","handleMarker","LangButton","handleLang","theOtherLang","flipLang","HelpButton","handleHelp","handleHelpButton","fileName","path","open","Indicator","HelperlPanel","helper_Indicator","helper_Check","helpMode_HelpModePane","helper_MarkerButton","helper_HelpButton","helper_LangButton","Footer","getCredit","Delete","activeCellIndex","handleDelete","isNumInMarker","Cancel","handleCancel","NumPanelControl","floating_Delete","floating_Cancel","NumPanel","handleNumPanelClick","floating_NumPanelControl","Floating","showNumPanel","handleModalClick","_ref","modal","closeOnModalClick","mousePosition","isModal","doShow","position","left","top","y","display","floating_NumPanel","ShowMessage","show","isShowMessage","message","handleMessageModalClick","closeLogo","App","calcAnswer","isMarkerOff","convertSelectable2Selected","isAllFilled","addNumNStore","_this$state","prevState","addNum","checkDuplicate","checkCorrectness","countNumbers","_this$state2","prevNum","traceLength","updateCandidates","assignTruth2regMatrix","initRegInfo","initTraceItemNum","deleteNumNStore","deleteNum","isFilled","isComplete","isGameDone","addMarkerNStore","addMarker","_Util$setRelatedCandi","setRelatedCandidatesBySingleMark","_Util$setRelatedCandi2","_Util$setRelatedCandi3","setRelatedCandidatesByMultipleMarks","_Util$setRelatedCandi4","delMarker","newMarkerInfos","initTraceItemMarker","updateMarkerStatusNStore","getInfosFromMarkerNums","getRelatedMarkerIdxsFromCellIdx","getCorrespondingCellIdxs2MarkerIdx","relatedCellIdxs","_this$state3","duplcates","getElementById","blur","prevHelpMode","prevSingleNumValue","prevMultipleNums","stopCondition","doBackward","doInitSingleNum","doInitCandidates","doCheckDuplicates","_this$state4","_this$state5","handleSingleNumLevel","getSingleNumBtnId","doCandidates","_this$state6","initCandidates","_this$state7","_this$state8","index","_this$state9","cellAddress","getAttribute","isNaN","_this$state10","isMarkerAddress","markerId2Idx","doSelectSelectableCandidates","doForward","doEraseExclusiveColors","doBackwardNStore","_Util$eraseExclusiveC","eraseExclusiveColors","_Util$eraseExclusiveC2","selectSelectables","eraseRmovalbe","_this$state11","doEraseCandidates","isAll","stopCondtion","loopMax","datasetTmp","lastEvent","getNumInfoFromTraceItem","tmpCellInfo","getCandidateInfoFromTraceItem","traceBackCandidates","getMarkerInfoFromTraceItem","_Util$resetMarker3","_Util$resetMarker4","R1C1N12CellInfo","isLastCandidate","_Util$flipCandidateSt","flipCandidateStatus","_Util$flipCandidateSt2","targetMarkerIdx","concerningCellIdxs","flipMarkerStatus","handleStepBack","stepBack","handleClear","clear","origState","getInitialState","sampleLevel","sampleMatrix","getSampleMatrix","getRegisteredFlags","resetNumMatrix","_this$state12","_this$state13","clientX","clientY","didUpdate","min","_this$state14","successMessages","ceil","random","countManualInputs","control_ControlPanel","handleSave","sudokuBoard_SudokuBoard","HelperPanel","components_Footer","floating_Floating","floating_ShowMessage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c4ad42f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forward.92aa02a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/forwardDisabled.aa89f039.svg\";","module.exports = __webpack_public_path__ + \"static/media/fastForward.03cf5ac0.svg\";","module.exports = __webpack_public_path__ + \"static/media/fastForwardDisabled.93c696f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward.715f6885.svg\";","module.exports = __webpack_public_path__ + \"static/media/backwardDisabled.bef06159.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewind.6e7212f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewindDisabled.4ef08094.svg\";","module.exports = __webpack_public_path__ + \"static/media/select.3aa9aeb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectDisabled.421f9320.svg\";","module.exports = __webpack_public_path__ + \"static/media/erase.a96425d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraseDisabled.52d4ff05.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.37f834c1.svg\";","import React, { Component } from \"react\";\n\n// import Config from \"../Config\";\n// import Util from \"../Util\";\n\nimport \"../css/cell.css\";\nimport \"../css/cellColor.css\";\n\nclass Cell extends Component {\n  render() {\n    const { cellId, num, lastCandidate, clsName, onClick } = this.props;\n\n    return (\n      <div\n        id={cellId}\n        className={clsName}\n        data-num={lastCandidate}\n        onClick={onClick}\n      >\n        <span id={cellId + \"span\"}>{num}</span>\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","class Config {\n  static lang = {\n    en: \"en\",\n    ja: \"ja\"\n  };\n\n  static size = 9;\n  static sizeB = 3;\n  static numCells = Math.pow(Config.size, 2);\n\n  static maxLoopNum = 20;\n  static maxUnionSize = 4;\n  static maxSquareNum = 4;\n\n  // static footerClassName = \"App-footer\";\n\n  static traceTypes = {\n    numMatrix: \"numMatrix\",\n    candidate: \"candidate\",\n    marker: \"marker\"\n  };\n\n  static traceElementTypes = Object.assign(\n    { operation: \"operation\" },\n    Config.traceTypes\n  );\n\n  static operationTypes = {\n    manual: \"manual\",\n    auto: \"auto\"\n  };\n\n  static candidateTypes = {\n    displayCandidates: \"displayCandidates\",\n    removeByInsertedNum: \"removeByInsertedNum\",\n    singleCandidate: \"singleCandidate\",\n    singleExclusive: \"singleExclusive\",\n    multipleExclusive: \"multipleExclusive\",\n    square: \"square\",\n    assumptionTest: \"assumptionTest\"\n  };\n\n  static candidateLevelTypes = {\n    level0: Config.candidateTypes.displayCandidates,\n    level1: Config.candidateTypes.removeByInsertedNum,\n    level2: Config.candidateTypes.singleCandidate,\n    level3: Config.candidateTypes.singleExclusive,\n    level4: Config.candidateTypes.multipleExclusive,\n    level5: Config.candidateTypes.square,\n    level6: Config.candidateTypes.assumptionTest\n  };\n\n  static candidateLevelTypesArray = [\n    Config.candidateTypes.displayCandidates,\n    Config.candidateTypes.removeByInsertedNum,\n    Config.candidateTypes.singleCandidate,\n    Config.candidateTypes.singleExclusive,\n    Config.candidateTypes.multipleExclusive,\n    Config.candidateTypes.square,\n    Config.candidateTypes.assumptionTest\n  ];\n\n  static stepByStepLevels = [\n    Config.candidateLevelTypes.level2,\n    Config.candidateLevelTypes.level3,\n    Config.candidateLevelTypes.level4,\n    Config.candidateLevelTypes.level5,\n    Config.candidateLevelTypes.level6\n  ];\n\n  static candidateLevels = [\n    \"level0\",\n    \"level1\",\n    \"level2\",\n    \"level3\",\n    \"level4\",\n    \"level5\",\n    \"level6\"\n  ];\n\n  static restrictionTypes = {\n    row: \"row\",\n    column: \"col\",\n    col: \"col\",\n    block: \"blk\",\n    blk: \"blk\"\n  };\n\n  static restrictionTypesShort = {\n    row: \"r\",\n    r: \"r\",\n    column: \"c\",\n    col: \"c\",\n    c: \"c\",\n    block: \"b\",\n    blk: \"b\",\n    b: \"b\"\n  };\n\n  static restrictionTypesStraightArray = [\"row\", \"col\"];\n  static restrictionTypesStraightShortArray = [\"r\", \"c\"];\n  static restrictionTypesArray = [\n    ...Config.restrictionTypesStraightArray,\n    \"blk\"\n  ];\n\n  static invBRC = {\n    b: Config.restrictionTypes.blk,\n    r: Config.restrictionTypes.row,\n    c: Config.restrictionTypes.col\n  };\n\n  static mode = {\n    set: \"set\",\n    play: \"play\"\n  };\n\n  static helpMode = {\n    none: \"none\",\n    singleNum: \"singleNum\",\n    candidates: \"candidates\",\n    both: \"both\",\n    multipleNums: \"multipleNums\"\n  };\n\n  static helpModeArray4display = [\n    Config.helpMode.singleNum,\n    Config.helpMode.candidates\n  ];\n\n  static helpModeArray4displayOnMultipleNums = [\n    Config.helpMode.multipleNums,\n    Config.helpMode.candidates\n  ];\n\n  static helpModeArray = [\n    ...Config.helpModeArray4display,\n    Config.helpMode.none\n  ];\n\n  static updateHelpModes = [\n    ...Config.helpModeArray4display,\n    Config.helpMode.both,\n    Config.helpMode.multipleNums\n  ];\n\n  static checkMode = {\n    none: \"none\",\n    duplicates: \"duplicates\",\n    correctness: \"correctness\"\n  };\n\n  static checkModeArray = [\n    Config.checkMode.duplicates,\n    Config.checkMode.correctness\n  ];\n\n  static processTypes = {\n    insertion: \"insertion\",\n    candidates: \"candidates\",\n    singleNum: \"singleNum\"\n  };\n\n  static panelIds = {\n    sudokuBoard: \"sudokuBoard\",\n    block: \"block\",\n    cellContainerSuffix: \"Container\",\n    control: \"controlPanel\",\n    helper: \"helperPanel\",\n\n    numPanelContainer: \"numPanelContainer\",\n    numPanelWrapper: \"numPanelWrap\",\n    numPanel: \"numPanel\",\n    numPanelCell: \"N\",\n    numPanelControl: \"numPanelControl\",\n    messageWrapper: \"messageWrap\",\n\n    footer: \"footer\",\n    footerCredit: \"footerCredit\",\n\n    textForm: \"textForm\"\n  };\n\n  static panelClassNames = {\n    block: \"block\",\n    subBlock: \"subBlock\",\n    cell: \"cell\",\n    cellContainer: \"cellContainer\",\n    smallCell: \"smallCell\",\n    subCell: \"subCell\",\n    cellNum: \"num\",\n    control: \"controlPanel\",\n    helper: \"controlPanel\",\n    numPanelWrapper: \"float-wrap\",\n    messageWrapper: \"float-wrap-M\",\n\n    footer: \"App-footer\",\n    footerCredit: \"footerCredit\",\n\n    textForm: \"textForm\"\n  };\n\n  static panelTitles = {\n    header: {\n      en: \"Number Place Helper\",\n      ja: \"ナンプレ ヘルパー\"\n    },\n    helper: {\n      en: \"Helper\",\n      ja: \"ヘルパーパネル\"\n    },\n    control: {\n      en: \"Game Control\",\n      ja: \"ゲームパネル\"\n    },\n    textForm: \"Game Data\"\n  };\n\n  static buttonIds = {\n    // Game control //\n    newGame: \"newGame\",\n    sampleGameWrapper: \"sampleGameWrapper\",\n    sampleGameInnerWrapper: \"sampleGameInnerWrapper\",\n    sampleGame: \"sampleGame\",\n    setup: \"setup\",\n    save: \"save\",\n    restart: \"restart\",\n\n    // Helper //\n    check: \"check\",\n    checkWrapper: \"checkWrapper\",\n\n    singleNum: \"singleNumWrapper\",\n    singleNumRadio: \"radio\",\n    singleNumButton: \"singleNumButton\",\n\n    multipleNums: \"multipleNums\",\n    multipleNumsLabel: \"multipleNumsLabel\",\n    multipleNumsCheckbox: \"multipleNumsCheckbox\",\n\n    candidateWrapper: \"candidateWrapper\",\n    candidates: \"candidates\",\n    candidateLevels: \"candidateLevels\",\n\n    controlButtonWrapper: \"controlButtonWrapper\",\n    controls: \"controls\",\n    controlLabelSkipIneffective: \"controlLabelSkipIneffective\",\n\n    marker: \"marker\",\n\n    lang: \"lang\",\n    help: \"help\",\n\n    helperLableWrapper: \"helperLableWrapper\",\n    indicatorWrapper: \"indicatorWrapper\",\n    indicator: \"indicator\",\n\n    numCounterWrapper: \"numCounterWrapper\",\n    numCounter: \"numCounter\",\n    numCounterBar: \"numCounterBar\",\n\n    // Number Panel //\n    delete: \"delete\",\n    cancel: \"cancel\"\n  };\n\n  static buttonClassNames = {\n    // Game control //\n    newGame: \"controlButton\",\n\n    sampleGameFrame: \"controlButtonWrapper controlButton\",\n    sampleGameWrapper: \"sampleGameWrapper\",\n    sampleGameInnerWrapper: \"sampleGameInnerWrapper\",\n    sampleGameButton: \"sampleGameButton\",\n\n    setup: \"controlButton\",\n    save: \"controlButton\",\n    restart: \"controlButton\",\n\n    // Helper //\n    check: \"controlButton\",\n    checkTitle: \"controlTitle\",\n    checkButton: \"sampleGameButton\",\n\n    singleNumTitle: \"controlTitle\",\n    singleNumContainer: \"controlButtonWrapper controlButton\",\n    singleNumRadioWrapper: \"radioWrapper\",\n    singleNumButtonWrapper: \"candidateButtonWrapper\",\n    singleNumDisabled: \"inaccessible\",\n    singleNumDone: \"allDone\",\n    singleNumExceeding: \"exceeding\",\n    singleNumButton: \"sampleGameButton\",\n\n    multipleNumsContainer: \"controlButtonWrapper controlButton\",\n    multipleNumsCheckBoxWrapper: \"checkBoxWrapper\",\n    multipleNumsDisabled: \"inaccessible\",\n    multipleNumsDone: \"allDone\",\n    multipleNumsExceeding: \"exceeding\",\n\n    candidateTitle: \"controlTitle\",\n    candidateContainer: \"controlButtonWrapper controlButton\",\n    candidateButtonWrapper: \"candidateButtonWrapper\",\n    candidates: \"controlButton\",\n    candidateDisabled: \"inaccessible\",\n    candidateButton: \"sampleGameButton\",\n\n    controlSkipIneffective: \"controlCheckbox\",\n    marker: \"controlButton\",\n    lang: \"controlButton\",\n    help: \"controlButton\",\n\n    indicator: \"indicator\",\n    numCounter: \"numCounter\",\n    numCounterBar: \"numCounterBar\",\n\n    // Number Panel //\n    delete: \"controlButton\",\n    cancel: \"controlButton\"\n  };\n\n  static buttonStatus = {\n    waiting: \"waiting\",\n    active: \"active\",\n    disabled: \"disabled\"\n  };\n\n  static buttonTitles = {\n    // Game control //\n    newGame: {\n      en: \"New Game\",\n      ja: \"新しいゲーム\"\n    },\n    setup: {\n      en: \"Set & Play\",\n      ja: \"ゲームスタート\"\n    },\n    edit: {\n      en: \"Edit Game\",\n      ja: \"ゲームを修正する\"\n    },\n    sampleGames: {\n      en: \"Sample Games\",\n      ja: \"サンプルゲーム\"\n    },\n    restart: {\n      en: \"Restart\",\n      ja: \"再スタート\"\n    },\n    save: \"Save\",\n\n    // Helper //\n    check: \"Check\",\n    singleNum: \"Single Number\",\n    candidates: \"Candidates\",\n    controls: \"Controls\",\n    marker: {\n      en: \"Marker\",\n      ja: \"マーカー\"\n    },\n    help: {\n      en: \"Help\",\n      ja: \"ヘルプ\"\n    },\n\n    // Number Panel //\n    delete: \"Delete\",\n    cancel: \"Cancel\"\n  };\n\n  static langButtonTitles = {\n    en: \"English\",\n    ja: \"日本語\"\n  };\n\n  static helpModeButtonIds = {\n    container: \"helpModeContainer\",\n    wrapper: \"helpModeWrapper\",\n    title: \"helpModeTitle\",\n    none: \"cancelButton\",\n    candidates: \"candidatesButton\",\n    singleNum: \"singleNumButton\",\n    multipleNums: \"singleNumButton\"\n  };\n\n  static helpModeButtonClassNames = {\n    container: \"controlButtonWrapper controlButton\",\n    wrapper: \"candidateButtonWrapper\",\n    title: \"controlTitle\",\n    none: \"sampleGameButton\",\n    candidates: \"sampleGameButton\",\n    singleNum: \"sampleGameButton\",\n    multipleNums: \"sampleGameButton\"\n  };\n\n  static formNames = {\n    skipIneffective: \"skipIneffective\"\n  };\n\n  static candidateControls = {\n    reset: \"reset\",\n    backward: \"backward\",\n    forward: \"forward\",\n    fastForward: \"fastForward\",\n    select: \"select\",\n    erase: \"erase\"\n  };\n\n  static candidateActiveControls = {\n    singleNum: [\n      Config.candidateControls.reset,\n      Config.candidateControls.backward,\n      Config.candidateControls.forward,\n      Config.candidateControls.fastForward,\n      Config.candidateControls.select\n    ],\n    candidates: [Object.keys(Config.candidateControls)]\n  };\n\n  static candidateControlArray = [\n    Config.candidateControls.reset,\n    Config.candidateControls.backward,\n    Config.candidateControls.forward,\n    Config.candidateControls.fastForward,\n    Config.candidateControls.select,\n    Config.candidateControls.erase\n  ];\n\n  static candidateButtonGroupNames = [\"levels\", \"controls\"];\n\n  static candidateButtons = [\n    ...Config.candidateLevels,\n    ...Config.candidateControlArray\n  ];\n\n  static candidateStatus = {\n    assigned: \"assigned\",\n    selected: \"selected\",\n    selectable: \"selectable\",\n    candidate: \"candidate\",\n    exclusiveSingle: \"exclusiveSingleCandidate\",\n    exclusiveDouble: \"exclusiveDoubleCandidate\",\n    exclusiveTriple: \"exclusiveTripleCandidate\",\n    exclusiveQuadruple: \"exclusiveQuadrupleCandidate\",\n    exclusiveSquare: \"exclusiveSquareCandidate\",\n\n    assumptionTest: \"assumptionTest\",\n\n    removable: \"removable\",\n    removed: \"removed\",\n\n    shadowed: \"shadowed\",\n    weaklyShadowed: \"weaklyShadowed\",\n    inhibited: \"inhibited\"\n  };\n\n  static exclusiveMultiples4marker = [\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple\n  ];\n\n  static exclusiveTypes4marker = [\n    Config.candidateStatus.exclusiveSingle,\n    ...Config.exclusiveMultiples4marker\n  ];\n\n  static exclusiveMultiples = [\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple,\n    Config.candidateStatus.exclusiveQuadruple\n  ];\n\n  static narrowExclusiveStatuses = [\n    Config.candidateStatus.exclusiveSingle,\n    ...Config.exclusiveMultiples\n  ];\n\n  static exclusiveStatuses = [\n    ...Config.narrowExclusiveStatuses,\n    Config.candidateStatus.exclusiveSquare,\n    Config.candidateStatus.assumptionTest\n  ];\n\n  static wideExclusiveStatuses = [\n    Config.candidateStatus.selectable,\n    ...Config.exclusiveStatuses\n  ];\n\n  static selectedList = [\n    Config.candidateStatus.assigned,\n    Config.candidateStatus.selected\n  ];\n\n  static wideSelectedList = [\n    ...Config.selectedList,\n    Config.candidateStatus.selectable\n  ];\n\n  static wideRemovedList = [\n    Config.candidateStatus.removable,\n    Config.candidateStatus.removed\n  ];\n\n  static narrowCandidateList = [\n    Config.candidateStatus.candidate,\n    Config.candidateStatus.exclusiveSingle,\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple,\n    Config.candidateStatus.exclusiveQuadruple,\n    Config.candidateStatus.exclusiveSquare,\n    Config.candidateStatus.assumptionTest\n  ];\n\n  static markerRelatedExclusiveTypes = [\n    Config.candidateStatus.selectable,\n    Config.candidateStatus.exclusiveSingle,\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple\n  ];\n\n  static candidateList = [\n    ...Config.narrowCandidateList,\n    Config.candidateStatus.selectable\n  ];\n\n  static wideCandidateList = [\n    Config.candidateStatus.removable,\n    ...Config.candidateList\n  ];\n\n  static registered = \"registered\";\n  static duplicated = \"duplicated\";\n\n  static checkButtonLabels = {\n    title: {\n      en: \"Insertion Check\",\n      ja: \"入力チェック\"\n    },\n    none: {\n      en: \"Cancel\",\n      ja: \"キャンセル\"\n    },\n    duplicates: {\n      en: \"Duplicate\",\n      ja: \"重複\"\n    },\n    correctness: {\n      en: \"Correctness\",\n      ja: \"不正解\"\n    }\n  };\n\n  static checkTitleCaptions = {\n    none: {\n      en: \"Cancel Check Function\",\n      ja: \"チェック機能をオフにする\"\n    },\n    duplicates: {\n      en: \"Check Duplicates all the time\",\n      ja: \"重複を常時チェック\"\n    },\n    correctness: {\n      en: \"Check Correctness all the time\",\n      ja: \"正解と一致しない入力を常時チェック\"\n    }\n  };\n\n  static helpModeButtonLabels = {\n    title: {\n      en: \"Helper Functions\",\n      ja: \"ヘルパー機能\"\n    },\n    none: {\n      en: \"Cancel\",\n      ja: \"キャンセル\"\n    },\n    singleNum: {\n      en: \"Single Num\",\n      ja: \"単一数表示\"\n    },\n    multipleNums: {\n      en: \"Multi Nums\",\n      ja: \"複数数表示\"\n    },\n    candidates: {\n      en: \"Candidates\",\n      ja: \"候補表示\"\n    },\n    skipIneffective: {\n      en: \"Skip ineffective exclusives\",\n      ja: \"無効な排他的候補を非表示\"\n    }\n  };\n\n  static helpModeCaptions = {\n    none: {\n      en: \"Cancel the current helper function\",\n      ja: \"ヘルパー機能をオフにする\"\n    },\n    singleNum: {\n      en: \"Shadow numbers other than the selected number\",\n      ja: \"選択された数字のみ表示\"\n    },\n    candidates: {\n      en: \"Show candidates of cells\",\n      ja: \"候補の表示\"\n    },\n    both: {\n      en: \"Combine the single number and the candidates functions\",\n      ja: \"単一数表示と候補表示の同時利用\"\n    },\n    multipleNums: {\n      en: \"Show selected numbers with candidates\",\n      ja: \"複数数表示と候補表示の同時利用\"\n    }\n  };\n\n  static singleNumLevels = [\"level0\", \"level1\", \"level2\", \"level3\"];\n\n  static singleNumCaptions = {\n    level0: {\n      en: \"Shadow numbers other than the selected number\",\n      ja: \"選択した数字以外を目立たなくする\"\n    },\n    level1: {\n      en: \"Shadow cells inhibited by the number\",\n      ja: \"すでに盤上にある数字によって選択不可能なセルに影をつける\"\n    },\n    level2: {\n      en: \"Highlight selectable cells\",\n      ja: \"選択可能なセルを目立たせる\"\n    },\n    level3: {\n      en: \"Shadow cells constrained by the candidates in other blocks\",\n      ja: \"排他的な候補によって選択不可能なセルに影をつける\"\n    }\n  };\n\n  static candidateLevelCaptions = {\n    level0: {\n      en: \"Show a candidate panel in each cell\",\n      ja: \"候補を表示する\"\n    },\n    level1: {\n      en: \"Remove candidates inhibited by numbers on other cells\",\n      ja: \"すでに盤上にある数字によって選択不可能な数字を候補から削除する\"\n    },\n    level2: {\n      en: \"Highlight selectable candidates\",\n      ja: \"選択可能な候補を目立たせる\"\n    },\n    level3: {\n      en:\n        \"Highlight candidates constraining other cells by the selected single number\",\n      ja: \"排他的な単一数候補によって選択不可能なセルからその数字を削除する\"\n    },\n    level4: {\n      en: \"Highlight candidates constraining other cells by a few numbers\",\n      ja: \"複数の数による排他的候補を目立たせる\"\n    },\n    level5: {\n      en: \"Highlight square candidates\",\n      ja: \"井桁候補を目立たせる\"\n    },\n    level6: {\n      en: \"Highlight assumption-test candidates\",\n      ja: \"仮定-試験によって候補から除外される数字を表示する\"\n    }\n  };\n\n  static constrolIconCaptions = {\n    reset: {\n      en: \"Reset\",\n      ja: \"これまでの操作を無効にする\"\n    },\n    backward: {\n      en: \"Backward\",\n      ja: \"ヘルパー機能による表示をひとつ前に戻す\"\n    },\n    forward: {\n      en: \"Forward\",\n      ja: \"ヘルパー機能を進める\"\n    },\n    fastForward: {\n      en: \"Fast forward\",\n      ja: \"ヘルパー機能を可能な限り進める\"\n    },\n    select: {\n      en: \"Select all selectable candidates\",\n      ja: \"選択可能なセルを全て選択する\"\n    },\n    erase: {\n      en: \"Remove colors of exclusive candidates\",\n      ja: \"ヘルパー機能による色つけを解除する\"\n    }\n  };\n\n  static candidateControlIconSizes = {\n    small: \"14px\",\n    large: \"16px\"\n  };\n\n  static backwardStopCondition = {\n    wrongInsertion: \"wrongInsertion\",\n    numInsertion: \"numInsertion\"\n  };\n\n  static result = {\n    passed: \"passed\",\n    failed: \"failed\"\n  };\n\n  static messages = {\n    success: [\n      \"Complete!\",\n      \"Perfect!\",\n      \"Excellent!\",\n      \"Incredible!\",\n      \"Phenomenal!\",\n      \"Well done!\",\n      \"Good job!\",\n      \"Great!\",\n      \"Awesome!\",\n      \"Wonderful!\",\n      \"Bravo!\",\n      \"Amazing!\",\n      \"You did it!\",\n      \"You're genius!\"\n    ],\n    failure: \"There are some duplicates.\"\n  };\n\n  static alertMessages = {\n    duplicates: \"There are some duplicates.\",\n    deadEnd: \"A cell with no candidates.\",\n    wrongQuestion: \"This is insoluble.\"\n  };\n\n  static helpPath = \"./help/\";\n\n  static helpFiles = {\n    en: \"help_en.html\",\n    ja: \"help_ja.html\"\n  };\n\n  static dummyMatrix = [\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [4, 5, 6, 7, 8, 9, 1, 2, 3],\n    [7, 8, 9, 1, 2, 3, 4, 5, 6],\n    [2, 3, 4, 5, 6, 7, 8, 9, 1],\n    [5, 6, 7, 8, 9, 1, 2, 3, 4],\n    [8, 9, 1, 2, 3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7, 8, 9, 1, 2],\n    [6, 7, 8, 9, 1, 2, 3, 4, 5],\n    [9, 1, 2, 3, 4, 5, 6, null, null]\n  ];\n\n  static sampleGameClasses = {\n    beginner: \"beginner\",\n    easy: \"easy\",\n    medium: \"medium\",\n    hard: \"hard\",\n    xtreme: \"xtreme\"\n  };\n\n  static sampleGameClassList = [\n    Config.sampleGameClasses.beginner,\n    Config.sampleGameClasses.easy,\n    Config.sampleGameClasses.medium,\n    Config.sampleGameClasses.hard,\n    Config.sampleGameClasses.xtreme\n  ];\n\n  static sampleGameTitles = {\n    beginner: {\n      en: \"Beginner\",\n      ja: \"初心者\"\n    },\n    easy: {\n      en: \"Easy\",\n      ja: \"初級\"\n    },\n    medium: {\n      en: \"Medium\",\n      ja: \"中級\"\n    },\n    hard: {\n      en: \"Hard\",\n      ja: \"上級\"\n    },\n    xtreme: {\n      en: \"Extreme\",\n      ja: \"超上級\"\n    }\n  };\n\n  static sampleGames = {\n    [Config.sampleGameClassList[0]]: [\n      // {\n      //   credit: {\n      //     publisher: \"Byakuyasyobo\",\n      //     author: \"Akihiko Takise\",\n      //     book: \"Syokyu NumPra 12 Gatsugo\",\n      //     question: \"Q1\"\n      //   },\n      //   matrix: [\n      //     [8, 0, 0, 0, 0, 1, 0, 0, 6],\n      //     [0, 0, 0, 9, 0, 6, 0, 3, 0],\n      //     [0, 0, 0, 3, 4, 2, 1, 0, 0],\n      //     [0, 7, 4, 0, 0, 0, 2, 1, 9],\n      //     [0, 0, 8, 0, 5, 0, 4, 0, 0],\n      //     [9, 1, 3, 0, 0, 0, 8, 6, 0],\n      //     [0, 0, 5, 7, 1, 4, 0, 0, 0],\n      //     [0, 2, 0, 8, 0, 3, 0, 0, 0],\n      //     [1, 0, 0, 2, 0, 0, 0, 0, 4]\n      //   ]\n      // },\n      {\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [8, 0, 0, 0, 0, 1, 0, 0, 6],\n          [0, 0, 0, 9, 0, 6, 0, 3, 0],\n          [0, 0, 0, 3, 4, 2, 1, 0, 0],\n          [0, 7, 4, 0, 0, 0, 2, 1, 9],\n          [0, 0, 8, 0, 5, 0, 4, 0, 0],\n          [9, 1, 3, 0, 0, 0, 8, 6, 0],\n          [0, 0, 5, 7, 1, 4, 0, 0, 0],\n          [0, 2, 0, 8, 0, 3, 0, 0, 0],\n          [1, 0, 0, 2, 0, 0, 0, 0, 4]\n        ]\n      },\n      // Syokyu NumPre 12 Gatugo Q252\n      // [Config.sampleGameList[0]]:\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q252\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q252\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q252\"\n          }\n        },\n        matrix: [\n          [5, 0, 1, 0, 0, 0, 7, 0, 0],\n          [0, 0, 0, 0, 0, 3, 0, 0, 0],\n          [6, 0, 9, 0, 0, 7, 1, 0, 4],\n          [0, 0, 0, 0, 1, 0, 4, 3, 0],\n          [0, 0, 0, 7, 0, 6, 0, 0, 0],\n          [0, 2, 8, 0, 9, 0, 0, 0, 0],\n          [4, 0, 5, 6, 0, 0, 2, 0, 7],\n          [0, 0, 0, 9, 0, 0, 0, 0, 0],\n          [0, 0, 2, 0, 0, 0, 5, 0, 1]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q11\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q11\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q11\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 8, 0, 6, 0, 0, 3],\n          [0, 0, 2, 9, 0, 0, 7, 4, 0],\n          [0, 7, 0, 0, 4, 0, 0, 6, 0],\n          [6, 4, 0, 0, 1, 0, 0, 0, 7],\n          [0, 0, 7, 4, 0, 3, 1, 0, 0],\n          [5, 0, 0, 0, 6, 0, 0, 3, 2],\n          [0, 3, 0, 0, 2, 0, 0, 8, 0],\n          [0, 9, 1, 0, 0, 7, 6, 0, 0],\n          [2, 0, 0, 5, 0, 1, 0, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q200\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q200\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q200\"\n          }\n        },\n        matrix: [\n          [1, 0, 0, 0, 0, 0, 0, 0, 4],\n          [0, 9, 0, 8, 0, 2, 0, 0, 0],\n          [0, 0, 3, 0, 0, 9, 1, 0, 0],\n          [0, 6, 0, 0, 5, 0, 4, 1, 0],\n          [0, 0, 0, 3, 0, 6, 0, 0, 0],\n          [0, 8, 5, 0, 4, 0, 0, 3, 0],\n          [0, 0, 6, 5, 0, 0, 2, 0, 0],\n          [0, 0, 0, 6, 0, 7, 0, 5, 0],\n          [2, 0, 0, 0, 0, 0, 0, 0, 7]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Chukyu NumPra 2 Gatsugo\",\n        //   question: \"Q7\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q7\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"中級ナンプレ 2月号\",\n            question: \"Q7\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 6, 0, 0, 0, 1],\n          [0, 0, 1, 7, 0, 2, 0, 0, 0],\n          [0, 6, 0, 5, 0, 4, 0, 0, 0],\n          [0, 3, 2, 0, 0, 0, 8, 7, 0],\n          [9, 0, 0, 0, 5, 0, 0, 0, 6],\n          [0, 4, 5, 0, 0, 0, 3, 2, 0],\n          [0, 0, 0, 1, 0, 6, 0, 8, 0],\n          [0, 0, 0, 9, 0, 7, 2, 0, 0],\n          [3, 0, 0, 0, 8, 0, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[1]]: [\n      // {\n      //   credit: \"Tyukyu Numpla Feburary Q251\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 3, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 6, 0, 8, 0, 0],\n      //     [0, 8, 0, 5, 0, 2, 0, 4, 0],\n      //     [0, 0, 5, 0, 0, 3, 2, 0, 0],\n      //     [9, 2, 0, 0, 0, 0, 0, 3, 1],\n      //     [0, 0, 1, 4, 0, 0, 6, 0, 0],\n      //     [0, 3, 0, 9, 0, 7, 0, 6, 0],\n      //     [0, 0, 7, 0, 8, 0, 3, 0, 0],\n      //     [0, 0, 0, 0, 1, 0, 0, 0, 0]\n      //   ]\n      // },\n      // // Pocket sudoku 11 joukyuuhen Q1\n      // [Config.sampleGameList[1]]: {\n      // [Config.sampleGameList[1]]: {\n      //   {\n      //     credit: \"Tyukyu Numpla Feburary Q1\",\n      //     matrix: [\n      //       [0, 5, 0, 2, 0, 6, 0, 1, 0],\n      //       [3, 0, 0, 0, 4, 0, 0, 0, 6],\n      //       [0, 0, 2, 0, 0, 0, 0, 0, 0],\n      //       [9, 0, 0, 0, 8, 0, 0, 0, 5],\n      //       [0, 6, 0, 9, 7, 5, 0, 2, 0],\n      //       [2, 0, 0, 0, 6, 0, 0, 0, 1],\n      //       [0, 0, 0, 0, 0, 0, 7, 0, 0],\n      //       [1, 0, 0, 0, 5, 0, 0, 0, 9],\n      //       [0, 9, 0, 7, 0, 3, 0, 6, 0]\n      //     ]\n      //   }\n      {\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q1\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 0, 8, 3],\n          [0, 0, 1, 4, 0, 0, 0, 0, 0],\n          [0, 3, 0, 9, 0, 0, 5, 0, 0],\n          [0, 5, 7, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 2, 0, 6, 0],\n          [0, 0, 0, 0, 7, 0, 1, 0, 4],\n          [0, 0, 4, 0, 0, 7, 0, 0, 2],\n          [3, 0, 0, 0, 6, 0, 0, 0, 0],\n          [5, 0, 0, 0, 0, 8, 9, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q1\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 9, 7, 0],\n          [0, 0, 0, 0, 0, 0, 3, 8, 0],\n          [0, 0, 0, 9, 2, 0, 0, 0, 0],\n          [0, 0, 0, 7, 5, 0, 0, 9, 8],\n          [5, 6, 0, 0, 0, 0, 0, 3, 7],\n          [7, 3, 0, 0, 4, 8, 0, 0, 0],\n          [0, 0, 0, 0, 6, 9, 0, 0, 0],\n          [0, 7, 2, 0, 0, 0, 0, 0, 0],\n          [0, 8, 5, 0, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q2\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q2\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q2\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 2, 7, 0, 0, 0, 4],\n          [0, 0, 8, 0, 0, 0, 2, 0, 0],\n          [0, 5, 0, 0, 1, 0, 9, 0, 0],\n          [1, 0, 0, 0, 0, 0, 0, 5, 6],\n          [4, 0, 3, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 2, 0],\n          [0, 9, 6, 0, 0, 0, 0, 0, 3],\n          [0, 0, 0, 5, 0, 8, 0, 0, 0],\n          [8, 0, 0, 1, 0, 0, 6, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Pocket sudoku 11 jokyuhen Q11\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q11\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q11\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q11\"\n          }\n        },\n        matrix: [\n          [1, 0, 0, 7, 0, 0, 0, 6, 0],\n          [0, 7, 0, 0, 1, 0, 0, 0, 4],\n          [0, 0, 3, 0, 0, 2, 0, 0, 0],\n          [3, 0, 0, 5, 0, 0, 1, 0, 0],\n          [0, 2, 0, 0, 8, 0, 0, 7, 0],\n          [0, 0, 6, 0, 0, 3, 0, 0, 8],\n          [0, 0, 0, 4, 0, 0, 3, 0, 0],\n          [5, 0, 0, 0, 6, 0, 0, 1, 0],\n          [0, 1, 0, 0, 0, 8, 0, 0, 2]\n        ]\n      },\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q3\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q3\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q3\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q3\"\n          }\n        },\n        matrix: [\n          [0, 1, 0, 0, 0, 5, 0, 0, 0],\n          [0, 0, 5, 0, 2, 0, 3, 0, 4],\n          [0, 0, 0, 6, 0, 0, 0, 8, 0],\n          [5, 0, 0, 0, 7, 0, 4, 0, 0],\n          [0, 9, 0, 0, 0, 0, 0, 1, 0],\n          [0, 0, 2, 0, 5, 0, 0, 0, 6],\n          [0, 6, 0, 0, 0, 8, 0, 0, 0],\n          [8, 0, 7, 0, 3, 0, 2, 0, 0],\n          [0, 0, 0, 7, 0, 0, 0, 9, 0]\n        ]\n      },\n      {\n        // // credit: \"NumPra premium Zeus Q62\",\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q62\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q62\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q62\"\n          }\n        },\n        matrix: [\n          [0, 0, 2, 0, 7, 0, 6, 0, 0],\n          [0, 0, 0, 9, 0, 3, 0, 0, 0],\n          [0, 0, 5, 0, 0, 0, 3, 0, 1],\n          [9, 8, 0, 0, 0, 0, 0, 1, 0],\n          [0, 0, 0, 3, 0, 0, 0, 0, 7],\n          [0, 0, 0, 6, 4, 0, 0, 5, 0],\n          [0, 0, 1, 0, 0, 0, 7, 0, 2],\n          [0, 0, 0, 0, 0, 5, 0, 0, 0],\n          [4, 0, 0, 0, 0, 8, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[2]]: [\n      {\n        // // credit: \"Pocket sudoku 11 jokyuhen Q54\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q54\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q54\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q54\"\n          }\n        },\n        matrix: [\n          [0, 1, 0, 0, 3, 0, 0, 0, 8],\n          [4, 0, 0, 6, 0, 0, 0, 2, 0],\n          [0, 0, 9, 0, 0, 0, 5, 0, 0],\n          [0, 7, 0, 0, 0, 5, 0, 0, 0],\n          [1, 0, 0, 0, 8, 0, 0, 0, 3],\n          [0, 0, 0, 4, 0, 0, 0, 7, 0],\n          [0, 0, 6, 0, 0, 0, 9, 0, 0],\n          [0, 8, 0, 0, 0, 9, 0, 0, 1],\n          [7, 0, 0, 0, 2, 0, 0, 6, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      // {\n      //   credit: \"Gekikara Sudoku10 Q99\",\n      //   matrix: [\n      //     [0, 0, 2, 1, 0, 0, 0, 7, 6],\n      //     [0, 0, 3, 6, 0, 0, 0, 1, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [5, 7, 0, 0, 0, 3, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 8, 5, 0, 0, 0, 6, 2],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [8, 2, 0, 0, 0, 9, 3, 0, 0],\n      //     [4, 3, 0, 0, 0, 2, 6, 0, 0]\n      //   ]\n      // },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q79\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q79\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q79\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q79\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 0, 2, 1],\n          [0, 0, 0, 6, 0, 0, 3, 8, 0],\n          [0, 0, 7, 0, 0, 3, 5, 0, 0],\n          [0, 8, 0, 0, 5, 1, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 8, 2, 0, 0, 9, 0],\n          [0, 0, 2, 4, 0, 0, 7, 0, 0],\n          [0, 3, 9, 0, 0, 6, 0, 0, 0],\n          [8, 6, 0, 0, 0, 0, 0, 0, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Gekikara sudoku 10 Q87\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Rimu Takayura\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q87\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Rimu Takayura\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q87\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"高由良りむ\",\n            book: \"激辛数独 10\",\n            question: \"Q87\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 5, 0, 0, 7, 0, 0],\n          [0, 3, 0, 0, 0, 9, 0, 8, 0],\n          [5, 0, 8, 0, 0, 0, 9, 0, 0],\n          [0, 7, 0, 0, 2, 0, 0, 0, 8],\n          [0, 0, 0, 1, 0, 4, 0, 0, 0],\n          [9, 0, 0, 0, 7, 0, 0, 1, 0],\n          [0, 0, 6, 0, 0, 0, 5, 0, 9],\n          [0, 8, 0, 4, 0, 0, 0, 3, 0],\n          [0, 0, 7, 0, 0, 3, 0, 0, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Gekikara sudoku 10 Q97\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Anpai\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q97\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Anpai\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q97\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"あんぱい\",\n            book: \"激辛数独 10\",\n            question: \"Q97\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 1, 0, 5, 0],\n          [0, 0, 7, 0, 3, 0, 0, 0, 1],\n          [0, 6, 0, 2, 0, 0, 0, 0, 0],\n          [0, 0, 6, 0, 1, 0, 0, 0, 4],\n          [0, 5, 0, 6, 0, 7, 0, 2, 0],\n          [4, 0, 0, 0, 2, 0, 9, 0, 0],\n          [0, 0, 0, 0, 0, 8, 0, 3, 0],\n          [8, 0, 0, 0, 5, 0, 2, 0, 0],\n          [0, 1, 0, 9, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q103\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q103\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q103\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q103\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 6, 7, 0, 0],\n          [0, 2, 3, 0, 0, 0, 8, 9, 0],\n          [5, 9, 0, 0, 0, 0, 0, 6, 0],\n          [3, 0, 0, 6, 0, 2, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 9, 0, 1, 0, 0, 4],\n          [0, 3, 0, 0, 0, 0, 0, 1, 6],\n          [0, 1, 9, 0, 0, 0, 5, 7, 0],\n          [0, 0, 5, 2, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Gekikara Sudoku 10 103\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Susumu Kondo\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q103\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Susumu Kondo\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q103\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"近藤夲\",\n            book: \"激辛数独 10\",\n            question: \"Q103\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 7, 9, 0, 0],\n          [8, 4, 0, 0, 1, 0, 0, 0, 0],\n          [0, 1, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 2, 0, 0, 6, 0, 0],\n          [0, 3, 0, 0, 4, 0, 0, 5, 0],\n          [0, 0, 7, 0, 0, 9, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 3, 0],\n          [0, 0, 0, 0, 5, 0, 0, 4, 1],\n          [0, 0, 2, 6, 0, 0, 0, 0, 0]\n        ]\n      }\n    ],\n    // Gekikara Sudoku10 Q105\n    [Config.sampleGameClassList[3]]: [\n      {\n        // // credit: \"Gekikara Sudoku10 Q82\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Chibisukemaru\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q82\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Chibisukemaru\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q82\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"チビスケ丸\",\n            book: \"激辛数独 10\",\n            question: \"Q82\"\n          }\n        },\n        matrix: [\n          [0, 0, 1, 0, 5, 0, 0, 0, 9],\n          [4, 0, 0, 1, 0, 0, 2, 0, 0],\n          [0, 6, 0, 0, 0, 4, 0, 5, 0],\n          [9, 0, 0, 0, 0, 0, 7, 0, 0],\n          [0, 0, 0, 0, 1, 0, 0, 0, 0],\n          [0, 0, 4, 0, 0, 0, 0, 0, 3],\n          [0, 3, 0, 2, 0, 0, 0, 8, 0],\n          [0, 0, 9, 0, 0, 5, 0, 0, 7],\n          [8, 0, 0, 0, 3, 0, 4, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"Gekikara Sudoku 10 84\",\n      //   matrix: [\n      //     [0, 0, 1, 5, 0, 0, 0, 3, 0],\n      //     [0, 0, 0, 0, 0, 8, 7, 0, 0],\n      //     [0, 5, 0, 0, 4, 0, 0, 0, 0],\n      //     [0, 4, 0, 3, 0, 0, 0, 0, 9],\n      //     [1, 0, 0, 0, 0, 0, 0, 0, 6],\n      //     [8, 0, 0, 0, 0, 7, 0, 2, 0],\n      //     [0, 0, 0, 0, 3, 0, 0, 6, 0],\n      //     [0, 0, 5, 4, 0, 0, 0, 0, 0],\n      //     [0, 3, 0, 0, 0, 6, 9, 0, 0]\n      //   ]\n      // },\n      {\n        // // credit: \"ChoGekikara sudoku 4 15\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Nyoroppi\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q15\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Nyoroppi\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q15\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"にょろっぴぃ\",\n            book: \"超激辛数独 4\",\n            question: \"Q15\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 4, 9, 0, 0, 0],\n          [0, 3, 7, 0, 0, 0, 6, 1, 0],\n          [0, 9, 2, 0, 7, 0, 0, 5, 0],\n          [0, 7, 0, 9, 0, 0, 1, 8, 0],\n          [0, 0, 0, 0, 8, 0, 0, 0, 0],\n          [0, 1, 6, 0, 0, 4, 0, 7, 0],\n          [0, 8, 0, 0, 5, 0, 7, 9, 0],\n          [0, 2, 1, 0, 0, 0, 5, 3, 0],\n          [0, 0, 0, 3, 1, 0, 0, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"ChoGekikara sudoku 4 16\",\n      //   matrix: [\n      //     [0, 0, 0, 5, 0, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 3, 0, 1, 0, 0],\n      //     [0, 4, 0, 0, 0, 7, 0, 5, 0],\n      //     [0, 3, 0, 4, 0, 0, 0, 6, 0],\n      //     [0, 0, 1, 0, 0, 0, 2, 0, 0],\n      //     [0, 8, 0, 0, 0, 5, 0, 7, 0],\n      //     [0, 6, 0, 3, 0, 0, 0, 8, 0],\n      //     [0, 0, 8, 0, 2, 0, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 1, 0, 0, 0]\n      //   ]\n      // },\n      //   {\n      //     credit: \"ChoGekikara sudoku 4 18\",\n      //     matrix: [\n      //       [0, 0, 6, 2, 0, 0, 0, 7, 0],\n      //       [0, 8, 0, 0, 9, 0, 0, 0, 2],\n      //       [1, 0, 0, 0, 5, 0, 0, 0, 0],\n      //       [5, 0, 0, 9, 0, 0, 0, 0, 0],\n      //       [0, 6, 2, 0, 0, 0, 1, 4, 0],\n      //       [0, 0, 0, 0, 0, 3, 0, 0, 7],\n      //       [0, 0, 0, 0, 1, 0, 0, 0, 6],\n      //       [6, 0, 0, 0, 3, 0, 0, 8, 0],\n      //       [0, 5, 0, 0, 0, 4, 3, 0, 0]\n      //     ]\n      //   },\n      //   {\n      //     credit: \"ChoGekikara Sudoku 4 20\",\n      //     matrix: [\n      //       [0, 4, 0, 0, 0, 1, 0, 0, 2],\n      //       [9, 0, 0, 0, 5, 0, 1, 0, 0],\n      //       [0, 3, 0, 4, 0, 0, 0, 6, 0],\n      //       [0, 0, 3, 0, 0, 0, 0, 0, 5],\n      //       [0, 2, 0, 0, 0, 0, 0, 4, 0],\n      //       [7, 0, 0, 0, 0, 0, 3, 0, 0],\n      //       [0, 8, 0, 0, 0, 3, 0, 2, 0],\n      //       [0, 0, 9, 0, 2, 0, 0, 0, 1],\n      //       [6, 0, 0, 1, 0, 0, 0, 9, 0]\n      //     ]\n      //   },\n      {\n        // // credit: \"ChoGekikara Sudoku4 40\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Haasan\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q40\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Haasan\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q40\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"はあさん\",\n            book: \"超激辛数独 4\",\n            question: \"Q40\"\n          }\n        },\n        matrix: [\n          [7, 0, 0, 5, 0, 2, 0, 0, 9],\n          [0, 6, 0, 0, 9, 0, 0, 5, 0],\n          [0, 0, 2, 0, 0, 0, 8, 0, 0],\n          [0, 0, 0, 2, 0, 7, 0, 0, 0],\n          [0, 0, 0, 0, 5, 0, 0, 0, 0],\n          [0, 0, 0, 3, 0, 9, 0, 0, 0],\n          [0, 0, 5, 0, 0, 0, 7, 0, 0],\n          [0, 9, 0, 0, 8, 0, 0, 6, 0],\n          [4, 0, 0, 7, 0, 1, 0, 0, 3]\n        ]\n      },\n      {\n        // // credit: \"Gekikara Sudoku10 105\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Mitsuyuki Okuyama\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q105\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Mitsuyuki Okuyama\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q105\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"おく山みつゆき\",\n            book: \"激辛数独 10\",\n            question: \"Q105\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 0, 0, 3, 0],\n          [0, 0, 6, 0, 2, 0, 5, 0, 0],\n          [0, 2, 0, 0, 0, 4, 0, 0, 0],\n          [0, 0, 0, 9, 0, 0, 0, 7, 0],\n          [0, 0, 7, 0, 5, 0, 6, 0, 0],\n          [0, 4, 0, 0, 0, 8, 0, 0, 0],\n          [0, 0, 0, 8, 0, 0, 0, 9, 0],\n          [0, 0, 5, 0, 6, 0, 7, 0, 0],\n          [0, 8, 0, 0, 0, 9, 0, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"Gekikara Sudoku 10 99\",\n      //   matrix: [\n      //     [0, 0, 2, 1, 0, 0, 0, 7, 6],\n      //     [0, 0, 3, 6, 0, 0, 0, 1, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [5, 7, 0, 0, 0, 3, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 8, 5, 0, 0, 0, 6, 2],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [8, 2, 0, 0, 0, 9, 3, 0, 0],\n      //     [4, 3, 0, 0, 0, 2, 6, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku 10 101\",\n      //   matrix: [\n      //     [0, 0, 0, 7, 0, 8, 0, 6, 0],\n      //     [0, 0, 0, 0, 1, 0, 2, 0, 8],\n      //     [0, 0, 0, 0, 0, 6, 0, 7, 0],\n      //     [9, 0, 0, 0, 0, 0, 3, 0, 2],\n      //     [0, 6, 0, 0, 0, 0, 0, 9, 0],\n      //     [5, 0, 3, 0, 0, 0, 0, 0, 1],\n      //     [0, 4, 0, 3, 0, 0, 0, 0, 0],\n      //     [8, 0, 1, 0, 2, 0, 0, 0, 0],\n      //     [0, 7, 0, 8, 0, 9, 0, 0, 0]\n      //   ]\n      // }\n      {\n        // // credit: \"ChoGekikara Sudoku 4 Q84\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Aquablue\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q84\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Sakusaku\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q84\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"さくさく\",\n            book: \"超激辛数独 4\",\n            question: \"Q84\"\n          }\n        },\n        matrix: [\n          [2, 0, 0, 8, 0, 0, 0, 0, 3],\n          [0, 0, 7, 0, 0, 0, 9, 0, 0],\n          [0, 6, 0, 0, 9, 0, 0, 5, 0],\n          [1, 0, 0, 2, 0, 0, 0, 0, 0],\n          [0, 0, 4, 0, 5, 0, 6, 0, 0],\n          [0, 0, 0, 0, 0, 3, 0, 0, 1],\n          [0, 5, 0, 0, 8, 0, 0, 2, 0],\n          [0, 0, 6, 0, 0, 0, 5, 0, 0],\n          [3, 0, 0, 0, 0, 4, 0, 0, 8]\n        ]\n      },\n      {\n        // // credit: \"ChoGekikara Sudoku 4 Q85\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Okayusan\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q85\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Koki\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q85\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"Koki\",\n            book: \"超激辛数独 4\",\n            question: \"Q85\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 0, 0, 0, 0],\n          [0, 0, 2, 0, 1, 0, 9, 0, 0],\n          [0, 3, 0, 0, 0, 8, 0, 4, 0],\n          [0, 0, 1, 0, 0, 0, 0, 0, 2],\n          [0, 4, 0, 0, 0, 0, 0, 7, 0],\n          [9, 0, 0, 0, 0, 0, 5, 0, 0],\n          [0, 7, 0, 4, 0, 0, 0, 8, 0],\n          [0, 0, 5, 0, 9, 0, 2, 0, 0],\n          [0, 0, 0, 0, 0, 7, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[4]]: [\n      {\n        // // credit: \"ChoJokyu NumPla vol.12 Q201\",\n        // credit: {\n        //   publisher: \"Byakuyashobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"ChoJokyu NumPla vol.12\",\n        //   question: \"Q201\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyashobo\",\n            author: \"Akihiko Takise\",\n            book: \"ChoJokyu NumPla vol.12\",\n            question: \"Q201\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"超上級ナンプレ vol.12\",\n            question: \"Q201\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 4, 0, 0, 0],\n          [0, 0, 7, 0, 2, 0, 8, 4, 0],\n          [0, 2, 0, 9, 0, 0, 0, 6, 0],\n          [1, 0, 5, 0, 0, 0, 0, 0, 7],\n          [0, 7, 0, 0, 1, 0, 0, 2, 0],\n          [6, 0, 0, 0, 0, 0, 5, 0, 4],\n          [0, 6, 0, 0, 0, 7, 0, 3, 0],\n          [0, 4, 1, 0, 5, 0, 2, 0, 0],\n          [0, 0, 0, 2, 0, 3, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"ChoJokyu NumPla vol.12 Q202\",\n        // credit: {\n        //   publisher: \"Byakuyashobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"ChoJokyu NumPla vol.12\",\n        //   question: \"Q202\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyashobo\",\n            author: \"Akihiko Takise\",\n            book: \"ChoJokyu NumPla vol.12\",\n            question: \"Q202\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"超上級ナンプレ vol.12\",\n            question: \"Q202\"\n          }\n        },\n        matrix: [\n          [0, 2, 0, 0, 0, 9, 5, 0, 0],\n          [5, 8, 0, 0, 0, 0, 0, 4, 0],\n          [0, 0, 0, 0, 4, 0, 8, 0, 1],\n          [0, 0, 0, 1, 0, 8, 0, 0, 7],\n          [0, 0, 3, 0, 0, 0, 6, 0, 0],\n          [6, 0, 0, 3, 0, 7, 0, 0, 0],\n          [4, 0, 1, 0, 7, 0, 0, 0, 0],\n          [0, 6, 0, 0, 0, 0, 0, 3, 2],\n          [0, 0, 5, 4, 0, 0, 0, 1, 0]\n        ]\n      }\n      // {\n      //   credit: \"ChoGekikara Sudoku 4 68\",\n      //   matrix: [\n      //     [0, 4, 0, 0, 0, 8, 0, 0, 5],\n      //     [2, 0, 0, 4, 0, 0, 0, 7, 0],\n      //     [0, 0, 5, 0, 3, 0, 6, 0, 0],\n      //     [0, 7, 0, 0, 0, 5, 0, 0, 8],\n      //     [0, 0, 4, 0, 0, 0, 5, 0, 0],\n      //     [3, 0, 0, 6, 0, 0, 0, 1, 0],\n      //     [0, 0, 9, 0, 6, 0, 1, 0, 0],\n      //     [0, 1, 0, 0, 0, 2, 0, 0, 7],\n      //     [5, 0, 0, 7, 0, 0, 0, 2, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 88\",\n      //   matrix: [\n      //     [5, 0, 0, 0, 0, 0, 0, 0, 6],\n      //     [0, 0, 0, 8, 3, 6, 0, 0, 0],\n      //     [0, 0, 3, 0, 0, 0, 1, 0, 0],\n      //     [0, 7, 0, 5, 0, 2, 0, 4, 0],\n      //     [0, 3, 0, 0, 0, 0, 0, 1, 0],\n      //     [0, 8, 0, 3, 0, 9, 0, 2, 0],\n      //     [0, 0, 9, 0, 0, 0, 5, 0, 0],\n      //     [0, 0, 0, 2, 4, 8, 0, 0, 0],\n      //     [7, 0, 0, 0, 0, 0, 0, 0, 1]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 85\",\n      //   matrix: [\n      //     [2, 0, 0, 0, 3, 4, 0, 0, 0],\n      //     [0, 0, 0, 2, 0, 0, 0, 0, 7],\n      //     [0, 5, 0, 0, 0, 0, 6, 0, 0],\n      //     [0, 3, 0, 0, 0, 0, 8, 0, 0],\n      //     [0, 6, 0, 0, 2, 0, 0, 9, 0],\n      //     [0, 0, 8, 0, 0, 0, 0, 5, 0],\n      //     [0, 0, 5, 0, 0, 0, 0, 8, 0],\n      //     [4, 0, 0, 0, 0, 8, 0, 0, 0],\n      //     [0, 0, 0, 6, 7, 0, 0, 0, 3]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 20\",\n      //   matrix: [\n      //     [1, 0, 0, 0, 0, 9, 0, 0, 0],\n      //     [0, 2, 0, 7, 0, 0, 4, 0, 3],\n      //     [0, 0, 3, 0, 0, 0, 0, 6, 0],\n      //     [0, 9, 0, 4, 0, 0, 8, 0, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [3, 0, 1, 0, 0, 6, 0, 4, 0],\n      //     [0, 5, 0, 0, 0, 0, 7, 0, 0],\n      //     [6, 0, 2, 0, 0, 4, 0, 8, 0],\n      //     [0, 0, 0, 5, 0, 0, 0, 0, 9]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 37\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 1, 2, 0, 0],\n      //     [0, 0, 9, 6, 0, 0, 0, 3, 0],\n      //     [0, 0, 3, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 5, 3, 0, 0, 0, 6, 0],\n      //     [0, 0, 0, 0, 5, 0, 0, 0, 0],\n      //     [0, 4, 0, 0, 0, 2, 1, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 8, 0, 0],\n      //     [0, 2, 0, 0, 0, 8, 4, 0, 0],\n      //     [0, 0, 6, 9, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 33\",\n      //   matrix: [\n      //     [0, 0, 0, 1, 0, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 0, 0, 8, 0, 0],\n      //     [0, 6, 0, 0, 0, 8, 4, 9, 0],\n      //     [5, 0, 0, 0, 6, 0, 9, 0, 0],\n      //     [0, 0, 0, 4, 3, 1, 0, 0, 0],\n      //     [0, 0, 1, 0, 2, 0, 0, 0, 3],\n      //     [0, 2, 6, 9, 0, 0, 0, 5, 0],\n      //     [0, 0, 4, 0, 0, 0, 3, 0, 0],\n      //     [0, 0, 0, 0, 0, 6, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 32\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 3, 0, 0, 0, 4],\n      //     [0, 0, 4, 0, 0, 7, 0, 8, 0],\n      //     [0, 6, 5, 1, 0, 0, 0, 0, 0],\n      //     [0, 0, 7, 0, 0, 0, 0, 6, 0],\n      //     [2, 0, 0, 0, 1, 0, 0, 0, 3],\n      //     [0, 4, 0, 0, 0, 0, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 9, 5, 7, 0],\n      //     [0, 9, 0, 6, 0, 0, 1, 0, 0],\n      //     [8, 0, 0, 0, 2, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 26\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 6, 7, 8, 0],\n      //     [0, 0, 8, 0, 0, 0, 3, 0, 0],\n      //     [0, 2, 0, 4, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 4, 0, 5, 0],\n      //     [0, 0, 3, 0, 0, 0, 1, 0, 0],\n      //     [0, 1, 0, 5, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 8, 0, 4, 0],\n      //     [0, 0, 9, 0, 0, 0, 6, 0, 0],\n      //     [0, 3, 7, 1, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 25\",\n      //   matrix: [\n      //     [0, 0, 3, 0, 0, 9, 0, 0, 4],\n      //     [0, 0, 4, 0, 0, 8, 0, 0, 0],\n      //     [0, 0, 2, 0, 0, 0, 0, 7, 0],\n      //     [0, 0, 0, 0, 7, 0, 0, 6, 0],\n      //     [0, 7, 0, 0, 5, 0, 0, 2, 0],\n      //     [0, 1, 0, 0, 2, 0, 0, 0, 0],\n      //     [0, 8, 0, 0, 0, 0, 1, 0, 0],\n      //     [0, 0, 0, 4, 0, 0, 5, 0, 0],\n      //     [6, 0, 0, 3, 0, 0, 9, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: {\n      //     en: {\n      //       publisher: \"Nikoli\",\n      //       author: \"Tanpopo-gumi\",\n      //       book: \"ChoGekikara Sudoku 4\",\n      //       question: \"Q90\"\n      //     },\n      //     ja: {\n      //       publisher: \"ニコリ\",\n      //       author: \"たんぽぽ組\",\n      //       book: \"超激辛数独 4\",\n      //       question: \"Q90\"\n      //     }\n      //   },\n      //   matrix: [\n      //     [0, 0, 0, 6, 0, 8, 0, 4, 0],\n      //     [7, 0, 0, 1, 0, 4, 0, 0, 9],\n      //     [0, 0, 4, 0, 9, 0, 7, 0, 0],\n      //     [1, 9, 0, 0, 0, 0, 0, 7, 6],\n      //     [0, 0, 7, 0, 0, 0, 5, 0, 0],\n      //     [6, 4, 0, 0, 0, 0, 0, 3, 1],\n      //     [0, 0, 8, 0, 1, 0, 6, 0, 0],\n      //     [4, 0, 0, 8, 0, 6, 0, 0, 7],\n      //     [0, 2, 0, 5, 0, 7, 0, 0, 0]\n      //   ]\n      // }\n      // {\n      //   credit: \"\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n    ]\n  };\n\n  // static headerTitle = \"Number Place Helper\";\n\n  static creditTemplate = {\n    en:\n      \"__question__ in __book__ created by __author__ published by __publisher__\",\n    ja: \"__question__  __author__ 作成 (__book__, __publisher__ 出版)\"\n  };\n}\n\nexport default Config;\n","/**\n * Copyright 2012 Akseli Palén.\n * Created 2012-07-15.\n * Licensed under the MIT license.\n *\n * <license>\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files\n * (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software,\n * and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * </lisence>\n *\n * Implements functions to calculate combinations of elements in JS Arrays.\n *\n * Functions:\n *   k_combinations(set, k) -- Return all k-sized combinations in a set\n *   combinations(set) -- Return all combinations of the set\n */\n\n/**\n * K-combinations\n *\n * Get k-sized combinations of elements in a set.\n *\n * Usage:\n *   k_combinations(set, k)\n *\n * Parameters:\n *   set: Array of objects of any type. They are treated as unique.\n *   k: size of combinations to search for.\n *\n * Return:\n *   Array of found combinations, size of a combination is k.\n *\n * Examples:\n *\n *   k_combinations([1, 2, 3], 1)\n *   -> [[1], [2], [3]]\n *\n *   k_combinations([1, 2, 3], 2)\n *   -> [[1,2], [1,3], [2, 3]\n *\n *   k_combinations([1, 2, 3], 3)\n *   -> [[1, 2, 3]]\n *\n *   k_combinations([1, 2, 3], 4)\n *   -> []\n *\n *   k_combinations([1, 2, 3], 0)\n *   -> []\n *\n *   k_combinations([1, 2, 3], -1)\n *   -> []\n *\n *   k_combinations([], 0)\n *   -> []\n */\nfunction k_combinations(set, k) {\n  var i, j, combs, head, tailcombs;\n\n  // There is no way to take e.g. sets of 5 elements from\n  // a set of 4.\n  if (k > set.length || k <= 0) {\n    return [];\n  }\n\n  // K-sized set has only one K-sized subset.\n  if (k === set.length) {\n    return [set];\n  }\n\n  // There is N 1-sized subsets in a N-sized set.\n  if (k === 1) {\n    combs = [];\n    for (i = 0; i < set.length; i++) {\n      combs.push([set[i]]);\n    }\n    return combs;\n  }\n\n  // Assert {1 < k < set.length}\n\n  // Algorithm description:\n  // To get k-combinations of a set, we want to join each element\n  // with all (k-1)-combinations of the other elements. The set of\n  // these k-sized sets would be the desired result. However, as we\n  // represent sets with lists, we need to take duplicates into\n  // account. To avoid producing duplicates and also unnecessary\n  // computing, we use the following approach: each element i\n  // divides the list into three: the preceding elements, the\n  // current element i, and the subsequent elements. For the first\n  // element, the list of preceding elements is empty. For element i,\n  // we compute the (k-1)-computations of the subsequent elements,\n  // join each with the element i, and store the joined to the set of\n  // computed k-combinations. We do not need to take the preceding\n  // elements into account, because they have already been the i:th\n  // element so they are already computed and stored. When the length\n  // of the subsequent list drops below (k-1), we cannot find any\n  // (k-1)-combs, hence the upper limit for the iteration:\n  combs = [];\n  for (i = 0; i < set.length - k + 1; i++) {\n    // head is a list that includes only our current element.\n    head = set.slice(i, i + 1);\n    // We take smaller combinations from the subsequent elements\n    tailcombs = k_combinations(set.slice(i + 1), k - 1);\n    // For each (k-1)-combination we join it with the current\n    // and store it to the set of k-combinations.\n    for (j = 0; j < tailcombs.length; j++) {\n      combs.push(head.concat(tailcombs[j]));\n    }\n  }\n  return combs;\n}\n\n/**\n * Combinations\n *\n * Get all possible combinations of elements in a set.\n *\n * Usage:\n *   combinations(set)\n *\n * Examples:\n *\n *   combinations([1, 2, 3])\n *   -> [[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]]\n *\n *   combinations([1])\n *   -> [[1]]\n */\nfunction combinations(set) {\n  var k, i, combs, k_combs;\n  combs = [];\n\n  // Calculate all non-empty k-combinations\n  for (k = 1; k <= set.length; k++) {\n    k_combs = k_combinations(set, k);\n    for (i = 0; i < k_combs.length; i++) {\n      combs.push(k_combs[i]);\n    }\n  }\n  return combs;\n}\n\nexport { k_combinations, combinations };\n","import Config from \"./Config\";\n// import \"./util/ArrayPermutation\";\nimport { k_combinations } from \"./util/combinations\";\n\nclass Util {\n  // this might be useful for future //\n  // get key of an object from the value //\n  // Object.keys(x).find(key => x[key] === 2)\n\n  static getIndexSequence(N = Config.size) {\n    return Array.from(Array(N).keys());\n  }\n\n  static getRedundantIndexSequence() {\n    let idxSequence = this.getIndexSequence();\n    const redundant = this.getIndexSequence(Config.size - 1);\n    idxSequence = idxSequence.concat(redundant.reverse());\n    return idxSequence;\n  }\n\n  static getNsequence(N = Config.size) {\n    return this.getIndexSequence(N).map(i => i + 1);\n  }\n\n  static getBlockIdByNum(num) {\n    return Config.panelIds.block + num;\n  }\n\n  static getBlockNumFromBlockId(blockId) {\n    return parseInt(blockId.slice(-1));\n  }\n\n  static getBlockIdxFromBlockId(blockId) {\n    return this.getBlockNumFromBlockId(blockId) - 1;\n  }\n\n  static abbreviateBlockId(blockId) {\n    return blockId.slice(0, 1).toUpperCase() + blockId.slice(-1);\n  }\n\n  static initArray(val = null, len = Config.size) {\n    return new Array(len).fill(val);\n  }\n\n  static initMatrix(val = null, len = Config.size) {\n    return this.initArray(val, len).map(val => this.initArray(val, len));\n  }\n\n  static initCube(val = null, len = Config.size) {\n    return this.initArray(val, len).map(val => this.initMatrix(val, len));\n  }\n\n  static initNumPanelMatrix() {\n    const arr = this.getNsequence(Config.size);\n    const numPanelMatrix = [];\n    while (arr.length) numPanelMatrix.push(arr.splice(0, Config.sizeB));\n\n    return numPanelMatrix;\n  }\n\n  static initCellIdx(r = null, c = null) {\n    return { r, c };\n  }\n\n  static initCellInfo(\n    idxs = null,\n    nums = null,\n    status = null,\n    type = null,\n    rcbIdx = null,\n    unionSize = null,\n    isBackward = false\n  ) {\n    if (idxs !== null && idxs.constructor === Array) {\n      if (nums !== null && nums.constructor === Array) {\n        return {\n          idxs,\n          nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      } else {\n        return {\n          idxs: idxs,\n          num: nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      }\n    } else {\n      if (nums !== null && nums.constructor === Array) {\n        return {\n          idx: idxs,\n          nums: nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      }\n    }\n\n    return {\n      idx: idxs,\n      num: nums,\n      status,\n      type,\n      rcbIdx,\n      unionSize,\n      isBackward\n    };\n  }\n\n  static initRegInfo(idx, truth = true) {\n    return { idx, truth };\n  }\n\n  static initMarkerIdx(b = null, rcType = \"\", rc = null, i = null) {\n    return { b, rcType, rc, i };\n  }\n\n  static initMarkerInfo(idx, num = null, status = null) {\n    return { idx, num, status };\n  }\n\n  static initCheckboxArray(multipleNums) {\n    // console.log(\"inside initCheckboxArray\");\n\n    const checkedArray = Util.initArray(false, Config.size + 1);\n    multipleNums.forEach(num => (checkedArray[num] = true));\n\n    return checkedArray;\n  }\n\n  static getContentFromMatrix(matrix, idx) {\n    return matrix[idx.r][idx.c];\n  }\n\n  static getNumFromNumMatrix(numMatrix, idx) {\n    return this.getContentFromMatrix(numMatrix, idx);\n  }\n\n  static getCandidateStatusArray(candidates, idx) {\n    return this.getContentFromMatrix(candidates, idx);\n  }\n\n  static getCandidateStatus(candidates, cellInfo) {\n    if (\"idxs\" in cellInfo) {\n      return cellInfo.idxs.map(\n        idx =>\n          this.getCandidateStatusArray(candidates, idx)[this.n2i(cellInfo.num)]\n      );\n    } else if (\"idx\" in cellInfo) {\n      return this.getCandidateStatusArray(candidates, cellInfo.idx)[\n        this.n2i(cellInfo.num)\n      ];\n    }\n    return null;\n  }\n\n  static getCandidateStatuses(candidates, idx, nums) {\n    const statusArray = this.getCandidateStatusArray(candidates, idx);\n    return nums.map(num => statusArray[this.n2i(num)]);\n  }\n\n  static combineStatuses(targetStatuses) {\n    targetStatuses = targetStatuses.map(status =>\n      this.convertExclusive2Candidates(status)\n    );\n\n    if (targetStatuses.includes(Config.candidateStatus.selected)) {\n      return Config.candidateStatus.selected;\n    } else if (targetStatuses.includes(Config.candidateStatus.selectable)) {\n      return Config.candidateStatus.selectable;\n    } else if (targetStatuses.includes(Config.candidateStatus.candidate)) {\n      return Config.candidateStatus.candidate;\n    }\n\n    return Config.candidateStatus.removed;\n  }\n\n  static getNarrowCandidateNumsFromStatusArray(statusArray) {\n    // console.log(\"inside getNarrowCandidateNumsFromStatusArray\");\n\n    let candidateNums = [];\n\n    for (let [i, status] of statusArray.entries()) {\n      if (this.isNarrowCandidate(status)) {\n        candidateNums.push(this.i2n(i));\n      }\n    }\n\n    return candidateNums;\n  }\n\n  static getNarrowCandidateNumsFromCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n\n    return this.getNarrowCandidateNumsFromStatusArray(statuses);\n  }\n\n  static getCandidateNumMatrix(candidates) {\n    // console.log(\"inside getCandidateMatrix\");\n\n    return candidates.map(row =>\n      row.map(statuses => {\n        return this.getNarrowCandidateNumsFromStatusArray(statuses);\n      })\n    );\n  }\n\n  static getNumsFromCandidateNumMatrix(candidateNumMatrix, idx) {\n    // console.log(\"inside getNumsFromCandidateNumMatrix\");\n\n    return this.getContentFromMatrix(candidateNumMatrix, idx);\n  }\n\n  static countNumsInCandidateNumMatrix(candidateNumMatrix, idx) {\n    // console.log(\"inside countNumsInCandidateNumMatrix\");\n\n    return this.getNumsFromCandidateNumMatrix(candidateNumMatrix, idx).length;\n  }\n\n  static getAllCellIndicies() {\n    const idxArray = this.getIndexSequence();\n\n    let idxs = [];\n\n    for (let r of idxArray) {\n      for (let c of idxArray) {\n        idxs.push(this.initCellIdx(r, c));\n      }\n    }\n    return idxs;\n  }\n\n  static convertCellInfo2MarkerInfo(cellInfo) {\n    // console.log(\"inside convertCellInfo2MarkerInfo\");\n\n    let markerIdx = null;\n    if (this.isExclusiveSingle(cellInfo.status)) {\n      const rcType = this.getFirstLetter(cellInfo.type);\n\n      markerIdx = this.initMarkerIdx(\n        cellInfo.rcbIdx,\n        rcType,\n        cellInfo.idxs[0][rcType]\n      );\n    } else if (this.isExclusiveDoubleOrTriple(cellInfo.status)) {\n      if (cellInfo.type === Config.restrictionTypes.blk) {\n        const rcType = this.isInSameRowCol(cellInfo.idxs);\n\n        if (rcType) {\n          markerIdx = this.initMarkerIdx(\n            cellInfo.rcbIdx,\n            rcType,\n            cellInfo.idxs[0][rcType]\n          );\n        }\n      } else {\n        const blkIdx = this.isInSameBlock(cellInfo.idxs);\n\n        if (typeof blkIdx === \"number\") {\n          markerIdx = this.initMarkerIdx(\n            blkIdx,\n            this.getFirstLetter(cellInfo.type),\n            cellInfo.rcbIdx\n          );\n        }\n      }\n    } else {\n      return null;\n    }\n\n    if (markerIdx === null) {\n      return null;\n    }\n\n    if (cellInfo.num) {\n      return this.initMarkerInfo(markerIdx, cellInfo.num, cellInfo.status);\n    }\n\n    return cellInfo.nums.map(num =>\n      this.initMarkerInfo(markerIdx, num, cellInfo.status)\n    );\n  }\n\n  static initTraceItem(\n    numInfo = null,\n    candInfoArray = [],\n    markerInfoArray = [],\n    operation = Config.operationTypes.manual\n  ) {\n    // // console.log(\"inside initTraceItem\");\n\n    if (candInfoArray && candInfoArray.constructor !== Array) {\n      candInfoArray = [candInfoArray];\n    }\n    if (markerInfoArray && markerInfoArray.constructor !== Array) {\n      markerInfoArray = [markerInfoArray];\n    }\n\n    return {\n      [Config.traceTypes.numMatrix]: numInfo,\n      [Config.traceTypes.candidate]: candInfoArray,\n      [Config.traceTypes.marker]: markerInfoArray,\n      [Config.traceElementTypes.operation]: operation\n    };\n  }\n\n  static initTraceItemNum(\n    numInfo = null,\n    operation = Config.operationTypes.manual\n  ) {\n    return this.initTraceItem(numInfo, null, null, operation);\n  }\n\n  static initTraceItemCandidate(\n    candInfos = null,\n    operation = Config.operationTypes.manual\n  ) {\n    if (candInfos.constructor === Array) {\n      return this.initTraceItem(null, candInfos, null, operation);\n    }\n    return this.initTraceItem(null, [candInfos], null, operation);\n  }\n\n  static initTraceItemMarker(\n    markerInfos = null,\n    operation = Config.operationTypes.manual\n  ) {\n    if (markerInfos.constructor === Array) {\n      return this.initTraceItem(null, null, markerInfos, operation);\n    }\n    return this.initTraceItem(null, null, [markerInfos], operation);\n  }\n\n  static initMarkerNums() {\n    // console.log(\"inside initMarkerNums\");\n\n    const markerNums = this.getIndexSequence().map(blkIdx => {\n      return [\"r\", \"c\"].reduce((idxs, rcType) => {\n        idxs[rcType] = this.getRowColIndicesFromBlockIdx(blkIdx, rcType).reduce(\n          (dic, r) => {\n            dic[r] = {\n              nums: this.initArray(null, Config.sizeB),\n              statuses: this.initArray(null, Config.sizeB)\n            };\n            return dic;\n          },\n          {}\n        );\n        return idxs;\n      }, {});\n    });\n\n    return markerNums;\n  }\n\n  static assignNum2NumMatrix(numMatrix, cellInfo) {\n    const idx = cellInfo.idx;\n    numMatrix[idx.r][idx.c] = cellInfo.num;\n    return numMatrix;\n  }\n\n  static assignTruth2regMatrix(regMatrix, cellInfo) {\n    const idx = cellInfo.idx;\n\n    regMatrix[idx.r][idx.c] = cellInfo.truth;\n    return regMatrix;\n  }\n\n  static assignAppearance(appMatrix, idx, appearance) {\n    appMatrix[idx.r][idx.c] = appearance;\n    return appMatrix;\n  }\n\n  static resetNumMatrix(numMatrix, isRegisteredMatrix) {\n    isRegisteredMatrix.forEach((regRow, r) => {\n      regRow.forEach((isRegistered, c) => {\n        if (!isRegistered) {\n          numMatrix[r][c] = null;\n        }\n      });\n    });\n\n    return numMatrix;\n  }\n\n  static assignStatus2Candidates(candidates, cellInfo, status) {\n    // console.log(\"inside assignCandidates\");\n\n    const idx = cellInfo.idx;\n    const num = cellInfo.num;\n\n    candidates[idx.r][idx.c][Util.n2i(num)] = status;\n\n    return candidates;\n  }\n\n  static assignCandidate2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.candidate\n    );\n  }\n\n  static assignSelected2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.selected\n    );\n  }\n\n  static assignSelectable2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static assignExclusiveSingle2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveSingle\n    );\n  }\n\n  static assignExclusiveDouble2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveDouble\n    );\n  }\n\n  static assignExclusiveTriple2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveTriple\n    );\n  }\n\n  static assignExclusiveQuadruple2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveQuadruple\n    );\n  }\n\n  static assignExclusiveSquare2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveSquare\n    );\n  }\n\n  static assignAssumptionTest2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.assumptionTest\n    );\n  }\n\n  static assignRemovable2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.removable\n    );\n  }\n\n  static assignRemoved2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.removed\n    );\n  }\n\n  static assignCandidateStatus4SingleNum(candidates, cellInfo, status) {\n    if (!(\"idxs\" in cellInfo)) {\n      return [candidates, null];\n    }\n\n    cellInfo.prevStatuses = [];\n    for (let idx of cellInfo.idxs) {\n      const cellInfoSub = this.initCellInfo(idx, cellInfo.num);\n\n      cellInfo.prevStatuses.push(\n        this.getCandidateStatus(candidates, cellInfoSub)\n      );\n\n      candidates = this.assignStatus2Candidates(\n        candidates,\n        cellInfoSub,\n        status\n      );\n    }\n\n    return [candidates, cellInfo];\n  }\n\n  static resetCandidateStatuses(candidates) {\n    return candidates.map(row =>\n      row.map(cell =>\n        cell.map(status =>\n          this.isNarrowCandidate(status)\n            ? Config.candidateStatus.candidate\n            : status\n        )\n      )\n    );\n  }\n\n  static getNumInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.numMatrix];\n  }\n\n  static getCandidateInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.candidate];\n  }\n\n  static getMarkerInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.marker];\n  }\n\n  static getAllParticularInfosFromTrace(trace, infoType) {\n    let particularTrace = trace.map(traceItem => traceItem[infoType]);\n    particularTrace = particularTrace.filter(\n      particularTraceItem => particularTraceItem\n    );\n\n    if (infoType === Config.traceTypes.numMatrix) {\n      return particularTrace;\n    }\n\n    return this.flattenMatrix2Array(particularTrace);\n  }\n\n  static getAllNumInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(\n      trace,\n      Config.traceTypes.numMatrix\n    );\n  }\n\n  static getAllCandidateInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(\n      trace,\n      Config.traceTypes.candidate\n    );\n  }\n\n  static getAllMarkerInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(trace, Config.traceTypes.marker);\n  }\n\n  static countNumbers(numMatrix) {\n    let numCounts = this.initArray(0, Config.size + 1);\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      const val = this.getNumFromNumMatrix(numMatrix, idx);\n      if (val) {\n        numCounts[val]++;\n      }\n    }\n\n    return numCounts;\n  }\n\n  static isAllWideSelected(candidates) {\n    // console.log(\"inside isAllWideSelected\");\n\n    return (\n      Config.numCells === this.countWideSelectedCellsInCandidates(candidates)\n    );\n  }\n\n  static countWideSelectedCellsInCandidates(candidates) {\n    // console.log(\"inside countWideSelectInCandidates\");\n\n    const candArray = this.flattenMatrix2Array(candidates);\n\n    const countWideSelected = candArray.reduce(\n      (count, candCell) => count + this.isWideSelectedInStatuses(candCell),\n      0\n    );\n\n    return countWideSelected;\n  }\n\n  static countNumInCandidates(candidates, cellInfos) {\n    const candidateCells = cellInfos.filter(cellInfo =>\n      this.isNarrowCandidate(this.getCandidateStatus(candidates, cellInfo))\n    );\n\n    return candidateCells.length;\n  }\n\n  static countNarrowCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.reduce(\n      (count, status) => count + this.isNarrowCandidate(status),\n      0\n    );\n  }\n\n  static countCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.reduce(\n      (count, status) => count + this.isCandidate(status),\n      0\n    );\n  }\n\n  static isSingleCandidate(candidates, idx) {\n    return this.countCandidates(candidates, idx) === 1;\n  }\n\n  static getSingleCandidate(candidates, idx) {\n    let candNums = this.getCandidateNums(candidates, idx);\n    if (candNums.length === 1) {\n      return candNums.pop();\n    }\n    return null;\n  }\n\n  static countWideRemoved(candidates, idx) {\n    return this.getCandidateStatusArray(candidates, idx).reduce(\n      (count, status) => count + this.isWideRemoved(status),\n      0\n    );\n  }\n\n  static countManualInputs(trace) {\n    // console.log(\"inside countManualInputs\");\n\n    return trace.filter(\n      traceItem => traceItem.operation === Config.operationTypes.manual\n    ).length;\n  }\n\n  static getSelectableNum(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    if (this.countNarrowCandidates(candidates, idx) === 1) {\n      for (let [i, status] of statuses.entries()) {\n        if (this.isNarrowCandidate(status)) {\n          return this.i2n(i);\n        }\n      }\n    }\n    return null;\n  }\n\n  static getSelectableIdx(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    for (let [i, status] of statuses.entries()) {\n      if (this.isSelectable(status)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  static isNumInCell(numMatrix, idx) {\n    // console.log(\"inside isNumInCell function in Util.js\");\n\n    if (idx && idx.r !== null && idx.c !== null) {\n      return !!numMatrix[idx.r][idx.c];\n    }\n    return false;\n  }\n\n  static isMarkerAddress(address) {\n    return Util.getFirstLetter(address) === \"B\";\n  }\n\n  static isMarkerIndex(idx) {\n    return typeof idx.b !== \"undefined\";\n  }\n\n  static hasNumInMarker(markerNums, idx) {\n    const nums = this.getNumsFromMarkerNums(markerNums, idx);\n    return nums.length > 0;\n  }\n\n  static isNumInMarker(markerNums, idx) {\n    if (idx && this.isMarkerIndex(idx)) {\n      return !!this.getNumFromMarkerNums(markerNums, idx);\n    }\n    return false;\n  }\n\n  static isTheNumInMarker(markerNums, markerInfo) {\n    // console.log(\"inside isTheNumInMarker\");\n\n    const idx = markerInfo.idx;\n    if (idx && this.isMarkerIndex(idx) && markerInfo.num !== null) {\n      const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n      return nums.includes(markerInfo.num);\n    }\n    return false;\n  }\n\n  static sumArray(ary) {\n    return ary.reduce((a, b) => a + b, 0);\n  }\n\n  static n2i(n) {\n    return n - 1;\n  }\n\n  static i2n(i) {\n    return i + 1;\n  }\n\n  // count cells assigned a number to check all cells are filled with numbers //\n  static countNonZeroCells(numMatrix) {\n    return numMatrix\n      .reduce((a, b) => a.concat(b))\n      .map(a => a > 0)\n      .reduce((a, b) => a + b, 0);\n  }\n\n  // convert elements of a matrix from empty to null //\n  static convEmpty2Null(m) {\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        if (!m[r][c]) {\n          m[r][c] = null;\n        }\n      }\n    }\n    return m;\n  }\n\n  // convert elements of a matrix from zero to null //\n  static convZero2Null(m) {\n    // const allIdxs = this.getAllCellIndicies();\n\n    // for (let idx of allIdxs) {\n    //   const val = this.getNumFromNumMatrix(m, idx);\n    //   if (!val) {\n    //     m = this.assignNum2NumMatrix(m, this.initCellInfo(idx, null));\n    //   }\n    // }\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        // if (!m[r][c] || m[r][c] === 0) {\n        if (!m[r][c]) {\n          m[r][c] = null;\n        }\n      }\n    }\n    return m;\n  }\n\n  static convNull2Zero(m) {\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        // if (!m[r][c] || m[r][c] === null) {\n        if (!m[r][c]) {\n          m[r][c] = 0;\n        }\n      }\n    }\n    return m;\n  }\n\n  static getSampleGameList() {\n    return Config.sampleGameClassList;\n  }\n\n  static getDummyMatrix() {\n    return Config.dummyMatrix;\n  }\n\n  static getSampleGameButtonId(level, i) {\n    return level + \"-\" + this.i2n(i);\n  }\n\n  static getSampleGameButtonLabel(level, i) {\n    return this.getFirstLetter(level).toUpperCase() + this.i2n(i);\n  }\n\n  static getSampleGameButtonTitle(level, i, lang = \"en\") {\n    const classTitle = Config.sampleGameTitles[level][lang];\n    return this.capitalize(this.getSampleGameButtonId(classTitle, i));\n  }\n\n  static getSampleMatrix(levelId) {\n    // console.log(\"inside levelId\");\n\n    const gameInfo = this.getSampleGameInfo(levelId);\n\n    const gameNumMatrix = this.deepCopy(\n      Config.sampleGames[gameInfo.gameClass][gameInfo.idx].matrix\n    );\n\n    return this.convZero2Null(gameNumMatrix);\n  }\n\n  static getSampleGameInfo(levelId) {\n    if (!levelId) {\n      return null;\n    }\n\n    const [gameClass, n] = levelId.split(\"-\");\n    return {\n      gameClass,\n      idx: parseInt(this.n2i(n))\n    };\n  }\n\n  static flipLang(lang) {\n    // console.log(\"inside flipLang\");\n\n    const langs = Object.values(Config.lang);\n    const idx = langs.indexOf(lang);\n\n    return langs[idx ? 0 : 1];\n  }\n\n  static getCredit(crediteInfo, lang) {\n    // console.log(\"inside getCredit\");\n\n    let credit = Config.creditTemplate[lang];\n\n    for (let [key, val] of Object.entries(crediteInfo)) {\n      credit = credit.replace(\"__\" + key + \"__\", val);\n    }\n\n    return credit;\n  }\n\n  // return flags to distinguish originally set numbers for a game //\n  static getRegisteredFlags(numMatrix) {\n    return numMatrix.map(row => row.map(num => num !== null));\n  }\n\n  // return numbers in a block assigned by index (0-8) as an array (obsolete?) //\n  static getNumbersFromBlockIndex(m, blkIndex) {\n    const blockCellIndices = this.getBlkIndicesFromIdx(blkIndex);\n\n    // // should use map function //\n    // let blkNums = [];\n    // blockCellIndices.forEach(idx => {\n    //   // blkNums.push(m[idx.r][idx.c]);\n    //   blkNums.push(this.getNumFromNumMatrix(m, idx));\n    // });\n    // return blkNums;\n\n    return this.getNumbersFromIndices(m, blockCellIndices);\n  }\n\n  // return numbers in a block assigned by number (1-9) as an array (obsolete?) //\n  static getNumbersFromBlockIdx(m, blkIdx) {\n    // return this.getNumbersFromBlockIndex(m, blkNum - 1);\n    return this.getNumbersFromBlockIndex(m, blkIdx);\n  }\n\n  static getNumbersFromBlockNum(m, blkNum) {\n    // return this.getNumbersFromBlockIndex(m, blkNum - 1);\n    // return this.getNumbersFromBlockIndex(m, this.n2i(blkNum));\n    return this.getNumbersFromBlockIdx(m, this.n2i(blkNum));\n  }\n\n  // return numbers of an element assigned by the indices //\n  static getNumbersFromIndices(m, indices) {\n    // console.log(\"inside getNumbersFromIndices\");\n\n    // return indices.map(idx => m[idx.r][idx.c]);\n    return indices.map(idx => this.getNumFromNumMatrix(m, idx));\n  }\n\n  // return cellInfo (number and the index of the matrix) //\n  static getCellInfoArrayFromIndices(numMatrix, cellIndices) {\n    // return cellIndices.map(idx => {\n    //   return {\n    //     idx: idx,\n    //     num: numMatrix[idx.r][idx.c]\n    //   };\n    // });\n\n    return cellIndices.map(idx =>\n      this.initCellInfo(idx, this.getNumFromNumMatrix(numMatrix, idx))\n    );\n  }\n\n  // return numbers in a row as an array (obsolete?) //\n  static getRowNumbers(m, r) {\n    return m[r];\n  }\n\n  // return numbers in a column as an array (obsolete?) //\n  static getColNumbers(m, c) {\n    let colNums = [];\n    for (let r = 0; r < m.length; r++) {\n      colNums.push(m[r][c]);\n    }\n    return colNums;\n  }\n\n  // return cell indices of the assigned row index //\n  static getRowIndicesFromIdx(r) {\n    // console.log(\"inside getCellIndicesFromRowIndex\");\n\n    return this.getIndexSequence(Config.size).map(c => {\n      return this.initCellIdx(r, c);\n    });\n  }\n\n  // return cell indices of the assigned column index //\n  static getColIndicesFromIdx(c) {\n    // console.log(\"inside getCellIndicesFromColIndex\");\n\n    return this.getIndexSequence(Config.size).map(r => {\n      return this.initCellIdx(r, c);\n    });\n  }\n\n  static getRowIndicesFromBlockIdx(blkIdx) {\n    const rowBase = Math.floor(blkIdx / Config.sizeB) * Config.sizeB;\n    return this.getIndexSequence(Config.sizeB).map(i => i + rowBase);\n  }\n\n  static getColIndicesFromBlockIdx(blkIdx) {\n    const colBase = (blkIdx % Config.sizeB) * Config.sizeB;\n    return this.getIndexSequence(Config.sizeB).map(i => i + colBase);\n  }\n\n  static getRowColIndicesFromBlockIdx(blkIdx, rcType) {\n    // console.log(\"inside getRowColIndicesFromBlockIdx\");\n\n    if (rcType === \"r\" || rcType === \"row\") {\n      return this.getRowIndicesFromBlockIdx(blkIdx);\n    }\n    return this.getColIndicesFromBlockIdx(blkIdx);\n  }\n\n  static getCellIdxsFromMarkerIdx(markerIdx) {\n    // console.log(\"inside getCellIdxsFromMarkerIdx\");\n\n    const counterRCs = this.getRowColIndicesFromBlockIdx(\n      markerIdx.b,\n      this.flipRCType(markerIdx.rcType)\n    );\n\n    return counterRCs.map(counterRC =>\n      markerIdx.rcType === \"r\"\n        ? this.initCellIdx(markerIdx.rc, counterRC)\n        : this.initCellIdx(counterRC, markerIdx.rc)\n    );\n  }\n\n  static getRowColWiseBlockIdxSequence(rcType) {\n    const shortIdxArray = this.getIndexSequence(Config.sizeB);\n\n    if (rcType === \"r\") {\n      return shortIdxArray.map(i =>\n        shortIdxArray.map(j => j + Config.sizeB * i)\n      );\n    }\n    return shortIdxArray.map(i => shortIdxArray.map(j => j * Config.sizeB + i));\n  }\n\n  static getBlkIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getCellIndicesFromIdx\");\n\n    const rowIdxs = this.getRowIndicesFromBlockIdx(blkIdx);\n    const colIdxs = this.getColIndicesFromBlockIdx(blkIdx);\n\n    return rowIdxs.reduce(\n      (idxs, r) => idxs.concat(colIdxs.map(c => this.initCellIdx(r, c))),\n      []\n    );\n  }\n\n  static getTargetCellIndicesByMarkerIdx(markerIdx, candidates) {\n    // console.log(\"inside getTargetCellIndicesByMarkerIdx\");\n\n    const idxs = this.getCellIdxsFromMarkerIdx(markerIdx);\n\n    return this.removeWideSelectedCellIdxs(candidates, idxs);\n  }\n\n  static removeWideSelectedCellIdxs(candidates, cellIdxs) {\n    return cellIdxs.filter(idx => !this.isWideSelectedInCell(candidates, idx));\n  }\n\n  static getRelatedCellIndicesByMarkerIdx(markerIdx, candidates) {\n    let cellIndices = this.getBlkIndicesFromIdx(markerIdx.b);\n    const targetCellIndices = cellIndices.filter(\n      idx => idx[markerIdx.rcType] === markerIdx.rc\n    );\n\n    cellIndices = cellIndices.concat(\n      this.getCellIndices(markerIdx.rc, markerIdx.rcType)\n    );\n\n    return cellIndices.filter(\n      idx =>\n        !this.isIdxInDuplicates(targetCellIndices, idx) &&\n        !this.isWideSelectedInCell(candidates, idx)\n    );\n  }\n\n  // return cell indices of the assigned row/column/block index //\n  static getCellIndices(idx, type = \"row\") {\n    // console.log(\"inside getCellIndices with type: \", type);\n\n    let cellIndices = [];\n    switch (type) {\n      case \"r\":\n      case \"row\":\n        cellIndices = this.getRowIndicesFromIdx(idx);\n        break;\n      case \"c\":\n      case \"col\":\n      case \"column\":\n        cellIndices = this.getColIndicesFromIdx(idx);\n        break;\n      case \"b\":\n      case \"blk\":\n      case \"block\":\n        cellIndices = this.getBlkIndicesFromIdx(idx);\n        break;\n      default:\n        break;\n    }\n    return cellIndices;\n  }\n\n  static getAllIndices(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    const indices = {\n      row: this.getRowIndicesFromIdx(idx.r),\n      col: this.getColIndicesFromIdx(idx.c),\n      blk: this.getBlkIndicesFromIdx(blockIdx)\n    };\n    return indices;\n  }\n\n  // return row indices of the assigned block index //\n  static getBlkRowIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getBlkRowIndicesFromIdx\");\n\n    const rowBase = Math.floor(blkIdx / Config.sizeB) * Config.sizeB;\n    let rowIndices = this.getIndexSequence(Config.sizeB);\n\n    return rowIndices.map(r => r + rowBase);\n  }\n\n  // return column indices of the assigned block index //\n  static getBlkColIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getBlkColIndicesFromIdx\");\n\n    const colBase = (blkIdx % Config.sizeB) * Config.sizeB;\n\n    let colIndices = this.getIndexSequence(Config.sizeB);\n    return colIndices.map(c => c + colBase);\n  }\n\n  static getBlkRowColIndicesFromIdx(blkIdx, rcType) {\n    return rcType === \"row\"\n      ? this.getBlkRowIndicesFromIdx(blkIdx)\n      : this.getBlkColIndicesFromIdx(blkIdx);\n  }\n\n  static getCandidateCellIndices(candidates, rcbIdx, type) {\n    let cellIndices = this.getCellIndices(rcbIdx, type);\n    return this.removeSelectCells(candidates, cellIndices);\n  }\n\n  static removeSelectCells(candidates, idxs) {\n    return idxs.filter(idx => !this.isWideSelectedInCell(candidates, idx));\n  }\n\n  static getRelatedIndicesBesidesItself(idx) {\n    // console.log(\"inside getReletedIndicesBesidesItself\");\n\n    const rows2 = this.getRowIndicesWithoutTheIdx(idx);\n    const cols2 = this.getColIndicesWithoutTheIdx(idx);\n    const blks2 = this.getBlockOnlyIndicesFromCellIdx(idx);\n\n    return rows2.concat(cols2).concat(blks2);\n  }\n\n  static getRowIndicesWithoutTheIdx(idx) {\n    const rows = this.getRowIndicesFromIdx(idx.r);\n    rows.splice(idx.c, 1);\n    return rows;\n  }\n\n  static getColIndicesWithoutTheIdx(idx) {\n    const cols = this.getColIndicesFromIdx(idx.c);\n    cols.splice(idx.r, 1);\n    return cols;\n  }\n\n  static getBlockOnlyIndicesFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n    const blks = this.getBlkIndicesFromIdx(blockIdx);\n\n    return blks.filter(bIdx => bIdx.r !== idx.r && bIdx.c !== idx.c);\n  }\n\n  // return cell indices of the assigned block num //\n  static getBlkIndicesFromNum(blkNum) {\n    // return this.getBlkIndicesFromIdx(blkNum - 1, Config.size);\n    return this.getBlkIndicesFromIdx(this.n2i(blkNum), Config.size);\n  }\n\n  static getCellIndicesFromBlockId(blockId) {\n    const nBlock = this.getBlockNumFromBlockId(blockId);\n    return this.getBlkIndicesFromNum(nBlock);\n  }\n\n  static getBlockIdxFromCellIdx(idx) {\n    let blockIdx = Math.floor(idx.r / Config.sizeB) * Config.sizeB;\n    blockIdx += Math.floor(idx.c / Config.sizeB);\n    return blockIdx;\n  }\n\n  static getRelatedIndices4union(candidates, idxs, rcbIdx, rcbType) {\n    // console.log(\"inside getRelatedIndices4union\");\n\n    let cellIndices = this.getCandidateCellIndices(candidates, rcbIdx, rcbType);\n\n    let cellIndicesTmp = [];\n    if (rcbType === \"blk\") {\n      const rcType = this.isInSameRowCol(idxs);\n      if (rcType) {\n        cellIndicesTmp = this.getCandidateCellIndices(\n          candidates,\n          idxs[0][rcType],\n          rcType\n        );\n      }\n    } else {\n      const blkIdx = this.isInSameBlock(idxs);\n\n      if (typeof blkIdx === \"number\") {\n        cellIndicesTmp = this.getCandidateCellIndices(\n          candidates,\n          blkIdx,\n          \"blk\"\n        );\n      }\n    }\n\n    cellIndices = cellIndices.concat(cellIndicesTmp);\n    cellIndices = this.removeDuplicatedIndices(cellIndices);\n\n    // remove the union cells themselves //\n    cellIndices = cellIndices.filter(idx => !this.isIdxInDuplicates(idxs, idx));\n\n    return cellIndices;\n  }\n\n  static getRelatedCellInfo4unionA(candidates, unionCell) {\n    let cellInfos = [];\n\n    let cellIndices = this.getRelatedIndices4union(\n      candidates,\n      unionCell.idxs,\n      unionCell.rcbIdx,\n      unionCell.type\n    );\n\n    for (let idx of cellIndices) {\n      for (let num of unionCell.nums) {\n        const cellInfo = this.initCellInfo(\n          idx,\n          num,\n          Config.candidateStatus.removable\n        );\n        const prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isNarrowCandidate(prevStatus)) {\n          cellInfo.prevStatus = prevStatus;\n          cellInfos.push(cellInfo);\n        }\n      }\n    }\n    return cellInfos;\n  }\n\n  static getRelatedCellInfo4unionB(candidates, unionCell) {\n    let relatedCellInfos = [];\n    const idxArray = this.getIndexSequence();\n\n    if (unionCell.type !== Config.restrictionTypes.block) {\n      return [];\n    }\n\n    for (let rcType of Config.restrictionTypesStraightShortArray) {\n      const counterRCType = this.flipRCType(rcType);\n\n      if (!this.isInSameRowCol(unionCell.idxs, rcType)) {\n        continue;\n      }\n\n      // if (this.isInSameRowCol(unionCell.idxs, rcType)) {\n      const rc = unionCell.idxs[0][rcType];\n\n      for (let counterRC of idxArray) {\n        if (unionCell.idxs.map(idx => idx[counterRCType]).includes(counterRC)) {\n          continue;\n        }\n\n        // if (\n        //   !unionCell.idxs.map(idx => idx[counterRCType]).includes(counterRC)\n        // ) {\n        for (let num of unionCell.nums) {\n          const idx =\n            rcType === Config.restrictionTypesShort.row\n              ? this.initCellIdx(rc, counterRC)\n              : this.initCellIdx(counterRC, rc);\n          const cellInfo = this.initCellInfo(\n            idx,\n            num,\n            Config.candidateStatus.removable\n          );\n          cellInfo.prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n          if (this.isNarrowCandidate(cellInfo.prevStatus)) {\n            relatedCellInfos.push(cellInfo);\n          }\n        }\n        // }\n      }\n      // }\n    }\n\n    return relatedCellInfos;\n  }\n\n  static getRelatedBlockIdxsFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    let blkIdxs = {};\n    for (let rcType of [\"r\", \"c\"]) {\n      const blkSequence = this.getRowColWiseBlockIdxSequence(rcType);\n\n      blkIdxs[rcType] = blkSequence\n        .filter(idxs => idxs.includes(blockIdx))\n        .pop();\n    }\n\n    return blkIdxs;\n  }\n\n  static index2R1C1(idx) {\n    return `R${idx.r + 1}C${idx.c + 1}`;\n  }\n\n  static R1C12Index(r1c1) {\n    return {\n      r: parseInt(r1c1.slice(1, 2)) - 1,\n      c: parseInt(r1c1.slice(3, 4)) - 1\n    };\n  }\n\n  static R1C1N12CellInfo(r1c1n1) {\n    return {\n      idx: this.R1C12Index(r1c1n1.slice(0, 4)),\n      num: parseInt(r1c1n1.slice(5, 6))\n    };\n  }\n\n  static getR1C1FromBlockId(blockId) {\n    const cellIndices = this.getCellIndicesFromBlockId(blockId);\n    const cellIndicesR1C1 = cellIndices.map(i => this.index2R1C1(i));\n\n    return cellIndicesR1C1;\n  }\n\n  static markerId2Idx(markerId) {\n    // console.log(\"inside markerId2Idx\");\n\n    // const b = parseInt(markerId.slice(1, 2)) - 1;\n    // const rc = parseInt(markerId.slice(3, 4)) - 1;\n    // const i = parseInt(markerId.slice(5, 6)) - 1;\n    const b = this.n2i(parseInt(markerId.slice(1, 2)));\n    const rcType = markerId.slice(2, 3).toLowerCase();\n    const rc = this.n2i(parseInt(markerId.slice(3, 4)));\n    const i = this.n2i(parseInt(markerId.slice(5, 6)));\n\n    return this.initMarkerIdx(b, rcType, rc, i);\n  }\n\n  static markerIdx2Id(idx) {\n    return `B${idx.b}${idx.rcType}${idx.rc}I${idx.i + 1}`;\n  }\n\n  static getMarkerIdxsFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    return [\"r\", \"c\"].map(rcType =>\n      this.initMarkerIdx(blockIdx, rcType, idx[rcType])\n    );\n  }\n\n  static getCorrespondingCellIdxs2MarkerIdx(markerIdx) {\n    const RCIdxs = Util.getRowColIndicesFromBlockIdx(\n      markerIdx.b,\n      Util.flipRCType(markerIdx.rcType)\n    );\n\n    return RCIdxs.map(rc =>\n      markerIdx.rcType === \"r\"\n        ? Util.initCellIdx(markerIdx.rc, rc)\n        : Util.initCellIdx(rc, markerIdx.rc)\n    );\n  }\n\n  static getRelatedMarkerIdxsFromCellIdx(cellIdx) {\n    // console.log(\"inside getRelatedMarkerIdxsFromCellIdx\");\n\n    const blockSeq = this.getRelatedBlockIdxsFromCellIdx(cellIdx);\n\n    let markerIdxs = [];\n    for (let rcType of Object.keys(blockSeq)) {\n      const blockIdxs = blockSeq[rcType].reduce(\n        (ary, i) => ary.concat(Array(3).fill(i)),\n        []\n      );\n      for (let [rc, b] of blockIdxs.entries()) {\n        markerIdxs.push(this.initMarkerIdx(b, this.flipRCType(rcType), rc));\n      }\n    }\n\n    return markerIdxs;\n  }\n\n  static getNumFromMarkerNums(markerNums, idx) {\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    return nums[idx.i];\n  }\n\n  static getNumsFromMarkerNums(markerNums, idx) {\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    return nums.filter(num => num !== null);\n  }\n\n  static getNumArrayFromMarkerNums(markerNums, idx) {\n    // console.log(\"inside markerNums\");\n\n    const nums = markerNums[idx.b][idx.rcType][idx.rc].nums;\n    return nums;\n  }\n\n  static getInfoArrayFromMarkerNums(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc];\n  }\n\n  static getInfosFromMarkerNums(markerNums, idx) {\n    // console.log(\"inside getInfosFromMarkerNums\");\n\n    const infoArray = this.getInfoArrayFromMarkerNums(markerNums, idx);\n\n    const infos = { nums: [], statuses: [] };\n    for (let [i, num] of infoArray.nums.entries()) {\n      if (num !== null) {\n        infos.nums.push(num);\n        infos.statuses.push(infoArray.statuses[i]);\n      }\n    }\n\n    return infos;\n  }\n\n  static isTheMarkerCellNull(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] === null;\n  }\n\n  static setMarkerNum(markerNums, markerInfo) {\n    // console.log(\"inside setMarkerNum\");\n\n    let idx = markerInfo.idx;\n    let isReset = false;\n\n    if (markerInfo.num < 0) {\n      isReset = true;\n      markerInfo.num = Math.abs(markerInfo.num);\n    }\n\n    if (this.isTheNumInMarker(markerNums, markerInfo)) {\n      idx = this.findNumInMarker(markerNums, markerInfo);\n    } else if (idx.i === null || this.getNumFromMarkerNums(markerNums, idx)) {\n      idx.i = this.getFirstNullIdx(\n        this.getNumArrayFromMarkerNums(markerNums, idx)\n      );\n    }\n\n    if (isReset) {\n      markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] = null;\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = null;\n    } else {\n      markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] = markerInfo.num;\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = markerInfo.status;\n    }\n\n    markerNums[idx.b][idx.rcType][idx.rc] = this.sortMarkerNums(\n      this.getInfoArrayFromMarkerNums(markerNums, idx)\n    );\n\n    return markerNums;\n  }\n\n  static resetMarker(markerNums, markerInfos) {\n    // console.log(\"inside resetMarker\");\n\n    for (let markerInfo of markerInfos) {\n      let markerInfoArray = [];\n      if (\"nums\" in markerInfo) {\n        for (let [i, num] of markerInfo.nums.entries()) {\n          const targetMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          if (\"prevStatuses\" in markerInfo) {\n            if (num !== markerInfo.num) {\n              targetMarkerInfo.prevStatus = markerInfo.prevStatuses[i];\n            }\n          }\n          markerInfoArray.push(targetMarkerInfo);\n        }\n      } else {\n        markerInfoArray.push(markerInfo);\n      }\n\n      for (let mInfo of markerInfoArray) {\n        if (typeof mInfo.num !== \"number\") {\n          mInfo.num = this.getNumFromMarkerNums(markerNums, mInfo.idx);\n          if (!mInfo.num) {\n            continue;\n          }\n        }\n\n        if (\"prevStatus\" in mInfo) {\n          mInfo = this.initMarkerInfo(mInfo.idx, mInfo.num, mInfo.prevStatus);\n        } else {\n          mInfo = this.initMarkerInfo(mInfo.idx, -mInfo.num, null);\n        }\n\n        markerNums = this.setMarkerNum(markerNums, mInfo);\n      }\n    }\n\n    return [markerNums, markerInfos];\n  }\n\n  static assignMarkerStatusSub(markerNums, mInfo) {\n    const idx = this.findNumInMarker(markerNums, mInfo);\n\n    if (idx !== null) {\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = mInfo.status;\n    }\n    return markerNums;\n  }\n\n  static assignMarkerStatus(markerNums, markerInfo) {\n    // console.log(\"inside assignMarkerStatus\");\n\n    if (Object.keys(markerInfo).includes(\"nums\")) {\n      for (let num of markerInfo.nums) {\n        markerInfo.num = num;\n        markerNums = this.assignMarkerStatusSub(markerNums, markerInfo);\n      }\n    } else if (Object.keys(markerInfo).includes(\"num\")) {\n      markerNums = this.assignMarkerStatusSub(markerNums, markerInfo);\n    }\n\n    return markerNums;\n  }\n\n  static assignSelectable2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.selectable;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveSingle2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveSingle;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveDouble2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveDouble;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveTriple2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveTriple;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static getMarkerStatus(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i];\n  }\n\n  static isMarkerStatusSelectable(markerNums, idx) {\n    return (\n      this.getMarkerStatus(markerNums, idx) ===\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static sortMarkerNums(rcInfo) {\n    // console.log(\"inside sortMarkerNums\");\n\n    let sorted = {\n      nums: [],\n      statuses: []\n    };\n\n    sorted.nums.push(rcInfo.nums.shift());\n    sorted.statuses.push(rcInfo.statuses.shift());\n\n    while (rcInfo.nums.length > 0) {\n      const newNum = rcInfo.nums.shift();\n      const status = rcInfo.statuses.shift();\n      let idx = sorted.nums.length;\n\n      if (newNum !== null) {\n        for (let [i, num] of sorted.nums.entries()) {\n          if (num === null || num > newNum) {\n            idx = i;\n            break;\n          }\n        }\n      }\n\n      sorted.nums.splice(idx, 0, newNum);\n      sorted.statuses.splice(idx, 0, status);\n    }\n\n    return sorted;\n  }\n\n  static findNumInMarker(markerNums, markerInfo) {\n    // console.log(\"inside findNumInMarker\");\n\n    let idx = markerInfo.idx;\n\n    if (markerInfo.num === null) {\n      return idx;\n    }\n\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    const i = nums.indexOf(markerInfo.num);\n\n    if (i >= 0) {\n      idx.i = i;\n      return idx;\n    }\n    return null;\n  }\n\n  static flipMarkerStatus(markerStatus) {\n    return markerStatus === Config.buttonStatus.active\n      ? Config.buttonStatus.waiting\n      : Config.buttonStatus.active;\n  }\n\n  static updateMarkerStatus(markerNums, markerInfo, markerTrace, status) {\n    // console.log(\"inside updateMarkerStatus2Selectable\");\n\n    let targetMarkerInfo = this.findPreviousMarkerInfo(\n      markerNums,\n      markerTrace,\n      markerInfo\n    );\n\n    if (targetMarkerInfo) {\n      targetMarkerInfo.prevStatus = targetMarkerInfo.status;\n      targetMarkerInfo.status = status;\n\n      markerNums = this.assignMarkerStatus(markerNums, targetMarkerInfo);\n    }\n\n    return [markerNums, targetMarkerInfo];\n  }\n\n  static updateMarkerStatus2Selectable(markerNums, markerInfo, markerTrace) {\n    // console.log(\"inside updateMarkerStatus2Selectable\");\n\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static updateMarkerStatus2ExDouble(markerNums, markerInfo, markerTrace) {\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.exclusiveDouble\n    );\n  }\n\n  static updateMarkerStatus2ExTriple(markerNums, markerInfo, markerTrace) {\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.exclusiveTriple\n    );\n  }\n\n  static findPreviousMarkerInfo(markerNums, markerTrace, markerInfo) {\n    if (markerTrace === null || markerTrace.length === 0) {\n      return null;\n    }\n\n    // should rely on newest marker //\n    const revMarkerTrace = markerTrace.reverse();\n    let matchedMarkerInfo = null;\n\n    for (let prevMInfo of revMarkerTrace) {\n      if (this.isMatchTwoMarkers(markerInfo, prevMInfo)) {\n        const idx = this.findNumInMarker(markerNums, prevMInfo);\n\n        if (idx !== null) {\n          matchedMarkerInfo = this.initMarkerInfo(idx, markerInfo.num);\n          matchedMarkerInfo.prevStatus = prevMInfo.status;\n\n          break;\n        }\n      }\n    }\n\n    return matchedMarkerInfo;\n  }\n\n  static getFirstNullIdx(ary) {\n    for (let [i, num] of ary.entries()) {\n      if (num === null) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  static isAllFilled(numMatrix) {\n    return this.countNonZeroCells(numMatrix) === Config.numCells;\n  }\n\n  static extractRowInfo(m, r) {\n    let rowInfo = [];\n\n    if (\n      m.length === Config.size &&\n      m[r].length === Config.size &&\n      m.length > r\n    ) {\n      m[r].forEach((num, c) => {\n        rowInfo.push(this.initCellInfo(this.initCellIdx(r, c), num));\n      });\n    }\n    return rowInfo;\n  }\n\n  static extractColInfo(m, c) {\n    let colInfo = [];\n\n    if (m.length === this.size && m.length > c) {\n      m.forEach((row, r) => {\n        colInfo.push(this.initCellInfo(this.initCellIdx(r, c), row[c]));\n      });\n    }\n    return colInfo;\n  }\n\n  static extactBlockInfo(m, blkIdx) {\n    let blkInfo = [];\n    const indices = this.getBlkIndicesFromIdx(blkIdx, Config.size);\n\n    if (m.length === Config.size && indices.length === Config.size) {\n      indices.forEach(idx => {\n        blkInfo.push(this.initCellInfo(idx, m[idx.r][idx.c]));\n      });\n    }\n    return blkInfo;\n  }\n\n  static findDuplicatedIndices(numMatrix, cellIndices) {\n    // console.log(\"inside findDuplicatedIndices\");\n\n    let dupCellIndices = [];\n    const cellInfoArray = this.getCellInfoArrayFromIndices(\n      numMatrix,\n      cellIndices\n    );\n    const nulllessCellInfoArray = this.removeNullsFromCellInfo(cellInfoArray);\n\n    nulllessCellInfoArray.sort(function(a, b) {\n      if (a.num > b.num) {\n        return 1;\n      }\n      if (a.num < b.num) {\n        return -1;\n      }\n      return 0;\n    });\n\n    for (var i = 0; i < nulllessCellInfoArray.length - 1; i++) {\n      // if duplicates found //\n      if (nulllessCellInfoArray[i + 1].num === nulllessCellInfoArray[i].num) {\n        // if first time or duplicates for different number from the previous duplicates //\n        if (\n          dupCellIndices.length === 0 ||\n          !this.isTwoIdxsSame(\n            dupCellIndices[dupCellIndices.length - 1],\n            nulllessCellInfoArray[i].idx\n          )\n        ) {\n          dupCellIndices.push(nulllessCellInfoArray[i].idx);\n        }\n        dupCellIndices.push(nulllessCellInfoArray[i + 1].idx);\n      }\n    }\n\n    return dupCellIndices;\n  }\n\n  static checkDuplicate(numMatrix) {\n    var duplicates = [];\n\n    const idxSequence = this.getIndexSequence(Config.size);\n\n    Config.restrictionTypesArray.forEach(type => {\n      idxSequence.forEach(idx => {\n        const cellIndices = this.getCellIndices(idx, type);\n        let dup = this.findDuplicatedIndices(numMatrix, cellIndices);\n\n        if (dup.length > 0) {\n          if (duplicates.length > 0) {\n            dup = dup.filter(\n              dupidx => !this.isIdxInDuplicates(duplicates, dupidx)\n            );\n          }\n          duplicates = duplicates.concat(dup);\n        }\n      });\n    });\n\n    return duplicates;\n  }\n\n  static checkCorrectness(ansMatrix, numMatrix) {\n    // console.log(\"inside checkCorrectness\");\n\n    let wrongIdxs = [];\n    if (ansMatrix === null || this.isMatrixAllNull(ansMatrix)) {\n      return [];\n    }\n\n    const idxArray = this.getIndexSequence();\n    for (let r of idxArray) {\n      for (let c of idxArray) {\n        const idx = this.initCellIdx(r, c);\n        if (\n          !this.isNumCorrect(\n            ansMatrix,\n            this.initCellInfo(idx, this.getNumFromNumMatrix(numMatrix, idx))\n          )\n        ) {\n          wrongIdxs.push(this.initCellIdx(r, c));\n        }\n      }\n    }\n\n    return wrongIdxs;\n  }\n\n  static isNumCorrect(ansMatrix, cellInfo) {\n    const ans = this.getNumFromNumMatrix(ansMatrix, cellInfo.idx);\n    return ans === null || cellInfo.num === null || ans === cellInfo.num;\n  }\n\n  static isMatrixAllNull(m) {\n    const ary = this.flattenMatrix2Array(m);\n    return ary.reduce((isAllNull, elem) => elem === null && isAllNull, true);\n  }\n\n  static isTwoArraysSame(ary1, ary2) {\n    // console.log(\"inside isTwoArraysSame\");\n\n    if (\n      ary1 === null ||\n      ary2 === null ||\n      ary1.length === 0 ||\n      ary1.length !== ary2.length\n    ) {\n      return null;\n    }\n\n    return ary1.reduce((isSame, e1, i) => isSame && e1 === ary2[i], true);\n  }\n\n  static isAllNumbersSame(nums) {\n    if (nums.length < 2) {\n      return false;\n    }\n\n    return this.removeDuplicatedNumbers(nums).length === 1;\n  }\n\n  static isAllStatusesSame(statuses) {\n    if (statuses.length < 2) {\n      return false;\n    }\n\n    const statusList = statuses.reduce(\n      (statusList, status) =>\n        statusList.includes(status) ? statusList : [...statusList, status],\n      []\n    );\n\n    return statusList.length === 1;\n  }\n\n  static isTwoIdxsSame(idx1, idx2) {\n    return JSON.stringify(idx1) === JSON.stringify(idx2);\n  }\n\n  static isTwoIdxSetsSame(idxs1, idxs2) {\n    for (let [i, idx1] of idxs1.entries()) {\n      if (!this.isTwoIdxsSame(idx1, idxs2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isInSameRowCol(idxs, directions = [\"r\", \"c\"]) {\n    for (let rc of directions) {\n      const rcIdxs = idxs.map(idx => idx[rc]);\n      if (this.isAllNumbersSame(rcIdxs)) {\n        // return true;\n        return rc;\n      }\n    }\n    return false;\n  }\n\n  static isInSameBlock(idxs) {\n    const blkIdxs = idxs.map(idx => this.getBlockIdxFromCellIdx(idx));\n    if (this.isAllNumbersSame(blkIdxs)) {\n      return blkIdxs[0];\n    }\n    return false;\n  }\n\n  static isNewPairCell(pairCell, exclusiveCandidates) {\n    for (let exCand of exclusiveCandidates) {\n      if (this.isTwoIdxsSame(pairCell, exCand)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static checkTwoIdxsInSameBlock(idx1, idx2) {\n    const blkIdx1 = this.getBlockIdxFromCellIdx(idx1);\n    const blkIdx2 = this.getBlockIdxFromCellIdx(idx2);\n\n    if (blkIdx1 === blkIdx2) {\n      return blkIdx1;\n    }\n    return -1;\n  }\n\n  static checkIdxsInSameBlock(idxs) {\n    const blkIdxs = idxs.map(idx => this.getBlockIdxFromCellIdx(idx));\n\n    if (this.isAllNumbersSame(blkIdxs)) {\n      return blkIdxs[0];\n    }\n    return -1;\n  }\n\n  static removeDuplicatedNumbers(nums) {\n    // console.log(\"inside removeDuplicatedNumbers\");\n\n    const numsArray = nums.reduce((ary, num) => {\n      ary.includes(num) || ary.push(num);\n      return ary;\n    }, []);\n\n    return numsArray;\n  }\n\n  static removeDuplicatedIndices(idxsArray) {\n    const uniqueIndices = idxsArray.reduce((ary, idx) => {\n      this.isInCellInfoArray(ary, idx) || ary.push(idx);\n      return ary;\n    }, []);\n    return uniqueIndices;\n  }\n\n  static isIdxInDuplicates(duplicates, idx) {\n    return duplicates.filter(didx => this.isTwoIdxsSame(didx, idx)).length > 0;\n  }\n\n  static getIsDuplicatedFromBlockNum(duplicates, blockNum) {\n    const cellIndices = this.getBlkIndicesFromNum(blockNum);\n\n    return this.getIsDuplicatedFromIndices(duplicates, cellIndices);\n  }\n\n  static getIsDuplicatedFromIndices(duplicates, cellIndices) {\n    return cellIndices.map(idx => this.isIdxInDuplicates(duplicates, idx));\n  }\n\n  static getAppearanceMatrixFromNumMatrix(numMatrix) {\n    let appearanceMatrix = this.initMatrix(Config.candidateStatus.candidate);\n\n    const allCellIdxs = this.getAllCellIndicies();\n    for (let idx of allCellIdxs) {\n      const num = this.getNumFromNumMatrix(numMatrix, idx);\n      if (num !== null) {\n        const appearance = this.appendNum(Config.candidateStatus.selected, num);\n\n        appearanceMatrix = this.assignAppearance(\n          appearanceMatrix,\n          idx,\n          appearance\n        );\n      }\n    }\n\n    return appearanceMatrix;\n  }\n\n  static getAppearanceMatrixFromCandidates(\n    candidates,\n    // helpMode,\n    multipleNums,\n    candidateLevel\n  ) {\n    // console.log(\"inside getAppearanceMatrixFromCandidates\");\n\n    // console.log(\"multipleNums\");\n    // console.log(multipleNums);\n\n    let appearanceMatrix = this.initMatrix(Config.candidateStatus.candidate);\n    const removeTypes = Config.wideRemovedList;\n    const allCellIdxs = this.getAllCellIndicies();\n\n    let selected = [];\n    let selectable = [];\n\n    selected = multipleNums.map(num =>\n      this.appendNum(Config.candidateStatus.selected, num)\n    );\n\n    selectable = multipleNums.map(num =>\n      this.appendNum(Config.candidateStatus.selectable, num)\n    );\n\n    for (let idx of allCellIdxs) {\n      const targetStatuses = this.getCandidateStatuses(\n        candidates,\n        idx,\n        multipleNums\n      );\n\n      const combinedStatus = this.combineStatuses(targetStatuses);\n      const i = targetStatuses.indexOf(combinedStatus);\n\n      let appearance = Config.candidateStatus.candidate;\n\n      if (this.isSelected(combinedStatus)) {\n        appearance = selected[i];\n      } else if (this.hasSelected(candidates, idx)) {\n        appearance = Config.candidateStatus.shadowed;\n      } else if (candidateLevel > 0) {\n        if (removeTypes.includes(combinedStatus)) {\n          appearance = Config.candidateStatus.inhibited;\n        } else if (candidateLevel > 1 && this.isSelectable(combinedStatus)) {\n          appearance = selectable[i];\n        }\n      }\n\n      appearanceMatrix = this.assignAppearance(\n        appearanceMatrix,\n        idx,\n        appearance\n      );\n    }\n\n    return appearanceMatrix;\n  }\n\n  static setSingleNumExclusiveCandidatesA(dataset, num, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidatesA\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let candidateTrace = [];\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveMultiples4marker.includes(traceItem.status)\n    );\n\n    const idxSequence = this.getIndexSequence();\n    const expectedLength = this.getUnionSizes(Config.sizeB);\n\n    for (let blkIdx of idxSequence) {\n      const cellIndices = this.getBlkIndicesFromIdx(blkIdx);\n\n      let candidateCells = this.getSingleNumCandidateCells(\n        candidates,\n        num,\n        cellIndices,\n        Config.processTypes.singleNum\n      );\n\n      if (!expectedLength.includes(candidateCells.length)) {\n        continue;\n      }\n\n      const rcType = this.isInSameRowCol(candidateCells);\n\n      if (!rcType) {\n        continue;\n      }\n\n      const direction = this.convertRCType2Direction(rcType);\n\n      let targetCellInfo = this.initCellInfo(\n        candidateCells,\n        num,\n        Config.candidateStatus.exclusiveSingle,\n        direction,\n        blkIdx\n      );\n\n      let markerInfo = null;\n      markerInfo = this.convertCellInfo2MarkerInfo(targetCellInfo);\n\n      if (\n        this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) ||\n        !this.isStatusWorth2Store(prevMarkerTrace, markerInfo)\n      ) {\n        continue;\n      }\n\n      let updateCellIdxs = this.getCandidateCellIndices(\n        candidates,\n        targetCellInfo.idxs[0][rcType],\n        direction\n      );\n\n      updateCellIdxs = this.getSingleNumCandidateCells(\n        candidates,\n        num,\n        updateCellIdxs,\n        Config.processTypes.candidates\n      );\n\n      updateCellIdxs = updateCellIdxs.filter(\n        idx => !this.isIdxInDuplicates(targetCellInfo.idxs, idx)\n      );\n\n      if (isSkipIneffective && updateCellIdxs.length === 0) {\n        continue;\n      }\n\n      [candidates, targetCellInfo] = this.assignCandidateStatus4SingleNum(\n        candidates,\n        targetCellInfo,\n        Config.candidateStatus.exclusiveSingle\n      );\n\n      if (targetCellInfo) {\n        candidateTrace.push(targetCellInfo);\n      }\n\n      let updateCellInfo = this.initCellInfo(\n        updateCellIdxs,\n        num,\n        Config.candidateStatus.removable\n      );\n\n      [candidates, updateCellInfo] = this.assignCandidateStatus4SingleNum(\n        candidates,\n        updateCellInfo,\n        Config.candidateStatus.removable\n      );\n\n      if (this.isCellsAllWideRemoved(candidates, updateCellInfo.idxs)) {\n        return null;\n      }\n\n      if (updateCellInfo) {\n        candidateTrace.push(updateCellInfo);\n      }\n\n      exclusiveCandidates.push(targetCellInfo);\n\n      markerNums = this.setMarkerNum(markerNums, markerInfo);\n\n      trace.push(\n        this.initTraceItem(\n          null,\n          candidateTrace,\n          [markerInfo],\n          Config.operationTypes.auto\n        )\n      );\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3)\n      ) {\n        return dataset;\n      }\n    }\n\n    return dataset;\n  }\n\n  static getSingleNumBTargetIdxs(candidates, num, direction, rcIdx) {\n    let candidateIdxs = this.getSingleNumCandidateCells(\n      candidates,\n      num,\n      this.getCellIndices(rcIdx, direction),\n      Config.processTypes.candidates\n    );\n\n    if (candidateIdxs.length > Config.sizeB) {\n      return [null, null];\n    }\n\n    const blkIdx = this.isInSameBlock(candidateIdxs);\n\n    if (typeof blkIdx !== \"number\") {\n      return [null, null];\n    }\n\n    return [candidateIdxs, blkIdx];\n  }\n\n  static getSingleNumBUntargetIdxs(candidates, num, targetIdxs, blkIdx) {\n    let untargetIdxs = this.getBlkIndicesFromIdx(blkIdx);\n    untargetIdxs = untargetIdxs.filter(\n      idx => !this.isIdxInDuplicates(targetIdxs, idx)\n    );\n    untargetIdxs = this.getSingleNumCandidateCells(\n      candidates,\n      num,\n      untargetIdxs,\n      Config.processTypes.candidates\n    );\n\n    return untargetIdxs;\n  }\n\n  static setSingleNumExclusiveCandidatesB(dataset, num, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidatesB\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    const idxSequence = this.getIndexSequence();\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveMultiples4marker.includes(traceItem.status)\n    );\n\n    let candidateTrace = [];\n\n    for (let direction of Config.restrictionTypesStraightArray) {\n      for (let rc of idxSequence) {\n        let targetIdxs = [];\n        let blkIdx = null;\n        [targetIdxs, blkIdx] = this.getSingleNumBTargetIdxs(\n          candidates,\n          num,\n          direction,\n          rc\n        );\n\n        if (targetIdxs === null) {\n          continue;\n        }\n\n        const untargetIdxs = this.getSingleNumBUntargetIdxs(\n          candidates,\n          num,\n          targetIdxs,\n          blkIdx\n        );\n\n        if (isSkipIneffective && untargetIdxs.length === 0) {\n          continue;\n        }\n\n        let targetCellInfo = this.initCellInfo(\n          targetIdxs,\n          num,\n          Config.candidateStatus.exclusiveSingle,\n          direction,\n          blkIdx\n        );\n\n        const markerInfo = this.convertCellInfo2MarkerInfo(targetCellInfo);\n\n        if (\n          this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) ||\n          !this.isStatusWorth2Store(prevMarkerTrace, markerInfo)\n        ) {\n          continue;\n        }\n\n        [candidates, targetCellInfo] = this.assignCandidateStatus4SingleNum(\n          candidates,\n          targetCellInfo,\n          Config.candidateStatus.exclusiveSingle\n        );\n\n        if (targetCellInfo) {\n          candidateTrace.push(targetCellInfo);\n        }\n\n        let untargetCellInfo = this.initCellInfo(\n          untargetIdxs,\n          num,\n          Config.candidateStatus.removable\n        );\n\n        [candidates, untargetCellInfo] = this.assignCandidateStatus4SingleNum(\n          candidates,\n          untargetCellInfo,\n          Config.candidateStatus.removable\n        );\n\n        if (this.isCellsAllWideRemoved(candidates, untargetCellInfo.idxs)) {\n          return null;\n        }\n\n        if (untargetCellInfo) {\n          candidateTrace.push(untargetCellInfo);\n        }\n\n        exclusiveCandidates.push(targetCellInfo);\n\n        markerNums = this.setMarkerNum(markerNums, markerInfo);\n\n        trace.push(\n          this.initTraceItem(\n            null,\n            candidateTrace,\n            [markerInfo],\n            Config.operationTypes.auto\n          )\n        );\n\n        if (\n          isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3)\n        ) {\n          return dataset;\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static traceBackCandidates(candidates, candInfos) {\n    // console.log(\"inside traceBackCandidates\");\n\n    for (let candInfo of candInfos) {\n      if (\"idxs\" in candInfo) {\n        if (\"prevStatuses\" in candInfo) {\n          for (let [i, idx] of candInfo.idxs.entries()) {\n            const cellInfo = this.initCellInfo(idx, candInfo.num);\n            candidates = this.assignStatus2Candidates(\n              candidates,\n              cellInfo,\n              candInfo.prevStatuses[i]\n            );\n          }\n        } else {\n          continue;\n        }\n      } else if (\"nums\" in candInfo) {\n        if (\"prevStatuses\" in candInfo) {\n          for (let [i, num] of candInfo.nums.entries()) {\n            const cellInfo = this.initCellInfo(candInfo.idx, num);\n            candidates = this.assignStatus2Candidates(\n              candidates,\n              cellInfo,\n              candInfo.prevStatuses[i]\n            );\n          }\n        } else {\n          continue;\n        }\n      } else {\n        candidates = this.assignStatus2Candidates(\n          candidates,\n          candInfo,\n          candInfo.prevStatus\n        );\n      }\n    }\n\n    return candidates;\n  }\n\n  static initDataset() {\n    return {\n      candidates: this.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      markerNums: this.initMarkerNums(),\n      trace: []\n    };\n  }\n\n  static initCandidates(numMatrix, conditions) {\n    // console.log(\"inside initCandidates\");\n\n    let dataset = Util.initDataset();\n    dataset.numMatrix = numMatrix;\n    // dataset.gameLevel = 0;\n\n    dataset = this.setCandidates(dataset, conditions);\n\n    return dataset;\n  }\n\n  static setCandidates(dataset, conditions) {\n    // console.log(\"inside setCandidates\");\n\n    dataset.traceItems = [];\n\n    let { numMatrix, candidates, exclusiveCandidates } = dataset;\n\n    const {\n      candidateLevel,\n      helpMode,\n      isStepByStep,\n      isSkipLevel1\n      // isMarkerOff\n    } = conditions;\n\n    const processType = helpMode;\n    const maxLoopNum =\n      helpMode === Config.processTypes.singleNum ? 1 : Config.maxLoopNum;\n\n    let helperLevel = 0;\n\n    if (!isSkipLevel1) {\n      helperLevel = 1;\n\n      candidates = this.setCandidatesLevel1(\n        candidates,\n        numMatrix,\n        candidateLevel\n      );\n\n      // if (\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n    }\n\n    // There is a cell full of wide-removed //\n    if (candidates === null) {\n      return null;\n    }\n\n    if (\n      this.isAllWideSelected(candidates) ||\n      candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.singleCandidate)\n    ) {\n      return dataset;\n    }\n\n    for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      let exclusiveCandidateLength = exclusiveCandidates.length;\n      // let exclusiveCandidateLengthLevel6 = exclusiveCandidates.length;\n\n      // for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      //   let exclusiveCandidateLengthLevel5 = exclusiveCandidates.length;\n\n      //   for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      //     let exclusiveCandidateLengthLevel4 = exclusiveCandidates.length;\n\n      //     for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      //       let exclusiveCandidateLengthLevel3 = exclusiveCandidates.length;\n\n      //       for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      //         let exclusiveCandidateLengthLevel2 = exclusiveCandidates.length;\n\n      // helperLevel = 2;\n\n      dataset = this.setSelectableA(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      // if (\n      //   // exclusiveCandidates.length > exclusiveCandidateLengthLevel2 &&\n      //   exclusiveCandidates.length > exclusiveCandidateLength &&\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(\n            Config.candidateTypes.singleCandidate\n          ) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (processType === Config.processTypes.candidates) {\n        dataset = this.setSelectableB(dataset, conditions);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return null;\n        }\n\n        if (\n          // exclusiveCandidates.length > exclusiveCandidateLengthLevel2 &&\n          exclusiveCandidates.length > exclusiveCandidateLength &&\n          typeof dataset.gameLevel !== \"undefined\" &&\n          dataset.gameLevel < helperLevel\n        ) {\n          dataset.gameLevel = helperLevel;\n        }\n\n        if (\n          this.isAllWideSelected(candidates) ||\n          (isStepByStep &&\n            Config.stepByStepLevels.includes(\n              Config.candidateTypes.singleCandidate\n            ) &&\n            exclusiveCandidates.length > exclusiveCandidateLength)\n        ) {\n          return dataset;\n        }\n      }\n\n      //   if (\n      //     exclusiveCandidates.length === exclusiveCandidateLengthLevel2\n      //   ) {\n      //     break;\n      //   }\n      // }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.singleExclusive)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n\n        continue;\n      }\n\n      // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n      // helperLevel = 3;\n\n      dataset = this.setSingleNumExclusiveCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      // if (\n      //   // exclusiveCandidates.length > exclusiveCandidateLengthLevel3 &&\n      //   exclusiveCandidates.length > exclusiveCandidateLength &&\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      //   if (exclusiveCandidates.length === exclusiveCandidateLengthLevel3) {\n      //     break;\n      //   }\n      // }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(\n          Config.candidateTypes.multipleExclusive\n        )\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n      // helperLevel = 4;\n\n      dataset = this.setExclusiveUnionA(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      // if (\n      //   // exclusiveCandidates.length > exclusiveCandidateLengthLevel4 &&\n      //   exclusiveCandidates.length > exclusiveCandidateLength &&\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      dataset = this.setExclusiveUnionB(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      // if (\n      //   // exclusiveCandidates.length > exclusiveCandidateLengthLevel4 &&\n      //   exclusiveCandidates.length > exclusiveCandidateLength &&\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level4) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      //   if (exclusiveCandidates.length === exclusiveCandidateLengthLevel4) {\n      //     break;\n      //   }\n      // }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.square)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n      // helperLevel = 5;\n\n      dataset = this.setSquareCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      // if (\n      //   // exclusiveCandidates.length > exclusiveCandidateLengthLevel5 &&\n      //   exclusiveCandidates.length > exclusiveCandidateLength &&\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level5) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      //   if (exclusiveCandidates.length === exclusiveCandidateLengthLevel5) {\n      //     break;\n      //   }\n      // }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.assumptionTest)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n      // helperLevel = 6;\n\n      dataset = this.setAssumptionTest(dataset, conditions);\n\n      // if (\n      //   exclusiveCandidates.length > exclusiveCandidateLength &&\n      //   typeof dataset.gameLevel !== \"undefined\" &&\n      //   dataset.gameLevel < helperLevel\n      // ) {\n      //   dataset.gameLevel = helperLevel;\n      // }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level6) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (exclusiveCandidates.length === exclusiveCandidateLength) {\n        break;\n      }\n    }\n\n    return dataset;\n  }\n\n  static setCandidatesLevel1(candidates, numMatrix, nLevel = 1) {\n    // console.log(\"inside setCandidatesLevel1\");\n\n    const allCellIdxs = this.getAllCellIndicies();\n\n    for (let idx of allCellIdxs) {\n      const num = this.getNumFromNumMatrix(numMatrix, idx);\n\n      if (num !== null && num > 0 && num <= Config.size) {\n        const targetCellInfo = Util.initCellInfo(idx, num);\n\n        [candidates] = this.updateCandidateOfTheCell(\n          candidates,\n          targetCellInfo\n        );\n\n        if (nLevel > 0) {\n          [candidates] = this.updateRelatedCells(\n            candidates,\n            targetCellInfo,\n            nLevel,\n            Config.processTypes.insertion\n          );\n\n          // There is a cell full of wide-removed //\n          if (candidates === null) {\n            return null;\n          }\n        }\n      }\n    }\n\n    return candidates;\n  }\n\n  static setSelectableA(dataset, conditions) {\n    // console.log(\"inside setSelectableA\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep\n    } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    let candidateTrace = [];\n    let candidateTraceTmp = [];\n\n    const processType = helpMode;\n    const idxSequence = this.getIndexSequence();\n    const numSequence =\n      helpMode === Config.helpMode.singleNum\n        ? [singleNumValue]\n        : this.getNsequence();\n\n    for (let num of numSequence) {\n      for (let type of Config.restrictionTypesArray) {\n        for (let rcbIdx of idxSequence) {\n          const cellIndices = this.getCellIndices(rcbIdx, type);\n\n          let candidateCells = this.getSingleNumCandidateCells(\n            candidates,\n            num,\n            cellIndices,\n            Config.processTypes.singleNum\n          );\n\n          if (candidateCells.length !== 1) {\n            continue;\n          }\n\n          const idx = candidateCells[0];\n\n          const targetCellInfo = this.initCellInfo(\n            idx,\n            num,\n            Config.candidateStatus.selectable\n          );\n\n          if (\n            this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo)\n          ) {\n            continue;\n          }\n\n          // set status of the cell //\n          [candidates, candidateTrace] = this.updateCandidateOfTheCell(\n            candidates,\n            targetCellInfo,\n            processType\n          );\n\n          [candidates, candidateTraceTmp] = this.updateRelatedCells(\n            candidates,\n            targetCellInfo,\n            candidateLevel,\n            processType\n          );\n\n          // There is a cell full of wide-removed //\n          if (candidates === null) {\n            return null;\n          }\n\n          candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n          let markerTrace = [];\n          const markerIdxs = this.getMarkerIdxsFromCellIdx(targetCellInfo.idx);\n\n          for (let markerIdx of markerIdxs) {\n            let markerTraceTmp = null;\n            let targetMarkerInfo = this.initMarkerInfo(\n              markerIdx,\n              targetCellInfo.num\n            );\n\n            [markerNums, markerTraceTmp] = this.updateMarkerStatus2Selectable(\n              markerNums,\n              targetMarkerInfo,\n              prevMarkerTrace\n            );\n\n            if (markerTraceTmp) {\n              markerTrace.push(markerTraceTmp);\n            }\n          }\n\n          if (markerTrace.length === 0) {\n            trace.push(\n              this.initTraceItemCandidate(\n                candidateTrace,\n                Config.operationTypes.auto\n              )\n            );\n          } else {\n            trace.push(\n              this.initTraceItem(\n                null,\n                candidateTrace,\n                markerTrace,\n                Config.operationTypes.auto\n              )\n            );\n          }\n\n          exclusiveCandidates.push(targetCellInfo);\n\n          if (\n            isStepByStep &&\n            Config.stepByStepLevels.includes(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            return dataset;\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static setSelectableB(dataset, conditions) {\n    // console.log(\"inside setSelectableB\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const { candidateLevel, helpMode, isStepByStep } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const processType = Config.processTypes.candidates;\n    let selectableCells = [];\n\n    selectableCells = this.findSingleCandidateCellsB(\n      candidates,\n      exclusiveCandidates,\n      helpMode,\n      isStepByStep\n    );\n\n    for (let cellInfo of selectableCells) {\n      let candidateTrace = [];\n      let candidateTraceTmp = [];\n\n      if (this.isInExclusiveCandidates(exclusiveCandidates, cellInfo)) {\n        continue;\n      }\n\n      [candidates, candidateTraceTmp] = this.updateCandidateOfTheCell(\n        candidates,\n        cellInfo,\n        processType\n      );\n\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n      [candidates, candidateTraceTmp] = this.updateRelatedCells(\n        candidates,\n        cellInfo,\n        candidateLevel,\n        processType\n      );\n\n      // There is a cell full of wide-removed //\n      if (candidates === null) {\n        return null;\n      }\n\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n      let markerTrace = [];\n\n      const markerIdxs = this.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n      for (let markerIdx of markerIdxs) {\n        let markerTraceTmp = null;\n        let targetMarkerInfo = this.initMarkerInfo(markerIdx, cellInfo.num);\n\n        [markerNums, markerTraceTmp] = this.updateMarkerStatus2Selectable(\n          markerNums,\n          targetMarkerInfo,\n          prevMarkerTrace\n        );\n\n        if (markerTraceTmp) {\n          markerTrace.push(markerTraceTmp);\n        }\n      }\n\n      if (markerTrace.length === 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      } else {\n        trace.push(\n          this.initTraceItem(\n            null,\n            candidateTrace,\n            markerTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n\n      exclusiveCandidates.push(cellInfo);\n    }\n\n    return dataset;\n  }\n\n  static setSingleNumExclusiveCandidates(dataset, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidates\");\n\n    let { exclusiveCandidates } = dataset;\n\n    const { singleNumValue, isStepByStep } = conditions;\n\n    const exclusiveCandidateLength = exclusiveCandidates.length;\n\n    let numSequence = this.getNsequence();\n    if (singleNumValue) {\n      numSequence = [singleNumValue];\n    }\n\n    for (let num of numSequence) {\n      dataset = this.setSingleNumExclusiveCandidatesA(dataset, num, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n        exclusiveCandidates.length > exclusiveCandidateLength\n      ) {\n        return dataset;\n      }\n\n      dataset = this.setSingleNumExclusiveCandidatesB(dataset, num, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n        exclusiveCandidates.length > exclusiveCandidateLength\n      ) {\n        return dataset;\n      }\n    }\n\n    return dataset;\n  }\n\n  static setExclusiveUnionA(dataset, conditions) {\n    // console.log(\"inside setExclusiveUnionA\");\n\n    // union size 2 finds 2 cells with the same two candidates //\n    // such as [5, 7] and [5, 7] from cells with 2 remaining candidates //\n    // union size 3 finds 3 cells with three candidates //\n    // such as [1, 4, 8], [1, 4], [4, 8] from cells with 2 or 3 remaining candidates //\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    // const { isStepByStep, isSkipIneffective, isMarkerOff } = conditions;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const idxArray = this.getIndexSequence();\n    const unionSizes = this.getUnionSizes();\n\n    const candNumMatrix = this.getCandidateNumMatrix(candidates);\n\n    let candidateTrace = [];\n\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        const cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        const cellIndicesLength = cellIndices.length;\n\n        for (let unionSize of unionSizes) {\n          const conditions = {\n            type,\n            rcbIdx,\n            unionSize\n          };\n\n          const candLengths = this.getUnionSizes(unionSize);\n\n          // let candidateCellIndices = cellIndices.filter(idx => {\n          //   return candLengths.includes(\n          //     this.countNumsInCandidateNumMatrix(candNumMatrix, idx)\n          //   );\n          // });\n\n          let candidateCellIndices = cellIndices.filter(idx =>\n            candLengths.includes(\n              this.countNumsInCandidateNumMatrix(candNumMatrix, idx)\n            )\n          );\n\n          if (\n            cellIndicesLength < candidateCellIndices.length + 2 ||\n            candidateCellIndices.length < unionSize\n          ) {\n            continue;\n          }\n\n          //   if (\n          //   cellIndicesLength >= candidateCellIndices.length + 2 &&\n          //   candidateCellIndices.length >= unionSize\n          // ) {\n\n          // let cellInfoArray = candidateCellIndices.map(idx => {\n          //   return this.initCellInfo(\n          //     idx,\n          //     this.getNumsFromCandidateNumMatrix(candNumMatrix, idx)\n          //   );\n          // });\n\n          let cellInfoArray = candidateCellIndices.map(idx =>\n            this.initCellInfo(\n              idx,\n              this.getNumsFromCandidateNumMatrix(candNumMatrix, idx)\n            )\n          );\n\n          const unionCells = this.findExclusiveUnionA(\n            cellInfoArray,\n            conditions\n          );\n\n          // unacceptable condition //\n          if (unionCells === null) {\n            console.log(\"findExclusiveUnionA found an illegal condtion.\");\n            return null;\n          }\n\n          for (let unionCell of unionCells) {\n            if (\n              this.isInCellInfoArrayIgnoringRCBInfo(\n                exclusiveCandidates,\n                unionCell\n              )\n            ) {\n              continue;\n            }\n\n            // if (\n            //   !this.isInCellInfoArrayIgnoringRCBInfo(\n            //     exclusiveCandidates,\n            //     unionCell\n            //   )\n            // ) {\n            [candidates, candidateTrace] = this.updateCandidates4UnionA(\n              candidates,\n              unionCell,\n              isSkipIneffective\n            );\n\n            // a cell with no candidates //\n            if (candidates === null) {\n              return null;\n            }\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            exclusiveCandidates.push(unionCell);\n\n            // if (typeof isMarkerOff !== \"undefined\" || !isMarkerOff) {\n            const markerInfos = this.convertCellInfo2MarkerInfo(unionCell);\n\n            let markerTrace = [];\n            if (markerInfos && markerInfos.constructor === Array) {\n              for (let markerInfo of markerInfos) {\n                let targetMarkerInfo = this.findPreviousMarkerInfo(\n                  markerNums,\n                  prevMarkerTrace,\n                  markerInfo\n                );\n\n                if (targetMarkerInfo) {\n                  let markerTraceTmp = null;\n                  [markerNums, markerTraceTmp] = this.updateMarkerStatus(\n                    markerNums,\n                    markerInfo,\n                    prevMarkerTrace,\n                    unionCell.status\n                  );\n\n                  if (markerTraceTmp) {\n                    markerTrace.push(markerTraceTmp);\n                  }\n                } else {\n                  markerNums = this.setMarkerNum(markerNums, markerInfo);\n                  markerTrace.push(markerInfo);\n                }\n              }\n            }\n\n            if (markerTrace.length === 0) {\n              trace.push(\n                this.initTraceItemCandidate(\n                  candidateTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            } else {\n              trace.push(\n                this.initTraceItem(\n                  null,\n                  candidateTrace,\n                  markerTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            }\n            // }\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              )\n            ) {\n              return dataset;\n            }\n            // }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static findExclusiveUnionA(cellInfoArray, conditions) {\n    // console.log(\"inside findExclusiveUnionA\");\n\n    let unionCells = [];\n    const candIdxArray = this.getIndexSequence(cellInfoArray.length);\n\n    for (let unionIdxs of k_combinations(candIdxArray, conditions.unionSize)) {\n      const idxs = unionIdxs.map(i => cellInfoArray[i].idx);\n\n      if (\n        conditions.type === Config.restrictionTypes.blk &&\n        this.isInSameRowCol(idxs)\n      ) {\n        continue;\n      }\n      const numsUnion = this.getUnionNumbers(\n        unionIdxs.map(i => cellInfoArray[i].nums)\n      );\n\n      if (numsUnion.length === conditions.unionSize) {\n        const unionCell = this.initCellInfo(\n          idxs,\n          numsUnion,\n          Config.wideExclusiveStatuses[conditions.unionSize],\n          conditions.type,\n          conditions.rcbIdx,\n          conditions.unionSize\n        );\n\n        unionCells.push(unionCell);\n      } else if (numsUnion.length < conditions.unionSize) {\n        // this should not exist. something wrong //\n        return null;\n      }\n    }\n    return unionCells;\n  }\n\n  static setExclusiveUnionB(dataset, conditions) {\n    // console.log(\"inside setExclusiveUnionB\");\n\n    // pair/triple/quadruple type B //\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    // const { isStepByStep, isSkipIneffective, isMarkerOff } = conditions;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const idxArray = this.getIndexSequence();\n    const numArray = this.getNsequence();\n    const unionSizes = this.getUnionSizes();\n\n    let candidateTrace = [];\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        let cellInfos = [];\n        const cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        // collect cellInfos for candidates //\n        for (let num of numArray) {\n          const cellInfo = this.extractCellInfoFromCandidate(\n            candidates,\n            num,\n            cellIndices\n          );\n\n          if (cellInfo !== null) {\n            cellInfos.push(cellInfo);\n          }\n        }\n\n        const cellLength = cellInfos.length;\n        if (cellLength === 0) {\n          continue;\n        }\n\n        for (let unionSize of unionSizes) {\n          if (cellLength < unionSize + 2) {\n            continue;\n          }\n\n          const conditions = {\n            type,\n            rcbIdx,\n            unionSize\n          };\n\n          let unionCellArrayB = this.findExclusiveUnionB(cellInfos, conditions);\n\n          // console.log(\"unionCellArrayB\");\n          // console.log(unionCellArrayB);\n\n          for (let unionCellB of unionCellArrayB) {\n            if (\n              this.isInCellInfoArrayIgnoringRCBInfo(\n                exclusiveCandidates,\n                unionCellB\n              )\n            ) {\n              continue;\n            }\n\n            // if (\n            //   !this.isInCellInfoArrayIgnoringRCBInfo(\n            //     exclusiveCandidates,\n            //     unionCellB\n            //   )\n            // ) {\n\n            [candidates, candidateTrace] = this.updateCandidates4UnionB(\n              candidates,\n              unionCellB,\n              isSkipIneffective\n            );\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            exclusiveCandidates.push(unionCellB);\n\n            // if (typeof isMarkerOff !== \"undefined\" || !isMarkerOff) {\n            const markerInfos = this.convertCellInfo2MarkerInfo(unionCellB);\n\n            let markerTrace = [];\n            if (markerInfos && markerInfos.constructor === Array) {\n              for (let markerInfo of markerInfos) {\n                let targetMarkerInfo = this.findPreviousMarkerInfo(\n                  markerNums,\n                  prevMarkerTrace,\n                  markerInfo\n                );\n\n                if (targetMarkerInfo) {\n                  let markerTraceTmp = null;\n                  [markerNums, markerTraceTmp] = this.updateMarkerStatus(\n                    markerNums,\n                    markerInfo,\n                    prevMarkerTrace,\n                    unionCellB.status\n                  );\n\n                  if (markerTraceTmp) {\n                    markerTrace.push(markerTraceTmp);\n                  }\n                } else {\n                  markerNums = this.setMarkerNum(markerNums, markerInfo);\n                  markerTrace.push(markerInfo);\n                }\n              }\n            }\n\n            if (markerTrace.length === 0) {\n              trace.push(\n                this.initTraceItemCandidate(\n                  candidateTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            } else {\n              trace.push(\n                this.initTraceItem(\n                  null,\n                  candidateTrace,\n                  markerTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            }\n            // }\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              )\n            ) {\n              return dataset;\n            }\n            // }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static findExclusiveUnionB(cellInfos, conditions) {\n    // console.log(\"inside findExclusiveUnionB\");\n\n    const unionSizes = this.getUnionSizes(conditions.unionSize);\n    let unionCellArrayB = [];\n    let targetCellInfos = cellInfos.filter(cellInfo =>\n      unionSizes.includes(cellInfo.idxs.length)\n    );\n    const candIdxArray = this.getIndexSequence(targetCellInfos.length);\n\n    for (let unionIdxs of k_combinations(candIdxArray, conditions.unionSize)) {\n      const idxsArray = unionIdxs.map(i => targetCellInfos[i].idxs);\n      const idxsUnion = this.getUnionIndices(idxsArray);\n\n      if (idxsUnion.length === conditions.unionSize) {\n        const unionCell = this.initCellInfo(\n          idxsUnion,\n          unionIdxs.map(i => targetCellInfos[i].num),\n          Config.wideExclusiveStatuses[conditions.unionSize],\n          conditions.type,\n          conditions.rcbIdx,\n          conditions.unionSize\n        );\n\n        unionCellArrayB.push(unionCell);\n      }\n    }\n\n    return unionCellArrayB;\n  }\n\n  static setSquareCandidates(dataset, conditions) {\n    // console.log(\"inside setSquareCandidates\");\n\n    let { candidates, exclusiveCandidates, trace } = dataset;\n\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let candidateTrace = [];\n    let squareNums = this.getUnionSizes(Config.maxSquareNum);\n    const numArray = this.getNsequence();\n\n    for (let rowcol of Config.restrictionTypesStraightArray) {\n      // const counterDirection = this.flipRowCol(rowcol);\n      // const counterRC = this.getFirstLetter(counterDirection);\n\n      for (let num of numArray) {\n        const exclusiveSquareCandidates = exclusiveCandidates.filter(\n          exCand => this.isExclusiveSquare(exCand.status) && num === exCand.num\n        );\n\n        for (let squareNum of squareNums) {\n          const targetCellInfos = this.getSquareTargetCells(\n            candidates,\n            rowcol,\n            num,\n            squareNum\n          );\n\n          const squareCellInfoArray = this.findSquareCells(\n            targetCellInfos,\n            rowcol,\n            squareNum\n          );\n\n          for (let squareCellInfo of squareCellInfoArray) {\n            if (\n              this.isInExclusiveSquareCandidates(\n                exclusiveSquareCandidates,\n                squareCellInfo\n              )\n            ) {\n              continue;\n            }\n\n            [candidates, candidateTrace] = this.updateCandidates4Square(\n              candidates,\n              squareCellInfo,\n              rowcol,\n              isSkipIneffective\n            );\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            // if (candidateTrace.length > 0) {\n            exclusiveCandidates.push(squareCellInfo);\n\n            trace.push(\n              this.initTraceItemCandidate(\n                candidateTrace,\n                Config.operationTypes.auto\n              )\n            );\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level5\n              )\n            ) {\n              return dataset;\n            }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static getSquareTargetCells(candidates, rowcol, num, squareNum) {\n    const indexArray = this.getIndexSequence();\n    const squareNums = this.getUnionSizes(squareNum);\n\n    let targetCellInfos = [];\n\n    for (let iRC of indexArray) {\n      let cellIndices = this.getCandidateCellIndices(candidates, iRC, rowcol);\n\n      cellIndices = cellIndices.filter(idx =>\n        this.isNarrowCandidate(\n          this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n        )\n      );\n\n      if (squareNums.includes(cellIndices.length)) {\n        targetCellInfos.push(this.initCellInfo(cellIndices, num));\n      }\n    }\n\n    return targetCellInfos;\n  }\n\n  static findSquareCells(targetCellInfos, rowcol, squareNum) {\n    // console.log(\"inside findSquareCells\");\n\n    if (targetCellInfos.length < squareNum) {\n      return [];\n    }\n\n    let squareCellInfos = [];\n    const counterRC = this.getFirstLetter(this.flipRowCol(rowcol));\n    const num = targetCellInfos[0].num;\n    const candIdxArray = this.getIndexSequence(targetCellInfos.length);\n\n    for (let iSet of k_combinations(candIdxArray, squareNum)) {\n      const candidateRCIdxsArray = iSet.map(i =>\n        targetCellInfos[i].idxs.map(idx => idx[counterRC])\n      );\n\n      const unionRCIdxs = this.getUnionNumbers(candidateRCIdxsArray);\n\n      if (unionRCIdxs.length === squareNum) {\n        const squareCellInfo = {\n          status: Config.candidateStatus.exclusiveSquare,\n          num,\n          idxsArray: iSet.map(i => targetCellInfos[i].idxs),\n          rowcol: rowcol\n        };\n\n        squareCellInfos.push(squareCellInfo);\n      }\n    }\n\n    return squareCellInfos;\n  }\n\n  static setAssumptionTest(dataset, conditions) {\n    // console.log(\"inside setAssaumptionTest\");\n\n    let { candidates, exclusiveCandidates, trace } = dataset;\n\n    const { isStepByStep } = conditions;\n\n    let candidateTrace = [];\n    let targetCellInfoSets = this.findAssumptionTest(dataset);\n\n    for (let targetCellInfoSet of targetCellInfoSets) {\n      if (\n        this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfoSet)\n      ) {\n        continue;\n      }\n\n      // if (\n      //   !this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfoSet)\n      // ) {\n\n      for (let [i, cellInfo] of targetCellInfoSet.cellInfos.entries()) {\n        cellInfo.prevStatuses = [];\n        cellInfo.statuses = [];\n\n        for (let num of cellInfo.nums) {\n          const cInfo = this.initCellInfo(cellInfo.idx, num);\n          cellInfo.prevStatuses.push(\n            this.getCandidateStatus(candidates, cInfo)\n          );\n\n          if (i === 0 && num === targetCellInfoSet.inhibitedNum) {\n            cellInfo.statuses.push(Config.candidateStatus.removable);\n\n            candidates = this.assignRemovable2Candidates(candidates, cInfo);\n          } else {\n            cellInfo.statuses.push(Config.candidateStatus.assumptionTest);\n\n            candidates = this.assignAssumptionTest2Candidates(\n              candidates,\n              cInfo\n            );\n          }\n        }\n\n        candidateTrace.push(cellInfo);\n      }\n\n      exclusiveCandidates.push(targetCellInfoSet);\n\n      if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateTypes.assumptionTest)\n      ) {\n        return dataset;\n      }\n      // }\n    }\n\n    return dataset;\n  }\n\n  static findAssumptionTest(dataset) {\n    // console.log(\"inside findAssumptionTest\");\n\n    let { candidates } = dataset;\n    let idxs = this.getAllCellIndicies();\n    let targetCellInfos = [];\n\n    idxs = idxs.filter(\n      idx =>\n        !this.isWideSelectedInCell(candidates, idx) &&\n        this.countNarrowCandidates(candidates, idx) === 2\n    );\n\n    let cellInfos = idxs.map(idx =>\n      this.initCellInfo(idx, this.getNarrowCandidateNums(candidates, idx))\n    );\n\n    let rectangles = this.getRectangleSet(cellInfos);\n\n    for (let rectangle of rectangles) {\n      const targetCellInfo = this.getAssumptionTestCellInfo(rectangle);\n      if (targetCellInfo) {\n        targetCellInfos.push(targetCellInfo);\n      }\n    }\n\n    return targetCellInfos;\n  }\n\n  static getRectangleSet(cellInfos) {\n    let rectangleSet = [];\n\n    while (cellInfos.length >= 4) {\n      const pivotCellInfo = cellInfos.shift();\n\n      let rowMemberCellInfos = cellInfos.filter(\n        cellInfo => pivotCellInfo.idx.r === cellInfo.idx.r\n      );\n\n      let colMemberCellInfos = cellInfos.filter(\n        cellInfo => pivotCellInfo.idx.c === cellInfo.idx.c\n      );\n\n      for (let rowCell of rowMemberCellInfos) {\n        for (let colCell of colMemberCellInfos) {\n          let oppositeCellInfos = cellInfos.filter(\n            cellInfo =>\n              rowCell.idx.c === cellInfo.idx.c &&\n              colCell.idx.r === cellInfo.idx.r\n          );\n\n          if (oppositeCellInfos.length === 1) {\n            rectangleSet.push([\n              [pivotCellInfo, oppositeCellInfos.pop()],\n              [rowCell, colCell]\n            ]);\n          }\n        }\n      }\n    }\n\n    return rectangleSet;\n  }\n\n  static getAssumptionTestCellInfo(rectangleCellInfos) {\n    for (let [i, aPair] of rectangleCellInfos.entries()) {\n      const counterPair = rectangleCellInfos[i === 0 ? 1 : 0];\n\n      for (let [j, pivotCell] of aPair.entries()) {\n        const oppositeCell = aPair[j === 0 ? 1 : 0];\n\n        for (let pNum of pivotCell.nums) {\n          if (\n            !(\n              counterPair[0].nums.includes(pNum) &&\n              counterPair[1].nums.includes(pNum)\n            )\n          ) {\n            continue;\n          }\n\n          const counterNums = counterPair.map(cell =>\n            cell.nums.filter(num => num !== pNum).pop()\n          );\n\n          if (this.isTwoArraysSame(oppositeCell.nums, counterNums)) {\n            return {\n              cellInfos: [pivotCell, oppositeCell, ...counterPair],\n              inhibitedNum: pNum,\n              status: Config.candidateStatus.assumptionTest\n            };\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  static isStatusWorth2Store(markerTrace, markerInfo) {\n    // console.log(\"inside isStatusWorth2Store\");\n\n    for (let markerTraceItem of markerTrace) {\n      if (this.isMatchTwoMarkers(markerTraceItem, markerInfo)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static isMatchTwoMarkers(markerInfoA, markerInfoB) {\n    return (\n      markerInfoA.num === markerInfoB.num &&\n      markerInfoA.idx.b === markerInfoB.idx.b &&\n      markerInfoA.idx.rcType === markerInfoB.idx.rcType &&\n      markerInfoA.idx.rc === markerInfoB.idx.rc\n    );\n  }\n\n  static selectSelectables(dataset) {\n    // console.log(\"inside selectSelectables\");\n\n    let { numMatrix, candidates, markerNums, trace } = dataset;\n\n    const targetTrace = this.getTraceItemsWithSelectables(trace);\n\n    for (let targetTraceItem of targetTrace) {\n      let numTrace = null;\n      let candidateTrace = [];\n      let markerTrace = [];\n\n      for (let cellInfo of targetTraceItem.candidate) {\n        const newCellInfo = this.deepCopy(cellInfo);\n\n        if (\n          this.isSelectableCellInfo(newCellInfo) &&\n          this.isSelectable(this.getCandidateStatus(candidates, newCellInfo))\n        ) {\n          newCellInfo.prevStatus = Config.candidateStatus.selectable;\n          newCellInfo.status = Config.candidateStatus.selected;\n\n          numMatrix = this.assignNum2NumMatrix(numMatrix, newCellInfo);\n          numTrace = newCellInfo;\n\n          candidates = this.assignSelected2Candidates(candidates, newCellInfo);\n\n          const markerIdxs = Util.getMarkerIdxsFromCellIdx(newCellInfo.idx);\n\n          for (let markerIdx of markerIdxs) {\n            const markerInfo = Util.initMarkerInfo(markerIdx, newCellInfo.num);\n            let markerInfos4Trace = [];\n\n            if (Util.isTheNumInMarker(markerNums, markerInfo)) {\n              [markerNums, markerInfos4Trace] = Util.resetMarker(markerNums, [\n                markerInfo\n              ]);\n            }\n\n            markerTrace = markerTrace.concat(markerInfos4Trace);\n          }\n\n          candidateTrace.push(newCellInfo);\n        } else if (this.isRemovableCellInfo(newCellInfo)) {\n          if (\"idxs\" in newCellInfo) {\n            let idxs = [];\n            for (let idx of newCellInfo.idxs) {\n              const cellInfoSub = this.initCellInfo(idx, newCellInfo.num);\n              const status = this.getCandidateStatus(candidates, cellInfoSub);\n\n              if (this.isRemovable(status)) {\n                candidates = this.assignRemoved2Candidates(\n                  candidates,\n                  cellInfoSub\n                );\n\n                idxs.push(idx);\n                newCellInfo.prevStatuses.push(status);\n              }\n            }\n\n            if (idxs.length === 0) {\n              continue;\n            }\n\n            newCellInfo.idxs = idxs;\n            newCellInfo.status = Config.candidateStatus.removed;\n            candidateTrace.push(newCellInfo);\n          } else if (\n            this.isRemovable(this.getCandidateStatus(candidates, newCellInfo))\n          ) {\n            candidates = this.assignRemoved2Candidates(candidates, newCellInfo);\n\n            newCellInfo.prevStatus = Config.candidateStatus.removable;\n            newCellInfo.status = Config.candidateStatus.removed;\n            candidateTrace.push(newCellInfo);\n          }\n        }\n      }\n\n      if (numTrace !== null) {\n        trace.push(\n          this.initTraceItem(\n            numTrace,\n            candidateTrace,\n            markerTrace,\n            Config.operationTypes.auto\n          )\n        );\n      } else if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n    }\n\n    return dataset;\n  }\n\n  static convertSelectable2Selected(dataset) {\n    let { numMatrix, candidates } = dataset;\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      const i = this.getSelectableIdx(candidates, idx);\n      const cellInfo = this.initCellInfo(idx, this.i2n(i));\n      if (typeof i === \"number\") {\n        numMatrix = this.assignNum2NumMatrix(numMatrix, cellInfo);\n\n        [candidates] = this.updateCandidateOfTheCell(candidates, cellInfo);\n      }\n    }\n\n    return dataset;\n  }\n\n  static eraseRmovalbe(dataset) {\n    // console.log(\"inside eraseRmovalbe\");\n\n    let { candidates, trace } = dataset;\n    const targetTrace = this.getTraceItemsWithRemovableWithoutSelectable(trace);\n\n    for (let targetTraceItem of targetTrace) {\n      let candidateTrace = [];\n      for (let cellInfo of targetTraceItem.candidate) {\n        let newCellInfo = this.deepCopy(cellInfo);\n\n        if (\"idxs\" in newCellInfo) {\n          newCellInfo.prevStatuses = [];\n\n          // const idxs = newCellInfo.idxs.filter(idx => {\n          //   const cellInfoSub = this.initCellInfo(\n          //     idx,\n          //     newCellInfo.num,\n          //     newCellInfo.status\n          //   );\n          //   return (\n          //     this.isRemovableCellInfo(cellInfoSub) &&\n          //     this.isRemovable(this.getCandidateStatus(candidates, cellInfoSub))\n          //   );\n          // });\n\n          // const idxs = newCellInfo.idxs.filter(idx =>\n          //   this.isRemovable4erase(\n          //     candidates,\n          //     this.initCellInfo(idx, newCellInfo.num, newCellInfo.status)\n          //   )\n          // );\n\n          let idxs = [];\n          for (let idx of newCellInfo.idxs) {\n            const cellInfoSub = this.initCellInfo(\n              idx,\n              newCellInfo.num,\n              newCellInfo.status\n            );\n            if (this.isRemovable4erase(candidates, cellInfoSub)) {\n              idxs.push(idx);\n            }\n          }\n          // idxs = idxs.filter(idx =>\n          //   this.isRemovable4erase(\n          //     candidates,\n          //     idx,\n          //     newCellInfo.num,\n          //     newCellInfo.status\n          //   )\n          // );\n\n          if (idxs.length === 0) {\n            continue;\n          }\n\n          for (let idx of idxs) {\n            const cellInfoSub = this.initCellInfo(\n              idx,\n              newCellInfo.num,\n              newCellInfo.status\n            );\n\n            newCellInfo.prevStatuses.push(Config.candidateStatus.removable);\n\n            candidates = this.assignRemoved2Candidates(candidates, cellInfoSub);\n\n            // candidateTrace.push(cellInfo);\n          }\n\n          newCellInfo.status = Config.candidateStatus.removed;\n        } else {\n          if (\n            this.isRemovableCellInfo(newCellInfo) &&\n            this.isRemovable(this.getCandidateStatus(candidates, newCellInfo))\n          ) {\n            newCellInfo.prevStatus = Config.candidateStatus.removable;\n            newCellInfo.status = Config.candidateStatus.removed;\n\n            candidates = this.assignRemoved2Candidates(candidates, newCellInfo);\n\n            // candidateTrace.push(cellInfo);\n          } else {\n            continue;\n          }\n        }\n        candidateTrace.push(newCellInfo);\n      }\n\n      if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n    }\n\n    return dataset;\n  }\n\n  static isRemovable4erase(candidates, cellInfo) {\n    // const cellInfoSub = this.initCellInfo(\n    //   idx,\n    //   newCellInfo.num,\n    //   newCellInfo.status\n    // );\n    return (\n      this.isRemovableCellInfo(cellInfo) &&\n      this.isRemovable(this.getCandidateStatus(candidates, cellInfo))\n    );\n  }\n\n  // static isRemovable4erase(candidates, idx, num, status) {\n  //   const cellInfo = this.initCellInfo(idx, num, status);\n\n  //   return (\n  //     this.isRemovableCellInfo(cellInfo) &&\n  //     this.isRemovable(this.getCandidateStatus(candidates, cellInfo))\n  //   );\n  // }\n\n  static eraseExclusiveColors(candidates, trace) {\n    let candidateTrace = [];\n    const numArray = this.getNsequence();\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let num of numArray) {\n      const cellInfo4num = this.initCellInfo(\n        [],\n        num,\n        Config.candidateStatus.candidate\n      );\n      cellInfo4num.prevStatuses = [];\n\n      for (let idx of allIdxs) {\n        const cellInfo = this.initCellInfo(\n          idx,\n          num,\n          Config.candidateStatus.candidate\n        );\n\n        const status = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isWideExclusiveCandidate(status)) {\n          cellInfo4num.idxs.push(idx);\n          cellInfo4num.prevStatuses.push(status);\n\n          candidates = this.assignCandidate2Candidates(candidates, cellInfo);\n        }\n      }\n\n      if (cellInfo4num.idxs.length > 0) {\n        candidateTrace.push(cellInfo4num);\n      }\n    }\n\n    if (candidateTrace.length > 0) {\n      trace.push(\n        this.initTraceItemCandidate(candidateTrace, Config.operationTypes.auto)\n      );\n    }\n\n    return [candidates, trace];\n  }\n\n  static filterTraceItems(trace, status, excludingStatus = \"dummyStatus\") {\n    const traceCopy = this.deepCopy(trace);\n\n    return traceCopy.filter(\n      traceItem =>\n        traceItem.candidate !== null &&\n        traceItem.candidate.reduce(\n          (hasStatus, cellInfo) => cellInfo.status === status || hasStatus,\n          false\n        ) &&\n        !traceItem.candidate.reduce(\n          (hasStatus, cellInfo) =>\n            cellInfo.status === excludingStatus || hasStatus,\n          false\n        )\n    );\n  }\n\n  static getTraceItemsWithSelectables(trace) {\n    return this.filterTraceItems(trace, Config.candidateStatus.selectable);\n  }\n\n  static getTraceItemsWithRemovable(trace) {\n    return this.filterTraceItems(trace, Config.candidateStatus.removable);\n  }\n\n  static getTraceItemsWithRemovableWithoutSelectable(trace) {\n    return this.filterTraceItems(\n      trace,\n      Config.candidateStatus.removable,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static convertExclusive2Candidates(status) {\n    return Config.narrowCandidateList.includes(status)\n      ? Config.candidateStatus.candidate\n      : status;\n  }\n\n  static setBackCandidates(candidates) {\n    candidates = candidates.map(row =>\n      row.map(cell =>\n        cell.map(\n          status =>\n            Config.wideCandidateList.includes(status)\n              ? Config.candidateStatus.candidate\n              : status\n          // this.convertExclusive2Candidates(status)\n        )\n      )\n    );\n\n    return candidates;\n  }\n\n  static updateCandidates4UnionA(candidates, unionCell, isSkipIneffective) {\n    // console.log(\"inside updateCandidates4UnionA\");\n\n    let status = Config.wideExclusiveStatuses[unionCell.unionSize];\n\n    let candidateTrace = [];\n    let relatedCellInfos = this.getRelatedCellInfo4unionA(\n      candidates,\n      unionCell\n    );\n\n    if (isSkipIneffective && relatedCellInfos.length === 0) {\n      return [candidates, []];\n    }\n\n    for (let idx of unionCell.idxs) {\n      for (let num of unionCell.nums) {\n        const targetCellInfo = this.initCellInfo(idx, num, status);\n        const prevStatus = this.getCandidateStatus(candidates, targetCellInfo);\n\n        if (this.isNarrowCandidate(prevStatus)) {\n          candidates = this.assignStatus2Candidates(\n            candidates,\n            targetCellInfo,\n            status\n          );\n\n          targetCellInfo.prevStatus = prevStatus;\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    for (let cellInfo of relatedCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n        return [null, null];\n      }\n    }\n\n    // console.log(\"relatedCellInfos\");\n    // console.log(relatedCellInfos);\n\n    // if (this.isCellsAllWideRemoved(candidates, relatedCellInfos.idxs)) {\n    //   return [null, null];\n    // }\n\n    candidateTrace = candidateTrace.concat(relatedCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates4UnionB(candidates, unionCell, isSkipIneffective) {\n    let candidateTrace = [];\n    let status = Config.wideExclusiveStatuses[unionCell.unionSize];\n\n    const numArray = this.getNsequence();\n\n    for (let idx of unionCell.idxs) {\n      for (let num of numArray) {\n        const assignStatus = unionCell.nums.includes(num)\n          ? status\n          : Config.candidateStatus.removable;\n        const targetCellInfo = this.initCellInfo(idx, num, assignStatus);\n        targetCellInfo.prevStatus = this.getCandidateStatus(\n          candidates,\n          targetCellInfo\n        );\n\n        if (this.isNarrowCandidate(targetCellInfo.prevStatus)) {\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    let relatedCellInfos = this.getRelatedCellInfo4unionB(\n      candidates,\n      unionCell\n    );\n\n    const removableTargetCellInfos = candidateTrace.filter(\n      cellInfo => cellInfo.status === Config.candidateStatus.removable\n    );\n\n    if (\n      isSkipIneffective &&\n      removableTargetCellInfos.length === 0 &&\n      relatedCellInfos.length === 0\n    ) {\n      return [candidates, []];\n    }\n\n    for (let cellInfo of candidateTrace) {\n      candidates = this.assignStatus2Candidates(\n        candidates,\n        cellInfo,\n        cellInfo.status\n      );\n    }\n\n    for (let cellInfo of relatedCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      // // This problem may never happen //\n      // if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n      //   return [null, null];\n      // }\n    }\n\n    candidateTrace = candidateTrace.concat(relatedCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates4Square(\n    candidates,\n    squareCellInfo,\n    rowcol,\n    isSkipIneffective\n  ) {\n    // console.log(\"inside updateCandidates4Square\");\n\n    const counterDirection = this.flipRowCol(rowcol);\n    const counterRC = this.getFirstLetter(counterDirection);\n\n    // console.log(\"counterDirection: \", counterDirection);\n\n    // const squareIndices = squareCellInfo.idxs1.concat(squareCellInfo.idxs2);\n    const squareIndices = this.flattenMatrix2Array(squareCellInfo.idxsArray);\n    const rawRCIdxs = squareCellInfo.idxsArray.map(idxs =>\n      this.flattenMatrix2Array(idxs.map(idx => idx[counterRC]))\n    );\n    const keyRCIdxs = this.getUnionNumbers(rawRCIdxs);\n\n    // console.log(\"squareIndices\");\n    // console.log(squareIndices);\n\n    // console.log(\"rawRCIdxs\");\n    // console.log(rawRCIdxs);\n\n    // console.log(\"keyRCIdxs\");\n    // console.log(keyRCIdxs);\n\n    let candidateTrace = [];\n\n    let targetCellInfos = [];\n    let unTargetCellInfos = [];\n\n    // for (let keyIdx of squareCellInfo.idxs1) {\n    // for (let keyIdx of squareCellInfo.idxsArray[0]) {\n    for (let keyRCIdx of keyRCIdxs) {\n      const cellIndices = this.getCandidateCellIndices(\n        candidates,\n        // keyIdx[counterRC],\n        keyRCIdx,\n        counterDirection\n      );\n\n      for (let idx of cellIndices) {\n        const cellInfo = this.initCellInfo(idx, squareCellInfo.num);\n        cellInfo.prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isInCellInfoArray(squareIndices, idx)) {\n          cellInfo.status = Config.candidateStatus.exclusiveSquare;\n\n          targetCellInfos.push(cellInfo);\n        } else if (this.isNarrowCandidate(cellInfo.prevStatus)) {\n          cellInfo.status = Config.candidateStatus.removable;\n\n          unTargetCellInfos.push(cellInfo);\n        }\n      }\n    }\n\n    if (isSkipIneffective && unTargetCellInfos.length === 0) {\n      // continue;\n      return [candidates, []];\n    }\n\n    // console.log(\"targetCellInfos\");\n    // console.log(targetCellInfos);\n\n    for (let cellInfo of targetCellInfos) {\n      candidates = this.assignExclusiveSquare2Candidates(candidates, cellInfo);\n    }\n\n    // console.log(\"unTargetCellInfos\");\n    // console.log(unTargetCellInfos);\n\n    for (let cellInfo of unTargetCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n        return null;\n      }\n    }\n\n    candidateTrace = candidateTrace.concat(targetCellInfos);\n    candidateTrace = candidateTrace.concat(unTargetCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static findCandidateSingle(cellInfos) {\n    return cellInfos.filter(cellInfo => cellInfo.idxs.length === 1);\n  }\n\n  static findSingleCandidateCellsB(\n    candidates,\n    exclusiveCandidates,\n    // helpMode,\n    isStepByStep = true\n  ) {\n    // console.log(\"inside findSingleCandidateCells\");\n\n    let singleCandidateCells = [];\n\n    // breakPoint:\n    for (let [r, row] of candidates.entries()) {\n      for (let [c, cell] of row.entries()) {\n        if (\n          cell.filter(cand => Config.wideSelectedList.includes(cand)).length > 0\n        ) {\n          continue;\n        }\n\n        if (\n          cell.filter(cand => Config.narrowCandidateList.includes(cand))\n            .length === 1\n        ) {\n          const idxs = Config.narrowCandidateList\n            .map(status => cell.indexOf(status))\n            .filter(idx => idx >= 0);\n\n          if (idxs.length === 1) {\n            const i = idxs.pop();\n\n            const targetCellInfo = this.initCellInfo(\n              this.initCellIdx(r, c),\n              this.i2n(i),\n              Config.candidateStatus.selectable\n            );\n\n            if (\n              !this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo)\n            ) {\n              singleCandidateCells.push(targetCellInfo);\n              // exclusiveCandidates.push(targetCellInfo);\n\n              if (\n                isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateTypes.singleCandidate\n                )\n              ) {\n                return singleCandidateCells;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return singleCandidateCells;\n  }\n\n  static isInsoluble(candidates) {\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      if (this.isCellAllWideRemoved(candidates, idx)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static findExclusiveCandidateUnionA(\n    candidates,\n    exclusiveCandidates,\n    unionSize = 2,\n    isStepByStep = true\n  ) {\n    // console.log(\"inside findExclusiveCandidateUnionA\");\n    // console.log(\"unionSize: \", unionSize);\n\n    // union size 2 finds 2 cells with the same two candidates //\n    // such as [5, 7] and [5, 7] from cells with 2 remaining candidates //\n    // union size 3 finds 3 cells with three candidates //\n    // such as [1, 4, 8], [1, 4], [4, 8] from cells with 2 or 3 remaining candidates //\n\n    let unionCells = [];\n    const candNumMatrix = this.getCandidateNumMatrix(candidates);\n    const idxArray = this.getIndexSequence();\n\n    // candLengths [2] for unionSize 2, [2,3] for unionSize 3\n    const candLengths = this.getIndexSequence(unionSize - 1).map(i => i + 2);\n\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        let cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        cellIndices = cellIndices.filter(idx =>\n          candLengths.includes(candNumMatrix[idx.r][idx.c].length)\n        );\n\n        if (cellIndices.length >= unionSize) {\n          let cellInfoArray = cellIndices.map(idx => {\n            return {\n              nums: candNumMatrix[idx.r][idx.c],\n              idx: idx\n            };\n          });\n\n          const candIdxArray = this.getIndexSequence(cellInfoArray.length);\n          for (let unionIdxs of k_combinations(candIdxArray, unionSize)) {\n            const idxs = unionIdxs.map(i => cellInfoArray[i].idx);\n            if (type === \"blk\" && this.isInSameRowCol(idxs)) {\n              continue;\n            }\n\n            const numsUnion = this.getUnionNumbers(\n              unionIdxs.map(i => cellInfoArray[i].nums)\n            );\n\n            if (numsUnion.length === unionSize) {\n              const unionCell = {\n                nums: numsUnion,\n                idxs: idxs,\n                type: type,\n                rcbIdx: rcbIdx\n              };\n\n              if (\n                isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateLevelTypes.level4\n                ) &&\n                !this.isInExclusiveCandidates(exclusiveCandidates, unionCell)\n              ) {\n                return [unionCell];\n              }\n\n              unionCells.push(unionCell);\n            }\n          }\n        }\n      }\n    }\n\n    return unionCells;\n  }\n\n  // set status for the very cell //\n  static updateCandidateOfTheCell(\n    candidates,\n    cellInfo,\n    // level = 1,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside updateCandidateOfTheCell\");\n\n    let indexArray = [];\n    let selectStatus = Config.candidateStatus.candidate;\n    let removeStatus = Config.candidateStatus.candidate;\n    let candidateTrace = [];\n\n    // set candidate types depending on the action type //\n    if (processType === Config.processTypes.insertion) {\n      selectStatus = Config.candidateStatus.selected;\n      removeStatus = Config.candidateStatus.removed;\n    } else {\n      selectStatus = Config.candidateStatus.selectable;\n      if (\n        [\n          Config.processTypes.candidates,\n          Config.processTypes.singleNum\n        ].includes(processType)\n      ) {\n        removeStatus = Config.candidateStatus.removable;\n      }\n    }\n\n    if (processType === Config.processTypes.singleNum) {\n      indexArray.push(Util.n2i(cellInfo.num));\n    } else {\n      indexArray = this.getIndexSequence();\n    }\n\n    for (let i of indexArray) {\n      const targetCellInfo = Util.initCellInfo(cellInfo.idx, Util.i2n(i));\n\n      if (cellInfo.num === Util.i2n(i)) {\n        let targetCellInfo = this.initCellInfo(\n          cellInfo.idx,\n          cellInfo.num,\n          selectStatus\n        );\n\n        targetCellInfo.prevStatus = this.getCandidateStatus(\n          candidates,\n          cellInfo\n        );\n        candidates = Util.assignStatus2Candidates(\n          candidates,\n          cellInfo,\n          selectStatus\n        );\n\n        candidateTrace.push(targetCellInfo);\n      } else {\n        const prevStatus = Util.getCandidateStatus(candidates, targetCellInfo);\n\n        if (!Util.isRemoved(prevStatus)) {\n          candidates = Util.assignStatus2Candidates(\n            candidates,\n            targetCellInfo,\n            removeStatus\n          );\n\n          targetCellInfo.status = removeStatus;\n          targetCellInfo.prevStatus = prevStatus;\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateRelatedCells(\n    candidates,\n    cellInfo,\n    level = 1,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside updateRelatedCells\");\n\n    let candidateTrace = [];\n\n    if (level === 0) {\n      return [candidates, candidateTrace];\n    }\n\n    const removeStatus =\n      processType === Config.processTypes.insertion\n        ? Config.candidateStatus.removed\n        : Config.candidateStatus.removable;\n\n    const relatedIndices = this.getSingleNumCandidateCells(\n      candidates,\n      cellInfo.num,\n      this.getRelatedIndicesBesidesItself(cellInfo.idx),\n      processType\n    );\n\n    for (let idx of relatedIndices) {\n      let targetCellInfo = this.initCellInfo(idx, cellInfo.num, removeStatus);\n      targetCellInfo.prevStatus = Util.getCandidateStatus(\n        candidates,\n        targetCellInfo\n      );\n\n      candidates = Util.assignStatus2Candidates(\n        candidates,\n        Util.initCellInfo(idx, cellInfo.num),\n        removeStatus\n      );\n\n      if (this.isCellAllWideRemoved(candidates, idx)) {\n        return [null, null];\n      }\n\n      candidateTrace.push(targetCellInfo);\n    }\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates(dataset, cellInfo, candidateLevel) {\n    let { candidates } = dataset;\n\n    let candidateTrace = [];\n    let candidateTraceTmp = [];\n\n    [candidates, candidateTrace] = this.updateCandidateOfTheCell(\n      candidates,\n      cellInfo\n    );\n\n    [candidates, candidateTraceTmp] = this.updateRelatedCells(\n      candidates,\n      cellInfo,\n      candidateLevel,\n      Config.processTypes.insertion\n    );\n\n    // There is a cell full of wide-removed //\n    if (candidates === null) {\n      return null;\n    }\n\n    if (candidateTraceTmp.length > 0) {\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n    }\n\n    if (candidateTrace.length > 0) {\n      dataset.trace.push(\n        this.initTraceItemCandidate(candidateTrace, Config.operationTypes.auto)\n      );\n    }\n\n    return dataset;\n  }\n\n  static flipCandidateStatus(candidates, cellInfo) {\n    const status = this.getCandidateStatus(candidates, cellInfo);\n\n    cellInfo.prevStatus = status;\n    if (status !== Config.candidateStatus.removed) {\n      cellInfo.status = Config.candidateStatus.removed;\n      candidates = this.assignRemoved2Candidates(candidates, cellInfo);\n    } else {\n      cellInfo.status = Config.candidateStatus.candidate;\n      candidates = this.assignCandidate2Candidates(candidates, cellInfo);\n    }\n\n    return [candidates, cellInfo];\n  }\n\n  static isSelected(candidateStatus) {\n    return Config.selectedList.includes(candidateStatus);\n  }\n\n  static hasSelected(candidates, idx) {\n    return this.getCandidateStatusArray(candidates, idx).reduce(\n      (having, status) => having || this.isSelected(status),\n      false\n    );\n  }\n\n  static isWideSelected(candidateStatus) {\n    return Config.wideSelectedList.includes(candidateStatus);\n  }\n\n  static isWideSelectedInStatuses(statuses) {\n    return statuses.reduce(\n      (isSelected, status) => this.isWideSelected(status) || isSelected,\n      false\n    );\n  }\n\n  static isWideSelectedInCell(candidates, idx) {\n    return this.isWideSelectedInStatuses(\n      this.getCandidateStatusArray(candidates, idx)\n    );\n  }\n\n  static isStatusesAllNarrowCandidates(statuses) {\n    return statuses.reduce(\n      (isCandidates, status) => this.isNarrowCandidate(status) && isCandidates,\n      true\n    );\n  }\n\n  static isStatusesAllWideRemoved(statuses) {\n    return statuses.reduce(\n      (isRemoved, status) => this.isWideRemoved(status) && isRemoved,\n      true\n    );\n  }\n\n  static isCellAllWideRemoved(candidates, idx) {\n    return this.countWideRemoved(candidates, idx) === Config.size;\n  }\n\n  static isCellsAllWideRemoved(candidates, idxs) {\n    return idxs.reduce(\n      (isWrong, idx) => this.isCellAllWideRemoved(candidates, idx) || isWrong,\n      false\n    );\n  }\n\n  static isLastCandidate(candidates, cellInfo) {\n    return (\n      this.countCandidates(candidates, cellInfo.idx) === 1 &&\n      this.isCandidate(this.getCandidateStatus(candidates, cellInfo))\n    );\n  }\n\n  static isWideCandidate(candidateStatus) {\n    return Config.wideCandidateList.includes(candidateStatus);\n  }\n\n  static isNarrowCandidate(candidateStatus) {\n    return Config.narrowCandidateList.includes(candidateStatus);\n  }\n\n  static isCandidate(candidateStatus) {\n    // console.log(\"inside isCandidate\");\n\n    return Config.candidateList.includes(candidateStatus);\n  }\n\n  static isNarrowSelected(status) {\n    return status === Config.candidateStatus.selected;\n  }\n\n  static isSelectable(status) {\n    return status === Config.candidateStatus.selectable;\n  }\n\n  static isSelectableCell(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.includes(Config.candidateStatus.selectable);\n  }\n\n  static isRemovable(status) {\n    return status === Config.candidateStatus.removable;\n  }\n\n  static isRemoved(status) {\n    return status === Config.candidateStatus.removed;\n  }\n\n  static isWideRemoved(status) {\n    return Config.wideRemovedList.includes(status);\n  }\n\n  static isExclusiveSingle(status) {\n    return status === Config.candidateStatus.exclusiveSingle;\n  }\n\n  static isExclusiveDouble(status) {\n    return status === Config.candidateStatus.exclusiveDouble;\n  }\n\n  static isExclusiveTriple(status) {\n    return status === Config.candidateStatus.exclusiveTriple;\n  }\n\n  static isExclusiveQuadruple(status) {\n    return status === Config.candidateStatus.exclusiveQuadruple;\n  }\n\n  static isExclusiveMultiple(status) {\n    return Config.exclusiveMultiples.includes(status);\n  }\n\n  static isExclusiveDoubleOrTriple(status) {\n    return this.isExclusiveDouble(status) || this.isExclusiveTriple(status);\n  }\n\n  static isExclusiveSquare(status) {\n    return status === Config.candidateStatus.exclusiveSquare;\n  }\n\n  static isAssumptionTest(status) {\n    return status === Config.candidateStatus.assumptionTest;\n  }\n\n  static isWideExclusiveCandidate(status) {\n    return Config.wideExclusiveStatuses.includes(status);\n  }\n\n  static isCandidateWithoutRemovable(candidate) {\n    const candidateUpper = candidate.toUpperCase();\n    const statusCandidateUpper = Config.candidateStatus.candidate.toUpperCase();\n    const statusSelectable = Config.candidateStatus.selectable;\n    const statusRemovable = Config.candidateStatus.removable;\n\n    return (\n      (candidateUpper.includes(statusCandidateUpper) &&\n        candidate !== statusRemovable) ||\n      candidate === statusSelectable\n    );\n  }\n\n  static isSelectableCellInfo(cellInfo) {\n    return cellInfo.status === Config.candidateStatus.selectable;\n  }\n\n  static isRemovableCellInfo(cellInfo) {\n    return cellInfo.status === Config.candidateStatus.removable;\n  }\n\n  static getNarrowCandidateNums(candidates, idx) {\n    const nums = this.getNsequence();\n\n    return nums.filter(num =>\n      this.isNarrowCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n  }\n\n  static getCandidateNums(candidates, idx) {\n    const statusArray = this.getCandidateStatusArray(candidates, idx);\n\n    let candNums = [];\n    for (let [i, status] of statusArray.entries()) {\n      if (this.isCandidate(status)) {\n        candNums.push(this.i2n(i));\n      }\n    }\n\n    return candNums;\n  }\n\n  static getWideCandidateNums(candidates, idx) {\n    const nums = this.getNsequence();\n\n    return nums.filter(num =>\n      this.isWideCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n  }\n\n  // not used? //\n  static getCandidateIndicesFromCandidateArray(candidateArray) {\n    const idxArray = this.getIndexSequence();\n    return idxArray.filter(i => this.isCandidate(candidateArray[i]));\n  }\n\n  // not used? //\n  static getCandidateIndicesFromCandidateArrayExcludingRemovable(\n    candidateArray\n  ) {\n    const idxArray = this.getIndexSequence();\n    return idxArray.filter(i =>\n      this.isCandidateWithoutRemovable(candidateArray[i])\n    );\n  }\n\n  static extractCellInfoFromCandidate(candidates, num, cellIndices) {\n    // console.log(\"inside extractCellInfoFromCandidate\");\n\n    const filteredCellIndices = cellIndices.filter(idx =>\n      this.isNarrowCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n\n    if (filteredCellIndices.length === 0) {\n      return null;\n    }\n\n    return this.initCellInfo(filteredCellIndices, num);\n  }\n\n  // not used? //\n  static extractCellInfoFromCandidateExcludingRemovable(\n    candidates,\n    num,\n    cellIndices\n  ) {\n    const filteredCellIndices = cellIndices.filter(idx =>\n      this.isCandidateWithoutRemovable(candidates[idx.r][idx.c][num - 1])\n    );\n\n    if (filteredCellIndices.length === 0) {\n      return null;\n    }\n    return { num: num, idxs: filteredCellIndices };\n  }\n\n  // seems not used //\n  static getSelectableCandidate4Num(candidates, num, cellIndices) {\n    // console.log(\"inside getSelectableCandidate4Num\");\n\n    const cellInfo = this.extractCellInfoFromCandidate(\n      candidates,\n      num,\n      cellIndices\n    );\n\n    if (cellInfo !== null && cellInfo.idxs.length === 1) {\n      return {\n        idx: cellInfo.idxs[0],\n        num: num\n      };\n    }\n    return null;\n  }\n\n  // Seems not used //\n  static updateCandidates4Selectable(candidates, cellInfo) {\n    // console.log(\"updateCandidates4Selectable is called\");\n\n    if (cellInfo !== null) {\n      for (let i of this.getIndexSequence()) {\n        if (i === cellInfo.num - 1) {\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] =\n            Config.candidateStatus.selectable;\n        } else if (\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] !==\n          Config.candidateStatus.removed\n        ) {\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] =\n            Config.candidateStatus.removable;\n        }\n      }\n    }\n\n    return candidates;\n  }\n\n  static getSingleNumCandidateCells(\n    candidates,\n    num,\n    cellIndices,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside getSingleNumCandidateCells\");\n\n    let candidateCells = [];\n\n    for (let idx of cellIndices) {\n      const status = this.getCandidateStatus(\n        candidates,\n        this.initCellInfo(idx, num)\n      );\n\n      if (processType === Config.processTypes.insertion) {\n        if (this.isSelected(status)) {\n          return [];\n        } else if (this.isWideCandidate(status)) {\n          candidateCells.push(idx);\n        }\n      } else {\n        if (this.isWideSelected(status)) {\n          return [];\n        } else if (this.isNarrowCandidate(status)) {\n          candidateCells.push(idx);\n        }\n      }\n    }\n\n    return candidateCells;\n  }\n\n  static setRelatedCandidatesBySingleMark(\n    candidates,\n    markerInfo,\n    markerNums = null\n  ) {\n    // console.log(\"inside setRelatedCandidatesBySingleMark\");\n\n    let candidateTrace = [];\n    let markerTrace = [];\n\n    const num = markerInfo.num;\n\n    let cellIndices = this.getRelatedCellIndicesByMarkerIdx(\n      markerInfo.idx,\n      candidates\n    );\n\n    for (let idx of cellIndices) {\n      const targetCellInfo = this.initCellInfo(idx, num);\n      targetCellInfo.prevStatus = this.getCandidateStatus(\n        candidates,\n        targetCellInfo\n      );\n\n      if (!this.isNarrowCandidate(targetCellInfo.prevStatus)) {\n        continue;\n      }\n\n      // if ( this.isNarrowCandidate( targetCellInfo.prevStatus ) ) {\n\n      candidates = this.assignRemovable2Candidates(candidates, targetCellInfo);\n\n      targetCellInfo.status = Config.candidateStatus.removable;\n\n      candidateTrace.push(targetCellInfo);\n\n      // find selectable type A //\n      if (markerNums !== null) {\n        let markerTraceTmp = null;\n\n        [markerNums, markerTraceTmp] = this.setSelectableA2MarkerNums(\n          markerNums,\n          candidates,\n          this.initCellInfo(idx, num)\n        );\n\n        if (markerTraceTmp) {\n          markerTrace = markerTrace.concat(markerTraceTmp);\n        }\n      }\n\n      // find selectable type B //\n      let markerTraceTmp = null;\n      [markerNums, markerTraceTmp] = this.setSelectableB2MarkerNums(\n        markerNums,\n        candidates,\n        idx\n      );\n\n      if (markerTraceTmp) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      // }\n    }\n\n    return [candidates, markerNums, candidateTrace, markerTrace];\n  }\n\n  static setSelectableA2MarkerNums(markerNums, candidates, cellInfo) {\n    // console.log(\"inside setSelectableA2MarkerNums\");\n\n    let markerTrace = [];\n    const num = cellInfo.num;\n    const relatedMarkerIdxs = this.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    for (let relatedMarkerIdx of relatedMarkerIdxs) {\n      const relatedMarkerInfo = this.initMarkerInfo(relatedMarkerIdx, num);\n\n      if (!this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n        continue;\n      }\n\n      // if (this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n\n      let concerningCellIdxs = this.getTargetCellIndicesByMarkerIdx(\n        relatedMarkerIdx,\n        candidates\n      );\n\n      let concerningCellInfos = concerningCellIdxs.map(idx =>\n        this.initCellInfo(idx, num)\n      );\n\n      if (this.countNumInCandidates(candidates, concerningCellInfos) !== 1) {\n        continue;\n      }\n\n      // if (this.countNumInCandidates(candidates, concerningCellInfos) === 1) {\n\n      relatedMarkerInfo.prevStatus = this.getMarkerStatus(\n        markerNums,\n        relatedMarkerIdx\n      );\n      relatedMarkerInfo.status = Config.candidateStatus.selectable;\n\n      markerNums = this.assignSelectable2MarkerNums(\n        markerNums,\n        relatedMarkerInfo\n      );\n\n      markerTrace.push(relatedMarkerInfo);\n      // }\n      // }\n    }\n\n    return [markerNums, markerTrace];\n  }\n\n  static setSelectableB2MarkerNums(markerNums, candidates, cellIdx) {\n    let markerTrace = [];\n    const selectableNum = this.getSelectableNum(candidates, cellIdx);\n\n    if (markerNums === null || selectableNum === null) {\n      return [markerNums, markerTrace];\n    }\n\n    // if (markerNums !== null && selectableNum !== null) {\n\n    const relatedMarkerIdxs = this.getMarkerIdxsFromCellIdx(cellIdx);\n\n    for (let relatedMarkerIdx of relatedMarkerIdxs) {\n      const relatedMarkerInfo = this.initMarkerInfo(\n        relatedMarkerIdx,\n        selectableNum\n      );\n\n      if (!this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n        continue;\n      }\n\n      // if (this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n\n      relatedMarkerInfo.prevStatus = this.getMarkerStatus(\n        markerNums,\n        relatedMarkerIdx\n      );\n      relatedMarkerInfo.status = Config.candidateStatus.selectable;\n\n      markerNums = this.assignSelectable2MarkerNums(\n        markerNums,\n        relatedMarkerInfo\n      );\n\n      markerTrace.push(relatedMarkerInfo);\n      // }\n    }\n    // }\n\n    return [markerNums, markerTrace];\n  }\n\n  static setRelatedCandidatesByMultipleMarks(\n    candidates,\n    markerNums,\n    markerInfo\n  ) {\n    // console.log(\"inside setRelatedCandidatesByMultipleMarks\");\n\n    let candidateTrace = [];\n    let markerTrace = [];\n\n    const markerIdx = markerInfo.idx;\n    const assignedNums = this.getNumsFromMarkerNums(markerNums, markerIdx);\n\n    if (assignedNums.length < 2) {\n      return [candidates, markerNums];\n    }\n\n    let concernedCellIdxs = this.getTargetCellIndicesByMarkerIdx(\n      markerIdx,\n      candidates\n    );\n    let targetCellIdxs = [];\n\n    if (assignedNums.length === 2 && concernedCellIdxs.length === 3) {\n      targetCellIdxs = concernedCellIdxs.filter(idx =>\n        assignedNums.reduce(\n          (isNumInCell, num) =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            ) || isNumInCell,\n          false\n        )\n      );\n    } else {\n      targetCellIdxs = concernedCellIdxs;\n    }\n\n    if (assignedNums.length === targetCellIdxs.length) {\n      const removableNums = this.getNsequence().filter(\n        num => !assignedNums.includes(num)\n      );\n\n      for (let num of removableNums) {\n        for (let idx of targetCellIdxs) {\n          const cellInfo = this.initCellInfo(idx, num);\n          const status = this.getCandidateStatus(candidates, cellInfo);\n\n          if (!this.isNarrowCandidate(status)) {\n            continue;\n          }\n\n          // if (this.isNarrowCandidate(status)) {\n\n          cellInfo.prevStatus = status;\n          cellInfo.status = Config.candidateStatus.removable;\n\n          candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n          candidateTrace.push(cellInfo);\n          // }\n        }\n      }\n\n      markerInfo.nums = assignedNums;\n\n      markerInfo.prevStatuses = [];\n      for (let num of markerInfo.nums) {\n        const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n        const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n        if (idx) {\n          tmpMarkerInfo.idx = idx;\n          markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n        } else {\n          markerInfo.prevStatuses.push(null);\n        }\n      }\n\n      if (assignedNums.length === 2) {\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n      } else {\n        markerNums = this.assignExclusiveTriple2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveTriple;\n      }\n\n      markerTrace.push(markerInfo);\n    } else {\n      const doubleExclusiveCellIdxs = targetCellIdxs.filter(idx =>\n        this.isTwoArraysSame(\n          assignedNums,\n          this.getWideCandidateNums(candidates, idx)\n        )\n      );\n\n      if (doubleExclusiveCellIdxs.length === 2) {\n        markerInfo.nums = assignedNums;\n\n        markerInfo.prevStatuses = [];\n        for (let num of markerInfo.nums) {\n          const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n          if (idx) {\n            tmpMarkerInfo.idx = idx;\n            markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n          } else {\n            markerInfo.prevStatuses.push(null);\n          }\n        }\n\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n\n        markerTrace.push(markerInfo);\n\n        if (concernedCellIdxs.length === 3) {\n          const unTargetIdxs = concernedCellIdxs.filter(\n            idx => !this.isIdxInDuplicates(doubleExclusiveCellIdxs, idx)\n          );\n\n          if (unTargetIdxs.length === 1) {\n            for (let num of assignedNums) {\n              const cellInfo = this.initCellInfo(unTargetIdxs[0], num);\n              const status = this.getCandidateStatus(candidates, cellInfo);\n              if (this.isNarrowCandidate(status)) {\n                cellInfo.prevStatus = status;\n                cellInfo.status = Config.candidateStatus.removable;\n\n                candidates = this.assignRemovable2Candidates(\n                  candidates,\n                  cellInfo\n                );\n\n                candidateTrace.push(cellInfo);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // a case that two nums form double exclusive //\n    if (assignedNums.length === 3) {\n      let targetCellInfos4nums = assignedNums.map(num => {\n        return {\n          idxs: targetCellIdxs.filter(idx =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            )\n          ),\n          num: num\n        };\n      });\n\n      const targetCellInfos4nums2 = targetCellInfos4nums.filter(\n        cellInfo => cellInfo.idxs.length === 2\n      );\n\n      if (\n        targetCellInfos4nums2.length === 2 &&\n        this.isTwoIdxSetsSame(\n          targetCellInfos4nums2[0].idxs,\n          targetCellInfos4nums2[1].idxs\n        )\n      ) {\n        markerInfo.nums = targetCellInfos4nums2.map(cellInfo => cellInfo.num);\n\n        markerInfo.prevStatuses = [];\n        for (let num of markerInfo.nums) {\n          const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n          if (idx) {\n            tmpMarkerInfo.idx = idx;\n            markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n          } else {\n            markerInfo.prevStatuses.push(null);\n          }\n        }\n\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n\n        markerTrace.push(markerInfo);\n      }\n\n      const targetCellInfos = targetCellIdxs.map(idx => {\n        return {\n          idx: idx,\n          nums: assignedNums.filter(num =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            )\n          )\n        };\n      });\n\n      const selectableCellInfos = targetCellInfos.filter(\n        cellInfo => cellInfo.nums.length === 1\n      );\n\n      for (let selectableCellInfo of selectableCellInfos) {\n        markerInfo.nums = selectableCellInfo.nums;\n\n        markerNums = this.assignSelectable2MarkerNums(markerNums, markerInfo);\n\n        const removableCellIdxs = targetCellIdxs.filter(\n          idx => !this.isTwoIdxsSame(selectableCellInfo.idx, idx)\n        );\n\n        for (let idx of removableCellIdxs) {\n          const cellInfo = this.initCellInfo(idx, selectableCellInfo.nums[0]);\n          const status = this.getCandidateStatus(candidates, cellInfo);\n\n          if (!this.isNarrowCandidate(status)) {\n            continue;\n          }\n\n          // if (this.isNarrowCandidate(status)) {\n          cellInfo.prevStatus = status;\n          cellInfo.status = Config.candidateStatus.removable;\n\n          candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n          candidateTrace.push(cellInfo);\n          // }\n        }\n      }\n    }\n\n    return [candidates, markerNums, candidateTrace, markerTrace];\n  }\n\n  static isNewStatusHigher(oldStatus, newStatus) {\n    return (\n      Config.narrowCandidateList.indexOf(oldStatus) <\n      Config.narrowCandidateList.indexOf(newStatus)\n    );\n  }\n\n  static isSingleNumCandidateCell(appearanceMatrix, idx) {\n    return [\n      Config.candidateStatus.candidate,\n      Config.candidateStatus.exclusive\n    ].includes(appearanceMatrix[idx.r][idx.c]);\n  }\n\n  static isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) {\n    return this.isInCellInfoArray(exclusiveCandidates, targetCellInfo);\n  }\n\n  static isInCellInfoArray(cellInfoArray, targetCellInfo) {\n    for (let cellInfo of cellInfoArray) {\n      if (this.isTwoIdxsSame(cellInfo, targetCellInfo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isInCellInfoArrayIgnoringRCBInfo(cellInfoArray, targetCellInfo) {\n    let ary = [];\n    let target = {};\n    const removingKeys = [\"rcbIdx\", \"type\"];\n    if (Object.keys(targetCellInfo).includes(\"rcbIdx\")) {\n      target = this.deepCopy(targetCellInfo);\n      removingKeys.forEach(keyName => delete target[keyName]);\n\n      ary = this.deepCopy(cellInfoArray);\n      ary.forEach(item =>\n        removingKeys.forEach(keyName => delete item[keyName])\n      );\n    } else {\n      target = targetCellInfo;\n      ary = cellInfoArray;\n    }\n\n    for (let cellInfo of ary) {\n      if (this.isTwoIdxsSame(cellInfo, target)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isInExclusiveSquareCandidates(exSquares, cellInfo) {\n    const targetIdxs = this.flattenMatrix2Array(cellInfo.idxsArray);\n\n    for (let exSquare of exSquares) {\n      const idxs = this.flattenMatrix2Array(exSquare.idxsArray);\n\n      if (\n        targetIdxs.reduce(\n          (isSame, tIdx) => this.isInCellInfoArray(idxs, tIdx) && isSame,\n          true\n        )\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static convertRemovable2Removed(candidates) {\n    // console.log(\"inside: convertRemovable2Removed\");\n\n    return candidates.map(row =>\n      row.map(cell =>\n        cell.map(status =>\n          status === Config.candidateStatus.removable\n            ? Config.candidateStatus.removed\n            : status\n        )\n      )\n    );\n  }\n\n  static removeNullsFromArray(ary) {\n    return ary.filter(x => x !== null);\n  }\n\n  static removeNullsFromNumbersWithIndex(ary) {\n    return ary.filter(x => x.num !== null);\n  }\n\n  static removeNullsFromCellInfo(cellInfoArray) {\n    return cellInfoArray.filter(x => x.num !== null);\n  }\n\n  static convertShortBRC(type) {\n    return Config.restrictionTypesShort[type];\n  }\n\n  static convertLingBRC(rcType) {\n    return Config.invBRC[rcType];\n  }\n\n  static flipRowCol(rc) {\n    return rc === \"row\" ? \"col\" : \"row\";\n  }\n\n  static flipRCType(rcType) {\n    return rcType === \"r\" ? \"c\" : \"r\";\n  }\n\n  static getUnionSizes(max = Config.maxUnionSize) {\n    return this.getIndexSequence(max - 1).map(i => i + 2);\n  }\n\n  static getRCTypeFromCellInfo(cellInfo) {\n    for (let rcType of Config.restrictionTypesStraightShortArray) {\n      if (cellInfo.rcbTypes[rcType]) {\n        return rcType;\n      }\n    }\n\n    return null;\n  }\n\n  static convertRCType2Direction(rcType) {\n    return Config.invBRC[rcType];\n  }\n\n  static getFirstLetter(s) {\n    return s.slice(0, 1);\n  }\n\n  static getLastLetter(s) {\n    return s.slice(-1);\n  }\n\n  static removeLastLetter(s) {\n    return s.slice(0, s.length - 1);\n  }\n\n  static getCellNumClass(num, appearance = null, isSubCell = false) {\n    let clsName = \"\";\n    if (num !== null) {\n      if (isSubCell) {\n        clsName = Config.panelClassNames.cellNum + num;\n      } else {\n        clsName = Config.candidateStatus.selected + num;\n      }\n    }\n\n    if (appearance !== null) {\n      if (appearance.includes(Config.candidateStatus.inhibited)) {\n        clsName = appearance;\n      } else {\n        clsName += this.capitalize(appearance);\n      }\n    }\n\n    return clsName;\n  }\n\n  static getCandidateLevelTitle(level) {\n    return this.capitalize(level.slice(0, 1) + level.slice(-1));\n  }\n\n  static getLevelNum(level) {\n    if (Config.candidateControlArray.includes(level)) {\n      return level;\n    }\n    return parseInt(level.slice(-1));\n  }\n\n  static getLevelNumFromFunctionName(functionName) {\n    return Config.candidateLevelTypesArray.indexOf(functionName);\n  }\n\n  static getSingleNumBtnId(level) {\n    return Config.buttonIds.singleNumButton + Util.capitalize(level);\n  }\n\n  // warned not use eval //\n  // static fillBlockIdTemplate = function(templateString, n) {\n  //   // return new Function(\"return `\" + templateString + \"`;\").call(n);\n  //   return eval(\"`\" + templateString + \"`\");\n  // };\n\n  // not work nicely as I expected\n  // static interpolate = function(template, ...expressions) {\n  //   return template.reduce((accumulator, part, i) => {\n  //     return accumulator + expressions[i - 1] + part;\n  //   });\n  // };\n\n  static appendNum(str, num) {\n    return str + num;\n  }\n\n  static getUnionNumbers(numSet) {\n    const numsArray = this.flattenMatrix2Array(numSet);\n    return this.removeDuplicatedNumbers(numsArray).sort();\n  }\n\n  static getUnionIndices(idxSet) {\n    const idxsArray = idxSet.reduce((ary, idxs) => ary.concat(idxs), []);\n    return this.removeDuplicatedIndices(idxsArray);\n  }\n\n  static getCandidateLevelId(level) {\n    return Config.buttonIds.candidateLevels + this.capitalize(level);\n  }\n\n  static getControlId(type) {\n    return Config.buttonIds.controls + this.capitalize(type);\n  }\n\n  static capitalize(str) {\n    if (str !== null && str.length > 0) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    return null;\n  }\n\n  static decapitalize(str) {\n    if (str !== null && str.length > 0) {\n      return str.charAt(0).toLowerCase() + str.slice(1);\n    }\n    return null;\n  }\n\n  static flattenMatrix2Array(m) {\n    return Array.prototype.concat.apply([], m);\n  }\n\n  static convNumMatrix2CSV(numMatrix) {\n    const numMatrix0 = this.convNull2Zero(numMatrix);\n    const lines = numMatrix0.map(row => row.join(\",\"));\n    let data = \"\";\n\n    for (let line of lines) {\n      data += line + \"\\n\";\n    }\n\n    return data;\n  }\n\n  static deepCopy(org) {\n    return JSON.parse(JSON.stringify(org));\n  }\n\n  // Function to download data to a file\n  static download(data, filename, type) {\n    var file = new Blob([data], { type: type });\n    if (window.navigator.msSaveOrOpenBlob)\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    else {\n      // Others\n      var a = document.createElement(\"a\"),\n        url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function() {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  // static saveFile(text, filename) {\n  //   // var text = $(\"#textarea\").val();\n  //   // var filename = $(\"#input-fileName\").val()\n  //   var blob = new Blob( [text], { type: \"text/plain;charset=utf-8\" } );\n  //   saveAs(blob, filename + \".txt\");\n  // }\n}\n\nexport default Util;\n","import React, { Component } from \"react\";\n\nimport Cell from \"./Cell\";\n\nimport Util from \"../Util\";\nimport Config from \"../Config\";\n\nclass NumPanelBlock extends Component {\n  render() {\n    const {\n      blockId,\n      candidateLevel,\n      blockClass,\n      cellIdBase,\n      cellClass,\n      inhibitedClass,\n      appearanceArray,\n      onClickFunc\n    } = this.props;\n\n    const numArray = Util.getNsequence(Config.size);\n    let cellLabels = [];\n    let clsNames = [];\n\n    for (const [i, num] of numArray.entries()) {\n      cellLabels.push(cellIdBase + num);\n\n      let clsName = [cellClass, Util.getCellNumClass(num, null, true)].join(\n        \" \"\n      );\n\n      if (appearanceArray && appearanceArray[i] !== null) {\n        if (\n          candidateLevel ===\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.displayCandidates\n          )\n        ) {\n          let appearance = appearanceArray[i];\n          if (Config.wideExclusiveStatuses.includes(appearanceArray[i])) {\n            appearance = Config.candidateStatus.candidate;\n          }\n          clsName = [clsName, appearance].join(\" \");\n        } else {\n          clsName = [clsName, appearanceArray[i]].join(\" \");\n        }\n      }\n\n      if (inhibitedClass) {\n        clsName = [clsName, inhibitedClass].join(\" \");\n      }\n\n      clsNames.push(clsName);\n    }\n\n    const cells = numArray.map((num, i) => {\n      return (\n        <Cell\n          key={cellLabels[i]}\n          cellId={cellLabels[i]}\n          num={num}\n          onClick={onClickFunc}\n          clsName={clsNames[i]}\n        />\n      );\n    });\n\n    return (\n      <div id={blockId} className={blockClass}>\n        {cells}\n      </div>\n    );\n  }\n}\n\nexport default NumPanelBlock;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\nimport NumPanelBlock from \"../NumPanelBlock\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cell.css\";\n\nclass CellContainer extends Component {\n  render() {\n    const {\n      candidateLevel,\n      cellId,\n      lastCandidate,\n      appearanceSubCellArray,\n      appearanceSmallCell,\n      inhibitedClass,\n      onCellClick,\n      handleCandidateCell\n    } = this.props;\n\n    // console.log(\"inside CellContainer\");\n\n    const blockId = cellId + Util.capitalize(Config.panelIds.block);\n\n    let clsName = [Config.panelClassNames.smallCell, appearanceSmallCell].join(\n      \" \"\n    );\n    if (inhibitedClass) {\n      clsName = [clsName, inhibitedClass].join(\" \");\n    }\n\n    return (\n      <div\n        id={cellId + Config.panelIds.cellContainerSuffix}\n        className={Config.panelClassNames.cellContainer}\n      >\n        <NumPanelBlock\n          blockId={blockId}\n          candidateLevel={candidateLevel}\n          blockClass={Config.panelClassNames.subBlock}\n          cellIdBase={cellId + Config.panelIds.numPanelCell}\n          cellClass={Config.panelClassNames.subCell}\n          inhibitedClass={inhibitedClass}\n          appearanceArray={appearanceSubCellArray}\n          onClickFunc={handleCandidateCell}\n        />\n        <Cell\n          key={cellId}\n          cellId={cellId}\n          lastCandidate={lastCandidate}\n          onClick={inhibitedClass ? null : onCellClick}\n          clsName={clsName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CellContainer;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cellColor.css\";\n\nclass Marker extends Component {\n  getCells = (cellIdBase, markerInfos) => {\n    const { markerStatus, onClickFunc, candidateLevel } = this.props;\n\n    const onClick =\n      markerStatus === Config.buttonStatus.active ? onClickFunc : null;\n    const cellClass = \"markCell\";\n\n    const numArray = Util.getNsequence(Config.sizeB);\n\n    let nums = markerInfos.nums;\n    if (!nums || nums.length !== Config.sizeB) {\n      nums = Util.initArray(null, Config.sizeB);\n    }\n\n    let clsNames = nums.map((n, i) =>\n      [cellClass, markerStatus, Util.getCellNumClass(n, null, true)].join(\" \")\n    );\n\n    if (\n      candidateLevel >\n      Util.getLevelNumFromFunctionName(Config.candidateTypes.displayCandidates)\n    ) {\n      clsNames = clsNames.map((clsName, i) =>\n        markerStatus === Config.buttonStatus.waiting ||\n        markerInfos.statuses[i] === null ||\n        markerInfos.statuses[i] === Config.candidateStatus.exclusiveSingle\n          ? clsName\n          : [clsName, markerInfos.statuses[i]].join(\" \")\n      );\n    }\n\n    let cellLabels = numArray.map(n => cellIdBase + \"I\" + n);\n    const cells = cellLabels.map((cellLabel, i) => {\n      return (\n        <Cell\n          key={cellLabel}\n          cellId={cellLabel}\n          num={markerStatus === Config.buttonStatus.active ? nums[i] : null}\n          onClick={onClick}\n          clsName={clsNames[i]}\n        />\n      );\n    });\n    return cells;\n  };\n\n  render() {\n    const { rowColType, blockId, markerNums } = this.props;\n\n    const rcType = Util.getFirstLetter(rowColType);\n    const wrapperBase = \"markWrapper\";\n    const rowColClass = \"mark\" + Util.capitalize(rowColType);\n    const idBase = rowColType;\n    const idBaseShort = Util.capitalize(Util.getFirstLetter(idBase));\n    const rowColIdBase = Util.abbreviateBlockId(blockId) + idBaseShort;\n    const wrapperId =\n      wrapperBase + Util.capitalize(blockId) + Util.capitalize(idBase);\n    const wrapperClass = wrapperBase + Util.capitalize(idBase);\n    const blockIdx = Util.getBlockIdxFromBlockId(blockId);\n    const rowColIndices = Util.getBlkRowColIndicesFromIdx(blockIdx, rowColType);\n    const rowColNIndices = rowColIndices.map(i => i + 1);\n    const cellIdBases = rowColNIndices.map(rc => rowColIdBase + rc);\n\n    const rowCols = rowColNIndices.map((nRC, i) => {\n      const markerIdx = Util.initMarkerIdx(blockIdx, rcType, nRC - 1);\n      const markerInfos = Util.getInfoArrayFromMarkerNums(\n        markerNums,\n        markerIdx\n      );\n      const cells = this.getCells(cellIdBases[i], markerInfos);\n\n      return (\n        <div\n          key={rowColIdBase + nRC}\n          id={rowColIdBase + nRC}\n          className={rowColClass}\n        >\n          {cells}\n        </div>\n      );\n    });\n\n    return (\n      <div id={wrapperId} className={wrapperClass}>\n        {rowCols}\n      </div>\n    );\n  }\n}\n\nexport default Marker;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\nimport CellContainer from \"./CellContainer\";\nimport Marker from \"./Marker\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass BoardBlock extends Component {\n  render() {\n    const {\n      mode,\n      helpMode,\n      blockId,\n      singleNumValue,\n      multipleNums,\n      candidates,\n      candidateLevel,\n      markerStatus,\n\n      numArray,\n      appearanceArray,\n      markerNums,\n      cellLabels,\n      clsNames,\n\n      showFloating,\n      handleNumInsert,\n      handleCandidateCell,\n      handleMarkerCell\n    } = this.props;\n\n    // console.log(\"inside BoardBlock\");\n\n    const displayNums =\n      helpMode === Config.helpMode.multipleNums\n        ? multipleNums\n        : [singleNumValue];\n    const blockWrapperId = blockId + \"wrapper\";\n    const blockWrapperClass = \"blockWrapper\";\n    let inhibitedClass = null;\n\n    const cells = numArray.map((num, i) => {\n      let cell = null;\n\n      if (\n        [\n          Config.helpMode.candidates,\n          Config.helpMode.both,\n          Config.helpMode.multipleNums\n        ].includes(helpMode) &&\n        num === null\n      ) {\n        const cellIdx = Util.R1C12Index(cellLabels[i]);\n        let candidateArray = Util.getCandidateStatusArray(candidates, cellIdx);\n\n        if (\n          [Config.helpMode.both, Config.helpMode.multipleNums].includes(\n            helpMode\n          ) &&\n          candidateLevel >\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.displayCandidates\n            )\n        ) {\n          candidateArray = candidateArray.map((status, j) =>\n            displayNums.includes(Util.i2n(j)) || Util.isWideRemoved(status)\n              ? status\n              : Config.candidateStatus.weaklyShadowed\n          );\n        }\n\n        let appearanceSmallCell = null;\n        let onClickFunc = showFloating;\n\n        if (\n          helpMode !== Config.helpMode.multipleNums &&\n          0 < singleNumValue &&\n          singleNumValue <= Config.size\n        ) {\n          onClickFunc = handleNumInsert;\n        }\n\n        inhibitedClass = null;\n        if (\n          [Config.helpMode.both, Config.helpMode.multipleNums].includes(\n            helpMode\n          ) &&\n          appearanceArray[i].includes(Config.candidateStatus.inhibited)\n        ) {\n          inhibitedClass = appearanceArray[i];\n        }\n\n        const singleCandidate = Util.getSingleCandidate(candidates, cellIdx);\n        const isSelectable = Util.isSelectableCell(candidates, cellIdx);\n\n        if (singleCandidate || isSelectable) {\n          onClickFunc = handleNumInsert;\n        }\n\n        if (Util.isSelectableCell(candidates, cellIdx)) {\n          appearanceSmallCell = Config.candidateStatus.selectable;\n        }\n\n        cell = (\n          <CellContainer\n            key={cellLabels[i]}\n            cellId={cellLabels[i]}\n            candidateLevel={candidateLevel}\n            lastCandidate={singleCandidate}\n            appearanceSubCellArray={candidateArray}\n            appearanceSmallCell={appearanceSmallCell}\n            inhibitedClass={inhibitedClass}\n            onCellClick={onClickFunc}\n            handleCandidateCell={handleCandidateCell}\n            clsName={clsNames[i]}\n          />\n        );\n      } else {\n        let onClickFunc = showFloating;\n        if (helpMode !== Config.helpMode.multipleNums && singleNumValue) {\n          onClickFunc =\n            mode === Config.mode.set ||\n            !appearanceArray[i].includes(Config.candidateStatus.shadowed)\n              ? handleNumInsert\n              : null;\n        }\n\n        cell = (\n          <Cell\n            key={cellLabels[i]}\n            cellId={cellLabels[i]}\n            num={num}\n            onClick={onClickFunc}\n            clsName={clsNames[i]}\n          />\n        );\n      }\n      return cell;\n    });\n\n    const markOnClickFunc =\n      helpMode !== Config.helpMode.multipleNums && singleNumValue\n        ? handleMarkerCell\n        : showFloating;\n\n    return (\n      <div\n        key={blockWrapperId}\n        id={blockWrapperId}\n        className={blockWrapperClass}\n      >\n        <Marker\n          key={blockId + \"markRow\"}\n          markerStatus={markerStatus}\n          blockId={blockId}\n          rowColType=\"row\"\n          markerNums={markerNums}\n          candidateLevel={candidateLevel}\n          onClickFunc={markOnClickFunc}\n        />\n\n        <div id={blockId} className={Config.panelClassNames.block}>\n          {cells}\n        </div>\n\n        <div />\n        <Marker\n          key={blockId + \"markCol\"}\n          markerStatus={markerStatus}\n          blockId={blockId}\n          rowColType=\"col\"\n          markerNums={markerNums}\n          candidateLevel={candidateLevel}\n          onClickFunc={markOnClickFunc}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BoardBlock;\n","import React, { Component } from \"react\";\n\nimport BoardBlock from \"./BoardBlock\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/SudokuBoard.css\";\n\nclass SudokuBoard extends Component {\n  render() {\n    const {\n      mode,\n      helpMode,\n      checkMode,\n      numMatrix,\n      candidates,\n      isRegisteredMatrix,\n      duplicates,\n      singleNumValue,\n      multipleNums,\n      candidateLevel\n    } = this.props;\n\n    // console.log(\"inside SudokuBoard\");\n    // console.log(\"helpMode: \", helpMode);\n    // console.log(\"singleNumValue: \", singleNumValue);\n    // console.log(\"multipleNums\");\n    // console.log(multipleNums);\n\n    const numbers = Util.getNsequence(Config.size);\n\n    let appearanceMatrix = [];\n    if (\n      mode === Config.mode.play &&\n      [Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode)\n    ) {\n      // console.log(\"I want to see this\");\n\n      appearanceMatrix = Util.getAppearanceMatrixFromCandidates(\n        candidates,\n        // helpMode,\n        [singleNumValue],\n        candidateLevel\n      );\n    } else if (\n      helpMode === Config.helpMode.multipleNums &&\n      multipleNums &&\n      multipleNums.length > 0\n    ) {\n      appearanceMatrix = Util.getAppearanceMatrixFromCandidates(\n        candidates,\n        // helpMode,\n        multipleNums,\n        candidateLevel\n      );\n    } else if (singleNumValue !== null && singleNumValue !== 0) {\n      appearanceMatrix = Util.getAppearanceMatrixFromNumMatrix(numMatrix);\n    }\n\n    // console.log(\"inside render of SudokuBoard\");\n\n    const blocks = numbers.map(blockNum => {\n      const blockId = Util.getBlockIdByNum(blockNum);\n      const cellIndices = Util.getBlkIndicesFromNum(blockNum);\n      const numArray = Util.getNumbersFromIndices(numMatrix, cellIndices);\n      const isRegisteredArray = Util.getNumbersFromIndices(\n        isRegisteredMatrix,\n        cellIndices\n      );\n\n      let isDuplicatedArray = [];\n      if (checkMode !== Config.checkMode.none && duplicates) {\n        isDuplicatedArray = Util.getIsDuplicatedFromIndices(\n          duplicates,\n          cellIndices\n        );\n      }\n\n      const appearanceArray =\n        appearanceMatrix && appearanceMatrix.length === Config.size\n          ? Util.getNumbersFromIndices(appearanceMatrix, cellIndices)\n          : Util.initArray(null);\n\n      const cellLabels = cellIndices.map(idx => Util.index2R1C1(idx));\n\n      const clsNames = numArray.map((num, i) => {\n        let clsName = Config.panelClassNames.cell;\n        const appearanceClass =\n          appearanceArray[i] === null || appearanceArray[i] === \"\"\n            ? Util.getCellNumClass(num, appearanceArray[i])\n            : appearanceArray[i];\n        clsName = [clsName, appearanceClass].join(\" \");\n\n        if (isRegisteredArray[i]) {\n          clsName = [clsName, Config.registered].join(\" \");\n        }\n        if (isDuplicatedArray[i]) {\n          clsName = [clsName, Config.duplicated].join(\" \");\n        }\n        return clsName;\n      });\n\n      return (\n        <BoardBlock\n          key={blockId}\n          blockId={blockId}\n          numArray={numArray}\n          appearanceArray={appearanceArray}\n          cellLabels={cellLabels}\n          clsNames={clsNames}\n          {...this.props}\n        />\n      );\n    });\n\n    return <div id={Config.panelIds.sudokuBoard}>{blocks}</div>;\n  }\n}\n\nexport default SudokuBoard;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass NewGame extends Component {\n  render() {\n    const { lang, handleNewGame } = this.props;\n\n    return (\n      <div\n        id={Config.buttonIds.newGame}\n        className={Config.buttonClassNames.newGame}\n        onClick={handleNewGame}\n      >\n        {Config.buttonTitles.newGame[lang]}\n      </div>\n    );\n  }\n}\n\nexport default NewGame;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass SampleGames extends Component {\n  render() {\n    const { lang, sampleGameID, handleSampleGames } = this.props;\n\n    // console.log(\"inside SampleGames\");\n\n    const buttonSet = Util.getSampleGameList().map(level => {\n      const innerWrapperId =\n        Config.buttonIds.sampleGameInnerWrapper + Util.capitalize(level);\n      const innerWrapperClass = Config.buttonClassNames.sampleGameInnerWrapper;\n\n      const buttons = Config.sampleGames[level].map((_, i) => {\n        const buttonId = Util.getSampleGameButtonId(level, i);\n\n        let btnClsName = Config.buttonClassNames.sampleGameButton;\n\n        const buttonTitle = Util.getSampleGameButtonLabel(level, i);\n\n        if (sampleGameID === buttonId) {\n          btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n        }\n\n        let title = Util.getSampleGameButtonTitle(level, i, lang);\n\n        return (\n          <button\n            key={buttonId}\n            id={Config.buttonIds.sampleGame + Util.capitalize(buttonId)}\n            className={btnClsName}\n            title={title}\n            onClick={() => handleSampleGames(buttonId)}\n          >\n            {buttonTitle}\n          </button>\n        );\n      });\n\n      return (\n        <div\n          key={innerWrapperId}\n          id={innerWrapperId}\n          className={innerWrapperClass}\n        >\n          {buttons}\n        </div>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.sampleGameWrapper}\n        className={Config.buttonClassNames.sampleGameFrame}\n      >\n        <div>\n          <h3>{Config.buttonTitles.sampleGames[lang]}</h3>\n        </div>\n        <div className={Config.buttonClassNames.sampleGameWrapper}>\n          {buttonSet}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SampleGames;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass Restart extends Component {\n  render() {\n    const { lang, mode, trace, handleRestart } = this.props;\n\n    return (\n      <button\n        id={Config.buttonIds.restart}\n        className={Config.buttonClassNames.restart}\n        onClick={handleRestart}\n        disabled={mode === Config.mode.set || trace.length === 0 ? true : null}\n      >\n        {Config.buttonTitles.restart[lang]}\n      </button>\n    );\n  }\n}\n\nexport default Restart;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass SetUp extends Component {\n  render() {\n    const { lang, mode, handleSetUp } = this.props;\n\n    let buttonTitle = Config.buttonTitles.setup[lang];\n    if (mode === Config.mode.play) {\n      buttonTitle = Config.buttonTitles.edit[lang];\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.setup}\n        className={Config.buttonClassNames.setup}\n        onClick={handleSetUp}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default SetUp;\n","import React, { Component } from \"react\";\n\nimport NewGame from \"./NewGame\";\nimport SampleGames from \"./SampleGames\";\nimport Restart from \"./Restart\";\nimport SetUp from \"./SetUp\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ControlPanel.css\";\n\nclass ControlPanel extends Component {\n  render() {\n    const { lang } = this.props;\n\n    return (\n      <div\n        id={Config.panelIds.control}\n        className={Config.panelClassNames.control}\n      >\n        <h2>{Config.panelTitles.control[lang]}</h2>\n        <NewGame {...this.props} />\n        <SetUp {...this.props} />\n        <SampleGames {...this.props} />\n        <Restart {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport Util from \"../../Util\";\n\nclass Check extends Component {\n  getButton = level => {\n    const { lang, mode, checkMode, handleCheck } = this.props;\n\n    const myself = this.constructor.name.toLowerCase();\n    const label = Config.checkButtonLabels[level][lang];\n    const titleCaption = Config.checkTitleCaptions[level][lang];\n    let disabled = true;\n    let btnClsName = Config.buttonClassNames.checkButton;\n\n    if (level !== Config.checkMode.none && level === checkMode) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      [Config.checkMode.none, Config.checkMode.duplicates].includes(level) ||\n      mode === Config.mode.play\n    ) {\n      disabled = null;\n    }\n\n    return (\n      <button\n        key={level}\n        id={Config.buttonIds[myself] + Util.capitalize(level)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleCheck(level)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  render() {\n    const { lang, checkMode } = this.props;\n\n    // console.log(\"inside Check\");\n\n    let clsName = Config.buttonClassNames.candidateContainer;\n\n    let titleClassName = Config.buttonClassNames.checkTitle;\n    if (checkMode !== Config.checkMode.none) {\n      titleClassName = [titleClassName, Config.buttonStatus.active].join(\" \");\n    }\n\n    const buttons = Config.checkModeArray.map(type => this.getButton(type));\n\n    return (\n      <div id={Config.buttonIds.check} className={clsName}>\n        <div>\n          <h3 className={titleClassName}>\n            {Config.checkButtonLabels.title[lang]}\n          </h3>\n        </div>\n        <div\n          id={Config.buttonIds.checkWrapper}\n          className={Config.buttonClassNames.candidateButtonWrapper}\n        >\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Check;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nclass HelpModeButtons extends Component {\n  getButton = type => {\n    const { lang, mode, helpMode, handleHelpMode } = this.props;\n\n    // const myself = this.constructor.name.toLowerCase();\n    let disabled = true;\n\n    let btnClsName = Config.helpModeButtonClassNames[type];\n    if (\n      helpMode !== Config.helpMode.none &&\n      (helpMode === type ||\n        helpMode === Config.helpMode.both ||\n        helpMode === Config.helpMode.multipleNums)\n    ) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      mode === Config.mode.play &&\n      !(type === Config.helpMode.none && helpMode === Config.helpMode.none)\n    ) {\n      disabled = null;\n    }\n\n    const buttonType =\n      type === Config.helpMode.multipleNums ? Config.helpMode.singleNum : type;\n    const id = Config.helpModeButtonIds[buttonType];\n    let title = Config.helpModeCaptions[buttonType][lang];\n\n    if (type === Config.helpMode.singleNum) {\n      if (helpMode === Config.helpMode.singleNum) {\n        title = Config.helpModeCaptions[Config.helpMode.none][lang];\n      } else if (helpMode === Config.helpMode.candidates) {\n        title = Config.helpModeCaptions[Config.helpMode.both][lang];\n      } else if (helpMode === Config.helpMode.both) {\n        title = Config.helpModeCaptions[Config.helpMode.multipleNums][lang];\n      }\n    } else if (type === Config.helpMode.multipleNums) {\n      title = Config.helpModeCaptions[Config.helpMode.none][lang];\n    } else if (type === Config.helpMode.candidates) {\n      if (helpMode === Config.helpMode.candidates) {\n        title = Config.helpModeCaptions[Config.helpMode.none][lang];\n      } else if (helpMode === Config.helpMode.singleNum) {\n        title = Config.helpModeCaptions[Config.helpMode.both][lang];\n      }\n    }\n\n    return (\n      <button\n        key={id}\n        id={id}\n        className={btnClsName}\n        title={title}\n        onClick={() => handleHelpMode(type)}\n        disabled={disabled}\n      >\n        {Config.helpModeButtonLabels[type][lang]}\n      </button>\n    );\n  };\n\n  render() {\n    const { helpMode } = this.props;\n\n    const buttonTypes =\n      helpMode === Config.helpMode.multipleNums\n        ? Config.helpModeArray4displayOnMultipleNums\n        : Config.helpModeArray4display;\n    // let clsName = Config.helpModeButtonClassNames.container;\n\n    // if (mode !== Config.mode.play) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    const buttons = buttonTypes.map(type => this.getButton(type));\n\n    return (\n      <div\n        id={Config.helpModeButtonIds.wrapper}\n        className={Config.helpModeButtonClassNames.wrapper}\n      >\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default HelpModeButtons;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass SingleNum extends Component {\n  render() {\n    const { helpMode, singleNumValue, numCounts, handleSingleNum } = this.props;\n\n    const radios = Util.getIndexSequence(Config.size + 1).map(num => {\n      const id = Config.buttonIds.singleNumRadio + num;\n\n      let labelDivClassName = Config.panelClassNames.cellNum + num;\n      if (numCounts[num] === Config.size) {\n        // labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 0);\n        labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 10);\n      }\n\n      let disabled = null;\n      if (\n        [Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode) &&\n        num === 0\n      ) {\n        disabled = true;\n      }\n\n      let labelClassName = null;\n      if (\n        numCounts[num] === Config.size ||\n        ([Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode) &&\n          num === 0)\n      ) {\n        labelClassName = Config.buttonClassNames.singleNumDone;\n      } else if (numCounts[num] > Config.size) {\n        labelClassName = Config.buttonClassNames.singleNumExceeding;\n      }\n\n      return (\n        <label key={id} id={id} className={labelClassName}>\n          <div className={labelDivClassName}>{num > 0 ? num : \"-\"}</div>\n\n          <input\n            type=\"radio\"\n            name={Config.helpMode.singleNum}\n            value={num.toString()}\n            onChange={() => handleSingleNum(num)}\n            checked={singleNumValue === num}\n            disabled={disabled}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.singleNum}\n        className={Config.buttonClassNames.singleNumRadioWrapper}\n      >\n        {radios}\n      </div>\n    );\n  }\n}\n\nexport default SingleNum;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass MultipleNums extends Component {\n  handleChange = event => {\n    const { handleMultipleNums } = this.props;\n\n    const num = parseInt(event.target.value);\n    // const checked = event.target.checked;\n\n    handleMultipleNums(num);\n  };\n\n  render() {\n    const { multipleNums, numCounts } = this.props;\n\n    const checkboxs = Util.getNsequence(Config.size).map(num => {\n      const id = Util.appendNum(Config.buttonIds.multipleNums, num);\n      const labelId = Util.appendNum(Config.buttonIds.multipleNumsLabel, num);\n      const checkboxId = Util.appendNum(\n        Config.buttonIds.multipleNumsCheckbox,\n        num\n      );\n\n      let labelDivClassName = Config.panelClassNames.cellNum + num;\n      if (numCounts[num] === Config.size) {\n        labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 0);\n      }\n\n      let labelClassName = null;\n      if (numCounts[num] === Config.size) {\n        labelClassName = Config.buttonClassNames.multipleNumsDone;\n      } else if (numCounts[num] > Config.size) {\n        labelClassName = Config.buttonClassNames.multipleNumsExceeding;\n      }\n\n      const checked = multipleNums.includes(num);\n      const name = Util.appendNum(\"num\", num);\n\n      return (\n        <label key={id} id={id} className={labelClassName}>\n          <div key={labelId} className={labelDivClassName}>\n            {num > 0 ? num : \"-\"}\n          </div>\n\n          <input\n            type=\"checkbox\"\n            key={checkboxId}\n            name={name}\n            value={num.toString()}\n            onChange={this.handleChange}\n            checked={checked}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.multipleNums}\n        className={Config.buttonClassNames.multipleNumsCheckBoxWrapper}\n      >\n        {checkboxs}\n      </div>\n    );\n  }\n}\n\nexport default MultipleNums;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nclass CandidateLevels extends Component {\n  getButton = level => {\n    const {\n      lang,\n      mode,\n      helpMode,\n      candidateLevel,\n      handleCandidates: handleCandidateLevels\n    } = this.props;\n\n    const nLevel = Util.getLevelNum(level);\n    let disabled = true;\n    let label = \"\";\n    let titleCaption = \"\";\n    let btnClsName = Config.buttonClassNames.candidateButton;\n\n    label = Util.getCandidateLevelTitle(level);\n\n    if (helpMode === Config.helpMode.singleNum) {\n      if (Object.keys(Config.singleNumCaptions).includes(level)) {\n        titleCaption = Config.singleNumCaptions[level][lang];\n      }\n    } else {\n      titleCaption = Config.candidateLevelCaptions[level][lang];\n    }\n\n    if (Util.getLevelNum(level) === candidateLevel) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      mode === Config.mode.play &&\n      (helpMode === Config.helpMode.candidates ||\n        (helpMode === Config.helpMode.singleNum &&\n          nLevel <=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleExclusive\n            )) ||\n        ([\n          Config.helpMode.candidates,\n          Config.helpMode.both,\n          Config.helpMode.multipleNums\n        ].includes(helpMode) &&\n          nLevel <\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )))\n    ) {\n      disabled = null;\n    }\n\n    return (\n      <button\n        key={level}\n        id={Util.getCandidateLevelId(level)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleCandidateLevels(level)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  render() {\n    // const { mode, helpMode } = this.props;\n\n    // let clsName = Config.buttonClassNames.candidateContainer;\n\n    // if (\n    //   mode !== Config.mode.play ||\n    //   ![Config.helpMode.none, Config.helpMode.candidates].includes(helpMode)\n    // ) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    const buttons = Config.candidateLevels.map(candidateLevel =>\n      this.getButton(candidateLevel)\n    );\n\n    return (\n      <div\n        id={Config.buttonIds.candidates}\n        className={Config.buttonClassNames.candidateButtonWrapper}\n      >\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default CandidateLevels;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport forwardLogo from \"../../../images/forward.svg\";\nimport forwardDisabledLogo from \"../../../images/forwardDisabled.svg\";\nimport fastForwardLogo from \"../../../images/fastForward.svg\";\nimport fastForwardDisabledLogo from \"../../../images/fastForwardDisabled.svg\";\nimport backwardLogo from \"../../../images/backward.svg\";\nimport backwardDisabledLogo from \"../../../images/backwardDisabled.svg\";\nimport rewindLogo from \"../../../images/rewind.svg\";\nimport rewindDisabledLogo from \"../../../images/rewindDisabled.svg\";\nimport selectLogo from \"../../../images/select.svg\";\nimport selectDisabledLogo from \"../../../images/selectDisabled.svg\";\nimport eraseLogo from \"../../../images/erase.svg\";\nimport eraseDisabledLogo from \"../../../images/eraseDisabled.svg\";\n\nclass Controls extends Component {\n  constructor() {\n    super();\n    this.state = { isSkipIneffective: true };\n  }\n\n  checkboxIsSkip = React.createRef();\n\n  getButton = controlType => {\n    const {\n      lang,\n      helpMode,\n      markerStatus,\n      trace,\n      candidateLevel,\n      handleControls\n    } = this.props;\n\n    let disabled = true;\n    let label = \"\";\n    let titleCaption = \"\";\n\n    const activeSymbols = {\n      [Config.candidateControls.forward]: forwardLogo,\n      [Config.candidateControls.fastForward]: fastForwardLogo,\n      [Config.candidateControls.backward]: backwardLogo,\n      [Config.candidateControls.reset]: rewindLogo,\n      [Config.candidateControls.select]: selectLogo,\n      [Config.candidateControls.erase]: eraseLogo\n    };\n\n    const disabledSymbols = {\n      [Config.candidateControls.forward]: forwardDisabledLogo,\n      [Config.candidateControls.fastForward]: fastForwardDisabledLogo,\n      [Config.candidateControls.backward]: backwardDisabledLogo,\n      [Config.candidateControls.reset]: rewindDisabledLogo,\n      [Config.candidateControls.select]: selectDisabledLogo,\n      [Config.candidateControls.erase]: eraseDisabledLogo\n    };\n\n    const iconSizeSmall = Config.candidateControlIconSizes.small;\n    const iconSizeLarge = Config.candidateControlIconSizes.large;\n    const iconStyleSmall = { width: iconSizeSmall, height: iconSizeSmall };\n    const iconStyleLarge = { width: iconSizeLarge, height: iconSizeLarge };\n\n    const iconStyles = {\n      [Config.candidateControls.forward]: iconStyleSmall,\n      [Config.candidateControls.fastForward]: iconStyleSmall,\n      [Config.candidateControls.backward]: iconStyleSmall,\n      [Config.candidateControls.reset]: iconStyleSmall,\n      [Config.candidateControls.select]: iconStyleLarge,\n      [Config.candidateControls.erase]: iconStyleLarge\n    };\n\n    let btnClsName = Config.buttonClassNames.candidateButton;\n\n    let symbol = disabledSymbols[controlType];\n\n    if (\n      ([\n        Config.candidateControls.backward,\n        Config.candidateControls.reset\n      ].includes(controlType) &&\n        trace.length > 0) ||\n      (controlType === Config.candidateControls.select &&\n        helpMode === Config.helpMode.candidates &&\n        markerStatus === Config.buttonStatus.active &&\n        candidateLevel >=\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.displayCandidates\n          )) ||\n      ([\n        Config.helpMode.candidates,\n        Config.helpMode.singleNum,\n        Config.helpMode.both,\n        Config.helpMode.multipleNums\n      ].includes(helpMode) &&\n        candidateLevel >=\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.singleCandidate\n          ))\n    ) {\n      symbol = activeSymbols[controlType];\n      disabled = null;\n    }\n\n    label = (\n      <img\n        src={symbol}\n        style={iconStyles[controlType]}\n        alt={Config.constrolIconCaptions[controlType][lang]}\n        title={Config.constrolIconCaptions[controlType][lang]}\n      />\n    );\n\n    return (\n      <button\n        key={controlType}\n        id={Util.getControlId(controlType)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleControls(controlType)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  handleCheckbox = e => {\n    const { handleSkipIneffectiveStatus } = this.props;\n\n    const isSkipIneffective = e.currentTarget.checked;\n\n    this.setState({ isSkipIneffective });\n\n    handleSkipIneffectiveStatus(isSkipIneffective);\n  };\n\n  render() {\n    const { lang, mode, helpMode, candidateLevel } = this.props;\n\n    let disabled = true;\n    // let clsName = Config.buttonClassNames.candidateContainer;\n\n    // if (\n    //   mode !== Config.mode.play ||\n    //   ![Config.helpMode.none, Config.helpMode.candidates].includes(helpMode)\n    // ) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    if (\n      mode === Config.mode.play &&\n      helpMode === Config.helpMode.candidates &&\n      candidateLevel >\n        Util.getLevelNumFromFunctionName(\n          Config.candidateTypes.displayCandidates\n        )\n    ) {\n      disabled = null;\n    }\n\n    const buttons = Config.candidateControlArray.map(controlType =>\n      this.getButton(controlType)\n    );\n\n    return (\n      <div>\n        <div\n          id={Config.buttonIds.controls}\n          className={Config.buttonClassNames.candidateButtonWrapper}\n        >\n          {buttons}\n        </div>\n        <label\n          key={Config.buttonIds.controlLabelSkipIneffective}\n          id={Config.buttonIds.controlLabelSkipIneffective}\n          className={Config.buttonClassNames.controlSkipIneffective}\n        >\n          <input\n            type=\"checkbox\"\n            ref={this.checkboxIsSkip}\n            name={Config.formNames.skipIneffective}\n            onChange={this.handleCheckbox}\n            checked={this.state.isSkipIneffective}\n            disabled={disabled}\n          />\n          {Config.helpModeButtonLabels.skipIneffective[lang]}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass NumCounter extends Component {\n  getNumCounter = num => {\n    const { numCounts } = this.props;\n\n    console.log(`num: ${num}, numCount: ${numCounts[num]}`);\n    // console.log(\"numCounts\");\n    // console.log(numCounts);\n\n    const counterID = Util.appendNum(Config.buttonIds.numCounter, num);\n    const clsCounter = Config.buttonClassNames.numCounter;\n    // const clsCounterBar = Util.appendNum(\n    //   Config.buttonClassNames.numCounterBar,\n    //   num\n    // );\n\n    const idxArray = Util.getIndexSequence(Config.size);\n    let bars = null;\n\n    if (num > 0) {\n      bars = idxArray.map(i => {\n        // console.log(\"i: \", i);\n\n        const barID = Config.buttonIds.numCounterBar + num + i;\n        let clsCounterBar = Config.buttonClassNames.numCounterBar;\n\n        if (i >= Config.size - numCounts[num]) {\n          clsCounterBar = [\n            clsCounterBar,\n            Util.appendNum(Config.buttonClassNames.indicator, num)\n          ].join(\" \");\n        }\n\n        return <div key={barID} id={barID} className={clsCounterBar} />;\n      });\n    }\n\n    return (\n      <div key={counterID} id={counterID} className={clsCounter}>\n        {bars}\n      </div>\n    );\n  };\n\n  render() {\n    console.log(\"inside NumCounter\");\n\n    const idx10Array = Util.getIndexSequence(Config.size + 1);\n\n    const counters = idx10Array.map(num => this.getNumCounter(num));\n\n    return <div id={Config.buttonIds.numCounterWrapper}>{counters}</div>;\n  }\n}\n\nexport default NumCounter;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport HelpModeButtons from \"./HelpModeButtons\";\nimport SingleNum from \"./SingleNum\";\nimport MultipleNums from \"./MultipleNums\";\nimport CandidateLevels from \"./CandidatesLevels\";\nimport Controls from \"./Controls\";\nimport NumCounter from \"./NumCounter\";\n\nclass HelpModePane extends Component {\n  render() {\n    const { lang, mode, helpMode } = this.props;\n\n    let clsName = Config.helpModeButtonClassNames.container;\n\n    if (mode !== Config.mode.play) {\n      clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    }\n\n    let titleClassName = Config.buttonClassNames.candidateTitle;\n\n    const numPanel =\n      helpMode === Config.helpMode.multipleNums ? (\n        <MultipleNums {...this.props} />\n      ) : (\n        <SingleNum {...this.props} />\n      );\n\n    return (\n      <div id={Config.helpModeButtonIds.container} className={clsName}>\n        <div>\n          <h3 className={titleClassName}>\n            {Config.helpModeButtonLabels.title[lang]}\n          </h3>\n        </div>\n        <HelpModeButtons {...this.props} />\n        {numPanel}\n        <NumCounter {...this.props} />\n        <CandidateLevels {...this.props} />\n        <Controls {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default HelpModePane;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass MarkerButton extends Component {\n  render() {\n    const { lang, mode, markerStatus, handleMarker } = this.props;\n\n    let clsName = Config.buttonClassNames.marker;\n    if (markerStatus === Config.buttonStatus.active) {\n      clsName = [clsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.marker}\n        className={clsName}\n        onClick={handleMarker}\n        disabled={mode === Config.mode.play ? null : true}\n      >\n        {Config.buttonTitles.marker[lang]}\n      </button>\n    );\n  }\n}\n\nexport default MarkerButton;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass LangButton extends Component {\n  render() {\n    const { lang, handleLang } = this.props;\n\n    // console.log(\"inside LangButton\");\n\n    let clsName = Config.buttonClassNames.lang;\n    const theOtherLang = Util.flipLang(lang);\n    const buttonTitle = Config.langButtonTitles[theOtherLang];\n\n    return (\n      <button\n        id={Config.buttonIds.lang}\n        className={clsName}\n        onClick={handleLang}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default LangButton;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass HelpButton extends Component {\n  handleHelp = () => {\n    const { handleHelpButton, lang } = this.props;\n\n    const fileName = Config.helpFiles[lang];\n    const path = Config.helpPath + fileName;\n\n    // window.open(\"./help/help_ja.html\", \"_blank\");\n    window.open(path, \"_blank\");\n    handleHelpButton();\n  };\n\n  render() {\n    const { lang } = this.props;\n\n    // console.log(\"inside HelpButton\");\n\n    let clsName = Config.buttonClassNames.help;\n\n    const buttonTitle = Config.buttonTitles.help[lang];\n\n    return (\n      <button\n        id={Config.buttonIds.help}\n        className={clsName}\n        onClick={this.handleHelp}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default HelpButton;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cellColor.css\";\n\nclass Indicator extends Component {\n  render() {\n    const { gameLevel } = this.props;\n\n    // console.log(\"inside Indicator\");\n\n    const clsName = Util.appendNum(Config.buttonIds.indicator, gameLevel);\n\n    return (\n      <div id={Config.buttonIds.indicatorWrapper}>\n        <span id={Config.buttonIds.indicator} className={clsName} />\n      </div>\n    );\n  }\n}\n\nexport default Indicator;\n","import React, { Component } from \"react\";\n\nimport Check from \"./Check\";\nimport HelpModePane from \"./helpMode/HelpModePane\";\n// import HelpModeButtons from \"./helpMode/HelpModeButtons\";\n// import SingleNum from \"./helpMode/SingleNum\";\n// import CandidateLevels from \"./helpMode/CandidatesLevels\";\n// import Controls from \"./helpMode/Controls\";\nimport MarkerButton from \"./MarkerButton\";\nimport LangButton from \"./LangButton\";\nimport HelpButton from \"./HelpButton\";\nimport Indicator from \"./Indicator\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ControlPanel.css\";\n\nclass HelperlPanel extends Component {\n  render() {\n    const { lang } = this.props;\n\n    return (\n      <div\n        id={Config.panelIds.helper}\n        className={Config.panelClassNames.helper}\n      >\n        <div id={Config.buttonIds.helperLableWrapper}>\n          <h2>{Config.panelTitles.helper[lang]}</h2>\n          <Indicator {...this.props} />\n        </div>\n\n        <Check {...this.props} />\n        <HelpModePane {...this.props} />\n        <MarkerButton {...this.props} />\n        <HelpButton {...this.props} />\n        <LangButton {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default HelperlPanel;\n","import React, { Component } from \"react\";\n\nimport Config from \"../Config\";\nimport Util from \"../Util\";\n\nimport \"../css/cell.css\";\nimport \"../css/cellColor.css\";\nimport \"../App.css\";\n\nclass Footer extends Component {\n  render() {\n    const { lang, sampleGameID } = this.props;\n\n    const gameInfo = Util.getSampleGameInfo(sampleGameID);\n\n    let credit = \"\";\n    if (gameInfo) {\n      credit = Util.getCredit(\n        Config.sampleGames[gameInfo.gameClass][gameInfo.idx].credit[lang],\n        lang\n      );\n    }\n\n    return (\n      <div\n        id={Config.panelIds.footer}\n        className={Config.panelClassNames.footer}\n      >\n        <span\n          id={Config.panelIds.footerCredit}\n          className={Config.panelClassNames.footerCredit}\n        >\n          {credit}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass Delete extends Component {\n  render() {\n    const { numMatrix, markerNums, activeCellIndex, handleDelete } = this.props;\n\n    let disabled = true;\n    if (activeCellIndex) {\n      if (typeof activeCellIndex.b !== \"undefined\") {\n        if (Util.isNumInMarker(markerNums, activeCellIndex)) {\n          disabled = null;\n        }\n      } else {\n        if (Util.isNumInCell(numMatrix, activeCellIndex)) {\n          disabled = null;\n        }\n      }\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.delete}\n        onClick={handleDelete}\n        disabled={disabled}\n      >\n        {Config.buttonTitles.delete}\n      </button>\n    );\n  }\n}\n\nexport default Delete;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass Cancel extends Component {\n  render() {\n    return (\n      <button id={Config.buttonIds.cancel} onClick={this.props.handleCancel}>\n        {Config.buttonTitles.cancel}\n      </button>\n    );\n  }\n}\n\nexport default Cancel;\n","import React, { Component } from \"react\";\n\nimport Delete from \"./Delete\";\nimport Cancel from \"./Cancel\";\n\nimport Config from \"../../Config\";\n\nclass NumPanelControl extends Component {\n  render() {\n    return (\n      <div id={Config.panelIds.numPanelControl}>\n        <Delete {...this.props} />\n        <Cancel {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default NumPanelControl;\n","import React, { Component } from \"react\";\n\nimport NumPanelBlock from \"../NumPanelBlock\";\nimport NumPanelControl from \"./NumPanelControl\";\n\nimport Config from \"../../Config\";\n\nclass NumPanel extends Component {\n  render() {\n    const { handleNumPanelClick } = this.props;\n\n    return (\n      <div id={Config.panelIds.numPanelContainer}>\n        <NumPanelBlock\n          key={Config.panelIds.numPanel}\n          blockId={Config.panelIds.numPanel}\n          blockClass={Config.panelClassNames.block}\n          cellIdBase={Config.panelIds.numPanelCell}\n          cellClass={Config.panelClassNames.cell}\n          onClickFunc={handleNumPanelClick}\n        />\n        <NumPanelControl {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default NumPanel;\n","import React, { Component } from \"react\";\n// Required to use React portals\n// import ReactDOM from \"react-dom\";\n\nimport NumPanel from \"./NumPanel\";\nimport Config from \"../../Config\";\n\nimport \"../../css/Floating.css\";\n\nclass Floating extends Component {\n  state = {\n    showNumPanel: !!this.props.showNumPanel\n  };\n\n  componentWillReceiveProps({ showNumPanel }) {\n    this.setState({ showNumPanel });\n  }\n\n  handleModalClick = () => {\n    this.setState({\n      showNumPanel: false\n    });\n  };\n\n  render() {\n    const { modal, closeOnModalClick, mousePosition } = this.props;\n    const { showNumPanel } = this.state;\n    const isModal = modal ? \" modal\" : \"\";\n    const doShow = showNumPanel ? \" show\" : \"\";\n    const id = Config.panelIds.numPanelWrapper;\n    const clsName = [\n      Config.panelClassNames.numPanelWrapper,\n      isModal,\n      doShow\n    ].join(\" \");\n\n    const props = {\n      onClick: closeOnModalClick ? this.handleModalClick : null\n    };\n\n    // const float = (\n    return (\n      <div\n        id={id}\n        {...props}\n        className={clsName}\n        style={{\n          position: \"absolute\",\n          left: mousePosition.x,\n          top: mousePosition.y,\n          display: showNumPanel ? \"flex\" : \"none\"\n        }}\n      >\n        <NumPanel {...this.props} />\n      </div>\n    );\n    // );\n\n    // return viewport ? ReactDOM.createPortal(float, document.body) : float;\n  }\n}\n\nexport default Floating;\n","import React, { Component } from \"react\";\n// Required to use React portals\n// import ReactDOM from \"react-dom\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ShowMessage.css\";\n\nimport closeLogo from \"../../images/close.svg\";\n\nclass ShowMessage extends Component {\n  state = {\n    show: !!this.props.isShowMessage\n  };\n\n  componentWillReceiveProps({ isShowMessage }) {\n    this.setState({ isShowMessage });\n  }\n\n  render() {\n    const {\n      modal,\n      // viewport,\n      closeOnModalClick,\n      message,\n      handleMessageModalClick\n    } = this.props;\n    const { isShowMessage } = this.state;\n    const isModal = modal ? \" modal\" : \"\";\n    const doShow = isShowMessage ? \" show\" : \"\";\n    // const isViewport = viewport ? \" viewport\" : \"\";\n    const id = Config.panelIds.messageWrapper;\n    const clsName = [\n      Config.panelClassNames.messageWrapper,\n      isModal,\n      doShow\n    ].join(\" \");\n\n    const props = {\n      onClick: closeOnModalClick ? handleMessageModalClick : null\n    };\n\n    // const float = (\n    return (\n      <div\n        id={id}\n        {...props}\n        className={clsName}\n        style={{\n          position: \"absolute\",\n          display: isShowMessage ? \"flex\" : \"none\"\n        }}\n      >\n        {/* {this.props.children} */}\n        <h1>{message}</h1>\n        <img src={closeLogo} alt=\"close\" title=\"close\" />\n      </div>\n    );\n\n    // return viewport ? ReactDOM.createPortal(float, document.body) : float;\n  }\n}\n\nexport default ShowMessage;\n","import React, { Component } from \"react\";\n\nimport SudokuBoard from \"./components/sudokuBoard/SudokuBoard\";\nimport ControlPanel from \"./components/control/ControlPanel\";\nimport HelperPanel from \"./components/helper/HelperPanel\";\nimport Footer from \"./components/Footer\";\n\nimport Floating from \"./components/floating/Floating\";\nimport ShowMessage from \"./components/floating/ShowMessage\";\n\nimport Util from \"./Util\";\nimport Config from \"./Config\";\n\nimport { getRandomInt } from \"./util/Random\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  getInitialState() {\n    const numMatrix = Util.initMatrix();\n\n    return {\n      lang: Config.lang.en,\n      mode: Config.mode.set, // set, play\n      helpMode: Config.helpMode.none, // none, check, singleNum, candidates\n      checkMode: Config.checkMode.duplicates,\n\n      numMatrix: numMatrix,\n      ansMatrix: Util.initMatrix(),\n      isRegisteredMatrix: Util.getRegisteredFlags(numMatrix),\n      numCounts: Util.countNumbers(numMatrix),\n      candidates: Util.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      trace: [],\n      markerStatus: Config.buttonStatus.waiting,\n      markerNums: Util.initMarkerNums(),\n\n      // gameLevel: 10,\n      gameLevel: 0,\n      sampleGameID: null,\n\n      singleNumValue: 0,\n      multipleNums: [],\n\n      candidateLevel: null,\n      isStepByStep: true,\n      isSkipIneffective: true,\n      duplicates: [],\n\n      activeCellIndex: null,\n\n      mousePosition: {\n        x: 0,\n        y: 0\n      },\n\n      showNumPanel: false,\n      isShowMessage: false,\n      message: \"\",\n\n      isFilled: false,\n      isComplete: false,\n      isGameDone: false,\n      didUpdate: false\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = this.getInitialState();\n  }\n\n  componentDidUpdate() {\n    const { isFilled, isComplete, numMatrix, trace } = this.state;\n    // console.log(\"inside componentDidUpdate\");\n\n    if (!isComplete && !isFilled && Util.isAllFilled(numMatrix)) {\n      const successMessages = Config.messages.success;\n\n      this.setState({ isFilled: true });\n\n      if (this.doCheckDuplicates() === Config.result.passed) {\n        let isShowMessage = true;\n        let message = successMessages[getRandomInt(0, successMessages.length)];\n\n        if (Util.countManualInputs(trace) === 0) {\n          isShowMessage = false;\n        }\n\n        this.setState({\n          helpMode: Config.helpMode.none,\n          candidateLevel: null,\n          isComplete: true,\n          isShowMessage,\n          message\n        });\n      } else {\n        this.setState({\n          isShowMessage: true,\n          message: Config.messages.failure\n        });\n      }\n    }\n  }\n\n  calcAnswer = numMatrix => {\n    // const { gameLevel, isSkipIneffective } = this.state;\n    const { isSkipIneffective } = this.state;\n\n    // console.log(\"inside calcAnswer\");\n\n    // const candidateLevel = Config.candidateLevelTypesArray.length - 1;\n    const helpMode = Config.helpMode.candidates;\n    const isStepByStep = false;\n    const isSkipLevel1 = false;\n    const singleNumValue = null;\n    const isMarkerOff = true;\n\n    let dataset = {\n      numMatrix: Util.deepCopy(numMatrix),\n      candidates: Util.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      markerNums: Util.initMarkerNums(),\n      trace: [],\n      // gameLevel: gameLevel === 10 ? 0 : gameLevel\n      gameLevel: 0\n    };\n\n    let conditions = {\n      // candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep,\n      isSkipLevel1,\n      isSkipIneffective,\n      isMarkerOff\n    };\n\n    // console.log(\"game level: \", dataset.gameLevel);\n\n    for (\n      let candidateLevel = 2;\n      candidateLevel < Config.candidateLevelTypesArray.length;\n      candidateLevel++\n    ) {\n      conditions.candidateLevel = candidateLevel;\n\n      dataset = Util.setCandidates(dataset, conditions);\n\n      // console.log(\"game level: \", dataset.gameLevel);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      dataset = Util.convertSelectable2Selected(dataset);\n\n      if (Util.isAllFilled(dataset.numMatrix)) {\n        dataset.gameLevel = candidateLevel;\n        break;\n      }\n    }\n\n    // console.log(\"game level: \", dataset.gameLevel);\n\n    // return dataset.numMatrix;\n    return dataset;\n  };\n\n  addNumNStore = cellInfo => {\n    const { checkMode, ansMatrix } = this.state;\n\n    // console.log(\"inside addNumNStore\");\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n      let helpMode = prevState.helpMode;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: prevState.isRegisteredMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      dataset = this.addNum(dataset, cellInfo);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      if (!duplicates) {\n        duplicates = [];\n      }\n\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      } else if (checkMode === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, dataset.numMatrix);\n      }\n\n      return {\n        helpMode: helpMode,\n        numMatrix: dataset.numMatrix,\n        isRegisteredMatrix: dataset.isRegisteredMatrix,\n        numCounts: Util.countNumbers(dataset.numMatrix),\n        trace: dataset.trace,\n        duplicates: duplicates,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  addNum = (dataset, cellInfo) => {\n    const { mode, helpMode, ansMatrix, candidateLevel } = this.state;\n\n    let { numMatrix, isRegisteredMatrix, trace } = dataset;\n\n    // console.log(\"inside addNum\");\n\n    const num = Util.getNumFromNumMatrix(numMatrix, cellInfo.idx);\n    if (num) {\n      cellInfo.prevNum = num;\n    }\n\n    numMatrix = Util.assignNum2NumMatrix(numMatrix, cellInfo);\n\n    if (!Util.isNumCorrect(ansMatrix, cellInfo)) {\n      cellInfo.isWrong = true;\n    }\n\n    // // process either game setting or playing\n    const traceLength = trace.length;\n    if (Config.updateHelpModes.includes(helpMode) && candidateLevel !== null) {\n      dataset = Util.updateCandidates(dataset, cellInfo, candidateLevel);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n    }\n\n    // process either game setting or playing\n    if (mode === Config.mode.set) {\n      isRegisteredMatrix = Util.assignTruth2regMatrix(\n        isRegisteredMatrix,\n        Util.initRegInfo(cellInfo.idx)\n      );\n    } else if (mode === Config.mode.play && !cellInfo.isBackward) {\n      if (trace.length > traceLength) {\n        const traceItem = trace[trace.length - 1];\n        traceItem.numMatrix = cellInfo;\n        traceItem.operation = Config.operationTypes.manual;\n      } else {\n        trace.push(\n          Util.initTraceItemNum(cellInfo, Config.operationTypes.manual)\n        );\n      }\n    }\n\n    dataset.isRegisteredMatrix = isRegisteredMatrix;\n\n    return dataset;\n  };\n\n  deleteNumNStore = idx => {\n    const { checkMode } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: prevState.isRegisteredMatrix,\n        trace: prevState.trace\n      };\n\n      dataset = this.deleteNum(dataset, idx);\n\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      }\n\n      return {\n        numMatrix: dataset.numMatrix,\n        isRegisteredMatrix: dataset.isRegisteredMatrix,\n        numCounts: Util.countNumbers(dataset.numMatrix),\n        trace: dataset.trace,\n\n        duplicates,\n\n        isFilled: false,\n        isComplete: false,\n        isGameDone: false\n      };\n    });\n  };\n\n  deleteNum = (dataset, idx, isBackward = false) => {\n    const { mode } = this.state;\n\n    // console.log(\"inside deleteNum\");\n\n    let { numMatrix, isRegisteredMatrix, trace } = dataset;\n\n    // save the num to be deleted for trace //\n    const num = Util.getNumFromNumMatrix(numMatrix, idx);\n\n    numMatrix = Util.assignNum2NumMatrix(\n      numMatrix,\n      Util.initCellInfo(idx, null)\n    );\n\n    if (mode === Config.mode.set) {\n      isRegisteredMatrix = Util.assignTruth2regMatrix(\n        isRegisteredMatrix,\n        Util.initRegInfo(idx, false)\n      );\n    }\n\n    if (mode === Config.mode.play && !isBackward) {\n      trace.push(Util.initTraceItem(Util.initCellInfo(idx, -num)));\n    }\n\n    dataset.isRegisteredMatrix = isRegisteredMatrix;\n\n    return dataset;\n  };\n\n  addMarkerNStore = markerInfo => {\n    // console.log(\"inside addMarker\");\n\n    this.setState(prevState => {\n      let dataset = {\n        markerNums: prevState.markerNums,\n        candidates: prevState.candidates,\n        trace: prevState.trace\n      };\n\n      dataset = this.addMarker(dataset, markerInfo);\n\n      return {\n        markerNums: dataset.markerNums,\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  addMarker = (dataset, markerInfo) => {\n    // console.log(\"inside addMarker\");\n\n    const { candidateLevel } = this.state;\n\n    let { markerNums, candidates, trace } = dataset;\n    let markerTrace = [];\n    let candidateTrace = [];\n\n    const duplicatedIdx = Util.findNumInMarker(markerNums, markerInfo);\n\n    if (duplicatedIdx !== null) {\n      return {};\n    }\n\n    markerInfo.status = Config.candidateStatus.exclusiveSingle;\n\n    markerNums = Util.setMarkerNum(markerNums, markerInfo);\n\n    if (candidateLevel !== null && candidateLevel > 0) {\n      let candidateTraceTmp = [];\n      let markerTraceTmp = [];\n\n      [\n        candidates,\n        markerNums,\n        candidateTraceTmp,\n        markerTraceTmp\n      ] = Util.setRelatedCandidatesBySingleMark(\n        candidates,\n        markerInfo,\n        markerNums\n      );\n\n      if (markerTraceTmp && markerTraceTmp.length > 0) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      if (candidateTraceTmp && candidateTraceTmp.length > 0) {\n        candidateTrace = candidateTrace.concat(candidateTraceTmp);\n      }\n\n      [\n        candidates,\n        markerNums,\n        candidateTraceTmp,\n        markerTraceTmp\n      ] = Util.setRelatedCandidatesByMultipleMarks(\n        candidates,\n        markerNums,\n        markerInfo\n      );\n\n      if (markerTraceTmp && markerTraceTmp.length > 0) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      if (candidateTraceTmp && candidateTraceTmp.length > 0) {\n        candidateTrace = candidateTrace.concat(candidateTraceTmp);\n      }\n    }\n\n    if (\n      markerTrace.length === 0 ||\n      !Util.findPreviousMarkerInfo(markerNums, markerTrace, markerInfo)\n    ) {\n      markerTrace.push(markerInfo);\n    }\n\n    const traceItem = Util.initTraceItem(\n      null,\n      candidateTrace,\n      markerTrace,\n      Config.operationTypes.manual\n    );\n\n    trace.push(traceItem);\n\n    return dataset;\n  };\n\n  delMarker = markerInfos => {\n    // console.log(\"inside delMarker\");\n\n    this.setState(prevState => {\n      let trace = prevState.trace;\n\n      const [markerNums, newMarkerInfos] = Util.resetMarker(\n        prevState.markerNums,\n        markerInfos\n      );\n\n      trace.push(Util.initTraceItemMarker(newMarkerInfos));\n\n      return { markerNums, trace };\n    });\n  };\n\n  updateMarkerStatusNStore = cellInfo => {\n    // console.log(\"inside updateMarkerStatus\");\n\n    this.setState(prevState => {\n      let dataset = {\n        candidates: prevState.candidates,\n        markerNums: prevState.markerNums\n      };\n\n      dataset = this.updateMarkerStatus(dataset, cellInfo);\n\n      return {\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  updateMarkerStatus = (dataset, cellInfo) => {\n    // console.log(\"inside updateMarkerStatus\");\n\n    const { candidateLevel } = this.state;\n\n    let { candidates, markerNums } = dataset;\n\n    // update marker status of the cells added num //\n    let markerIdxs = Util.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    // convert exclusive type from triple to double //\n    for (let markerIdx of markerIdxs) {\n      let infos = Util.getInfosFromMarkerNums(markerNums, markerIdx);\n\n      if (\n        infos.nums.length === 2 &&\n        infos.statuses[0] === Config.candidateStatus.exclusiveTriple\n      ) {\n        for (let [i, num] of infos.nums.entries()) {\n          markerIdx.i = i;\n          const markerInfo = Util.initMarkerInfo(\n            markerIdx,\n            num,\n            Config.candidateStatus.exclusiveDouble\n          );\n          markerNums = Util.assignMarkerStatus(markerNums, markerInfo);\n        }\n      }\n    }\n\n    // update marker statuses remote from the cell added num //\n    markerIdxs = Util.getRelatedMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    // set selectable type A to markerNums //\n    for (let markerIdx of markerIdxs) {\n      const nums = Util.getNumsFromMarkerNums(markerNums, markerIdx);\n\n      if (nums.length > 0) {\n        const cellIdxs = Util.getCorrespondingCellIdxs2MarkerIdx(markerIdx);\n\n        // find selectable type A //\n        for (let num of nums) {\n          let concerningCellInfos = cellIdxs.map(idx =>\n            Util.initCellInfo(idx, num)\n          );\n\n          if (\n            Util.countNumInCandidates(candidates, concerningCellInfos) === 1 &&\n            candidateLevel >\n              Util.getLevelNumFromFunctionName(\n                Config.candidateTypes.displayCandidates\n              )\n          ) {\n            const targetMarkerInfo = Util.initMarkerInfo(markerIdx, num);\n\n            markerNums = Util.assignSelectable2MarkerNums(\n              markerNums,\n              targetMarkerInfo\n            );\n          }\n        }\n      }\n    }\n\n    // set selectable type B to markerNums //\n    let relatedCellIdxs = Util.getRelatedIndicesBesidesItself(cellInfo.idx);\n    relatedCellIdxs = Util.removeWideSelectedCellIdxs(\n      candidates,\n      relatedCellIdxs\n    );\n\n    for (let cellIdx of relatedCellIdxs) {\n      markerNums = Util.setSelectableB2MarkerNums(\n        markerNums,\n        candidates,\n        cellIdx\n      );\n    }\n\n    return dataset;\n  };\n\n  // Pop up panel to input a number to a cell //\n  handleNumPanelClick = event => {\n    const { activeCellIndex } = this.state;\n\n    // console.log(\"inside handleNumPanelClick\");\n\n    const num = parseInt(event.target.id.slice(1, 2));\n    if (activeCellIndex && 0 < num && num < 10) {\n      if (Util.isMarkerIndex(activeCellIndex)) {\n        this.addMarkerNStore(Util.initMarkerInfo(activeCellIndex, num));\n      } else {\n        this.addNumNStore(Util.initCellInfo(activeCellIndex, num));\n      }\n    }\n\n    this.setState({\n      showNumPanel: false,\n      activeCellIndex: null\n    });\n  };\n\n  // To delete a number from a cell //\n  handleDelete = () => {\n    const { activeCellIndex } = this.state;\n\n    // console.log(\"inside handleDelete\");\n\n    if (activeCellIndex) {\n      if (Util.isMarkerIndex(activeCellIndex)) {\n        const markerInfo = Util.initCellInfo(activeCellIndex, null);\n\n        this.delMarker([markerInfo]);\n      } else {\n        this.deleteNumNStore(activeCellIndex);\n      }\n    }\n\n    this.setState({\n      showNumPanel: false,\n      activeCellIndex: null\n    });\n  };\n\n  // To cancel number insertion thru popup number panel //\n  handleCancel = () => {\n    // console.log(\"inside handleCancel\");\n\n    this.setState({\n      showNumPanel: false\n    });\n  };\n\n  // To check whether duplcates exist or matach to the answer //\n  handleCheck = level => {\n    // console.log(\"inside handleCheck\");\n\n    const id = Config.buttonIds.check + Util.capitalize(level);\n    const { numMatrix, ansMatrix } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplcates;\n\n      if (level === Config.checkMode.none || level === prevState.checkMode) {\n        duplicates = [];\n        level = Config.checkMode.none;\n      } else if (level === Config.checkMode.duplicates) {\n        duplicates = Util.checkDuplicate(numMatrix);\n      } else if (level === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, numMatrix);\n      }\n\n      return {\n        checkMode: level,\n        duplicates\n      };\n    });\n\n    document.getElementById(id).blur();\n  };\n\n  handleHelpMode = type => {\n    // console.log(\"inside handleHelpMode\");\n\n    let singleNumValue = 0;\n    let candidateLevel = null;\n    let candidates = Util.initCube(Config.candidateStatus.candidate);\n    let exclusiveCandidates = [];\n\n    this.setState(prevState => {\n      const prevHelpMode = prevState.helpMode;\n      const prevSingleNumValue = prevState.singleNumValue;\n      let prevMultipleNums = prevState.multipleNums;\n      let numMatrix = prevState.numMatrix;\n      let markerNums = prevState.markerNums;\n      let trace = prevState.trace;\n\n      let dataset = {\n        numMatrix,\n        candidates,\n        exclusiveCandidates,\n        markerNums,\n        trace\n      };\n\n      const stopCondition = Config.backwardStopCondition.numInsertion;\n\n      // kind of cancel //\n      if (prevHelpMode === type) {\n        dataset = this.doBackward(dataset, stopCondition);\n\n        return {\n          helpMode: Config.helpMode.none,\n          candidateLevel: null,\n          candidates: dataset.candidates,\n          exclusiveCandidates: dataset.exclusiveCandidates,\n          markerNums: dataset.markerNums,\n          trace: dataset.trace\n        };\n      } else if (\n        prevHelpMode === Config.helpMode.both ||\n        prevHelpMode === Config.helpMode.multipleNums\n      ) {\n        // return to candidates mode //\n        if (type === Config.helpMode.candidates) {\n          return {\n            helpMode: Config.helpMode.candidates,\n            singleNumValue: 0,\n            multipleNums: []\n          };\n\n          // change from both to multipleNums by pressing singleNum //\n        } else if (prevHelpMode === Config.helpMode.both) {\n          let candidateLevel = prevState.candidateLevel;\n          if (\n            candidateLevel >=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            candidateLevel = Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.removeByInsertedNum\n            );\n          }\n          return {\n            helpMode: Config.helpMode.multipleNums,\n            candidateLevel,\n            multipleNums: prevSingleNumValue ? [prevSingleNumValue] : [1]\n          };\n        } else if (prevHelpMode === Config.helpMode.multipleNums) {\n          dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n\n          // There is a cell full of wide-removed //\n          if (dataset === null) {\n            return {\n              helpMode: Config.helpMode.none,\n\n              candidates: Util.initCube,\n              exclusiveCandidates: [],\n              markerNums: this.initMarkerNums,\n              trace: [],\n              multipleNums: [],\n\n              isShowMessage: true,\n              message: Config.alertMessages.deadEnd\n            };\n          }\n\n          return {\n            helpMode: Config.helpMode.singleNum,\n            candidates: dataset.candidates,\n            exclusiveCandidates: dataset.exclusiveCandidates,\n            markerNums: dataset.markerNums,\n            trace: dataset.trace,\n            multipleNums: [],\n            singleNumValue:\n              prevMultipleNums.length > 0 ? prevMultipleNums.shift() : 1\n          };\n        }\n      } else {\n        if (Config.helpModeArray4display.includes(prevHelpMode)) {\n          let candidateLevel = prevState.candidateLevel;\n          if (\n            candidateLevel >=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            candidateLevel = Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.removeByInsertedNum\n            );\n          }\n\n          return {\n            helpMode: Config.helpMode.both,\n            candidateLevel,\n            singleNumValue: prevState.singleNumValue\n              ? prevState.singleNumValue\n              : 1\n          };\n        } else {\n          candidateLevel = 0;\n\n          if (type === Config.helpMode.singleNum) {\n            singleNumValue = prevState.singleNumValue\n              ? prevState.singleNumValue\n              : 1;\n\n            dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return {\n                isShowMessage: true,\n                message: Config.alertMessages.deadEnd\n              };\n            }\n          } else if (type === Config.helpMode.candidates) {\n            dataset.trace = [];\n\n            dataset = this.doInitCandidates(candidateLevel);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return {\n                isShowMessage: true,\n                message: Config.alertMessages.deadEnd\n              };\n            }\n\n            trace = trace.concat(dataset.trace);\n          }\n        }\n      }\n\n      return {\n        helpMode: type,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace,\n        singleNumValue,\n        candidateLevel\n      };\n    });\n\n    const id = Config.helpModeButtonIds[type];\n    document.getElementById(id).blur();\n  };\n\n  doCheckDuplicates = () => {\n    const { checkMode, numMatrix, ansMatrix } = this.state;\n\n    let duplicates = Util.checkDuplicate(numMatrix);\n\n    if (checkMode === Config.checkMode.correctness) {\n      const wrongIdxs = Util.checkCorrectness(ansMatrix, numMatrix);\n      duplicates = duplicates.concat(wrongIdxs);\n    }\n\n    this.setState({\n      duplicates\n    });\n\n    if (duplicates.length === 0) {\n      return Config.result.passed;\n    }\n    return Config.result.failed;\n  };\n\n  handleSingleNum = (num, nLevel = null) => {\n    // console.log(\"inside handleSingleNum\");\n\n    const { mode, helpMode, candidateLevel, isSkipIneffective } = this.state;\n    const singleNumValue = parseInt(num);\n\n    if (singleNumValue === 0) {\n      if (helpMode === Config.helpMode.singleNum) {\n        this.setState({\n          helpMode: Config.helpMode.none,\n          singleNumValue\n        });\n      } else {\n        this.setState({\n          singleNumValue\n        });\n      }\n      return;\n    } else if (\n      mode === Config.mode.set ||\n      (helpMode === Config.helpMode.candidates && nLevel === null)\n    ) {\n      this.setState({\n        singleNumValue\n      });\n      return;\n    }\n\n    this.setState(prevState => {\n      if (prevState.mode === Config.mode.play) {\n        if (nLevel === null) {\n          if (candidateLevel === null) {\n            nLevel = 0;\n          } else {\n            nLevel = candidateLevel;\n          }\n        }\n      }\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n        // gameLevel: 0\n      };\n\n      if (helpMode === Config.helpMode.both) {\n        const conditions = {\n          candidateLevel,\n          helpMode,\n          singleNumValue,\n          isStepByStep: true,\n          isSkipLevel1: true,\n          isSkipIneffective\n        };\n\n        dataset = Util.setCandidates(dataset, conditions);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return {\n            isShowMessage: true,\n            message: Config.alertMessages.deadEnd\n          };\n        }\n      } else {\n        dataset = this.doInitSingleNum(singleNumValue, nLevel);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return {\n            isShowMessage: true,\n            message: Config.alertMessages.deadEnd\n          };\n        }\n      }\n\n      return {\n        helpMode:\n          helpMode === Config.helpMode.both\n            ? helpMode\n            : Config.helpMode.singleNum,\n        singleNumValue,\n        candidateLevel: nLevel,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  handleSingleNumLevel = level => {\n    // console.log(\"inside handleSingleNumLevel\");\n\n    // const { helpMode } = this.state;\n\n    let nLevel = Util.getLevelNum(level);\n    let { singleNumValue } = this.state;\n    const id = Util.getSingleNumBtnId(level);\n\n    document.getElementById(id).blur();\n\n    this.setState(() => {\n      const isSkipLevel1 = false;\n      const dataset = this.doCandidates(nLevel, singleNumValue, isSkipLevel1);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidateLevel: nLevel,\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  doInitSingleNum = (singleNumValue, candidateLevel = 0) => {\n    // console.log(\"inside doInitSingleNum\");\n\n    const { numMatrix, isSkipIneffective } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode: Config.helpMode.singleNum,\n      singleNumValue,\n      isStepByStep: true,\n      isSkipLevel1: false,\n      isSkipIneffective\n    };\n\n    return Util.initCandidates(numMatrix, conditions);\n  };\n\n  doInitCandidates = (candidateLevel = 0) => {\n    // console.log(\"inside doInitCandidates\");\n\n    const { numMatrix, isSkipIneffective } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode: Config.helpMode.candidates,\n      singleNumValue: 0,\n      isStepByStep: true,\n      isSkipLevel1: false,\n      isSkipIneffective\n    };\n\n    return Util.initCandidates(numMatrix, conditions);\n  };\n\n  doCandidates = (\n    candidateLevel = 0,\n    singleNumValue = 0,\n    isSkipLevel1 = false\n  ) => {\n    const {\n      helpMode,\n      numMatrix,\n      candidates,\n      exclusiveCandidates,\n      markerNums,\n      trace,\n      isSkipIneffective\n    } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep: true,\n      isSkipLevel1,\n      isSkipIneffective\n    };\n\n    let dataset = {\n      numMatrix: Util.deepCopy(numMatrix),\n      candidates: Util.deepCopy(candidates),\n      exclusiveCandidates: Util.deepCopy(exclusiveCandidates),\n      markerNums: Util.deepCopy(markerNums),\n      trace: Util.deepCopy(trace)\n      // gameLevel: 0\n    };\n\n    return Util.setCandidates(dataset, conditions);\n  };\n\n  handleMultipleNums = num => {\n    this.setState(prevState => {\n      let multipleNums = prevState.multipleNums;\n\n      if (multipleNums.includes(num)) {\n        const index = multipleNums.indexOf(num);\n        if (index > -1) {\n          multipleNums.splice(index, 1);\n        }\n      } else {\n        multipleNums.push(num);\n        multipleNums.sort();\n      }\n\n      return { multipleNums };\n    });\n  };\n\n  handleNumInsert = event => {\n    const { singleNumValue, numMatrix } = this.state;\n\n    // console.log(\"inside handleNumInsert\");\n\n    const cellAddress = event.target.id;\n    const idx = Util.R1C12Index(cellAddress);\n\n    let num = parseInt(event.target.getAttribute(\"data-num\"));\n\n    if (isNaN(num)) {\n      if (singleNumValue !== null && singleNumValue !== 0) {\n        num = singleNumValue;\n      } else {\n        return;\n      }\n    }\n\n    if (0 < num && num < 10) {\n      if (Util.getNumFromNumMatrix(numMatrix, idx) === num) {\n        this.deleteNumNStore(idx);\n      } else {\n        this.addNumNStore(Util.initCellInfo(idx, num));\n      }\n    }\n\n    this.setState({\n      activeCellIndex: null\n    });\n  };\n\n  handleMarkerCell = event => {\n    const { singleNumValue, markerNums } = this.state;\n\n    // console.log(\"inside handleMarkerCell\");\n\n    const cellAddress = event.target.id;\n    let idx = null;\n    let num = null;\n\n    if (Util.isMarkerAddress(cellAddress)) {\n      idx = Util.markerId2Idx(cellAddress);\n\n      if (singleNumValue !== null && singleNumValue !== 0) {\n        num = singleNumValue;\n      } else {\n        return;\n      }\n\n      const markerInfo = Util.initMarkerInfo(idx, num);\n      const oldNum = Util.getNumFromMarkerNums(markerNums, idx);\n\n      if (oldNum === num) {\n        this.delMarker([markerInfo]);\n      } else {\n        this.addMarkerNStore(markerInfo);\n      }\n    }\n\n    this.setState({\n      activeCellIndex: null\n    });\n  };\n\n  handleCandidateLevels = level => {\n    // console.log(\"inside handleCandidates\");\n\n    const id = Util.getCandidateLevelId(level);\n    const { helpMode } = this.state;\n\n    this.setState(prevState => {\n      let candidateLevel = Util.getLevelNum(level);\n      let singleNumValue = prevState.singleNumValue;\n      let isSkipLevel1 = true;\n      let dataset = {};\n\n      if (prevState.candidateLevel === 0) {\n        isSkipLevel1 = false;\n      }\n\n      if (helpMode === Config.helpMode.singleNum) {\n        if (\n          !prevState.candidateLevel ||\n          prevState.candidateLevel > candidateLevel\n        ) {\n          dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n        } else {\n          dataset = this.doCandidates(\n            candidateLevel,\n            singleNumValue,\n            isSkipLevel1\n          );\n        }\n      } else {\n        singleNumValue = 0;\n\n        dataset = this.doCandidates(\n          candidateLevel,\n          singleNumValue,\n          isSkipLevel1\n        );\n      }\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidateLevel,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace\n      };\n    });\n\n    document.getElementById(id).blur();\n  };\n\n  handleControls = controlType => {\n    // console.log(\"inside handleControls\");\n\n    const id = Util.getControlId(controlType);\n\n    const { candidateLevel } = this.state;\n\n    if (controlType === Config.candidateControls.backward) {\n      this.doBackwardNStore();\n\n      return;\n    } else if (controlType === Config.candidateControls.reset) {\n      const isAll = true;\n      this.doBackwardNStore(isAll);\n\n      return;\n    } else if (\n      controlType === Config.candidateControls.select &&\n      candidateLevel >\n        Util.getLevelNumFromFunctionName(\n          Config.candidateTypes.displayCandidates\n        )\n    ) {\n      this.doSelectSelectableCandidates();\n    } else if (\n      candidateLevel >=\n      Util.getLevelNumFromFunctionName(Config.candidateTypes.singleCandidate)\n    ) {\n      if (\n        [\n          Config.candidateControls.forward,\n          Config.candidateControls.fastForward\n        ].includes(controlType)\n      ) {\n        this.doForward(controlType);\n        // } else if (controlType === Config.candidateControls.select) {\n        //   this.doSelectSelectableCandidates();\n      } else if (controlType === Config.candidateControls.erase) {\n        this.doEraseExclusiveColors();\n      }\n    }\n\n    document.getElementById(id).blur();\n  };\n\n  handleSkipIneffectiveStatus = isSkipIneffective => {\n    this.setState({ isSkipIneffective });\n  };\n\n  doEraseExclusiveColors = () => {\n    this.setState(prevState => {\n      let candidates = prevState.candidates;\n      let trace = prevState.trace;\n\n      [candidates, trace] = Util.eraseExclusiveColors(candidates, trace);\n\n      return {\n        candidates,\n        trace\n      };\n    });\n  };\n\n  doSelectSelectableCandidates = () => {\n    // console.log(\"inside doSelectSelectableCandidates\");\n\n    this.setState(prevState => {\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      dataset = Util.selectSelectables(dataset);\n\n      dataset = Util.eraseRmovalbe(dataset);\n\n      return {\n        numMatrix: dataset.numMatrix,\n        candidates: dataset.candidates,\n        markerNums: dataset.markerNums,\n        trace: prevState.trace,\n        numCounts: Util.countNumbers(dataset.numMatrix)\n      };\n    });\n  };\n\n  doForward = controlType => {\n    const {\n      helpMode,\n      singleNumValue,\n      candidateLevel,\n      isSkipIneffective\n    } = this.state;\n\n    // console.log(\"inside doForward\");\n\n    this.setState(prevState => {\n      const isSkipLevel1 = true;\n      const isStepByStep =\n        controlType === Config.candidateControls.forward ? true : false;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n        // gameLevel: 0\n      };\n\n      let conditions = {\n        candidateLevel,\n        helpMode:\n          helpMode === Config.helpMode.both\n            ? Config.helpMode.candidates\n            : helpMode,\n        singleNumValue,\n        isStepByStep,\n        isSkipLevel1,\n        isSkipIneffective\n      };\n\n      dataset = Util.setCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        trace: dataset.trace,\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  doEraseCandidates = () => {\n    this.setState(prevState => {\n      let dataset = {\n        candidates: prevState.candidates,\n        trace: prevState.trace\n      };\n\n      dataset = Util.eraseRmovalbe(dataset);\n\n      return {\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  doBackwardNStore = (isAll = false) => {\n    // console.log(\"inside doBackwardNStore\");\n\n    const { ansMatrix } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n      let checkMode = prevState.checkMode;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: null,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      let stopCondtion = null;\n      if (isAll) {\n        stopCondtion = Config.backwardStopCondition.wrongInsertion;\n      }\n\n      dataset = this.doBackward(dataset, stopCondtion);\n\n      if (isAll) {\n        checkMode = Config.checkMode.correctness;\n      }\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      } else if (checkMode === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, dataset.numMatrix);\n      }\n\n      // if (duplicates.length === 0) {\n      //   checkMode = Config.checkMode.none;\n      // }\n\n      return {\n        checkMode,\n        numMatrix: dataset.numMatrix,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace,\n        duplicates,\n        numCounts: Util.countNumbers(dataset.numMatrix)\n      };\n    });\n  };\n\n  doBackward = (dataset, stopCondition = null) => {\n    // console.log(\"inside doBackward\");\n\n    let { candidates, markerNums, trace } = dataset;\n\n    if (trace.length === 0) {\n      return dataset;\n    }\n\n    let loopMax = 1;\n    if (stopCondition) {\n      loopMax = trace.length;\n    }\n\n    let datasetTmp = {\n      numMatrix: Util.deepCopy(dataset.numMatrix),\n      isRegisteredMatrix: null,\n      candidates: Util.deepCopy(dataset.candidates),\n      exclusiveCandidates: Util.deepCopy(dataset.exclusiveCandidates),\n      markerNums: Util.deepCopy(dataset.markerNums),\n      trace: []\n    };\n\n    for (let i = 0; i < loopMax; i++) {\n      const lastEvent = trace.pop();\n\n      const numInfo = Util.getNumInfoFromTraceItem(lastEvent);\n\n      if (numInfo) {\n        if (\n          stopCondition === Config.backwardStopCondition.numInsertion &&\n          \"isWrong\" in numInfo &&\n          numInfo.isWrong\n        ) {\n          trace.push(lastEvent);\n          break;\n        }\n\n        const num = numInfo.num;\n        const idx = numInfo.idx;\n\n        if (num > 0) {\n          if (\"prevNum\" in numInfo && typeof numInfo.prevNum === \"number\") {\n            let tmpCellInfo = Util.initCellInfo(numInfo.idx, numInfo.prevNum);\n            datasetTmp.numMatrix = Util.assignNum2NumMatrix(\n              datasetTmp.numMatrix,\n              tmpCellInfo\n            );\n          } else {\n            const isBackward = true;\n            datasetTmp = this.deleteNum(datasetTmp, idx, isBackward);\n          }\n        } else {\n          let cellInfo = Util.initCellInfo(idx, Math.abs(num));\n\n          cellInfo.isBackward = true;\n          datasetTmp = this.addNum(datasetTmp, cellInfo);\n        }\n\n        dataset.numMatrix = datasetTmp.numMatrix;\n      }\n\n      const candInfos = Util.getCandidateInfoFromTraceItem(lastEvent);\n\n      if (candInfos && candInfos.length > 0) {\n        dataset.candidates = Util.traceBackCandidates(candidates, candInfos);\n\n        if (lastEvent.operation === Config.operationTypes.auto) {\n          dataset.exclusiveCandidates.pop();\n        }\n      }\n\n      const markerInfos = Util.getMarkerInfoFromTraceItem(lastEvent);\n\n      if (markerInfos && markerInfos.length > 0) {\n        [dataset.markerNums] = Util.resetMarker(markerNums, markerInfos);\n      }\n    }\n\n    return dataset;\n  };\n\n  handleCandidateCell = event => {\n    // console.log( \"inside handleCandidateCell\" );\n\n    let cellInfo = Util.R1C1N12CellInfo(event.target.id);\n\n    this.setState(prevState => {\n      let candidates = prevState.candidates;\n      let markerNums = prevState.markerNums;\n      let trace = prevState.trace;\n\n      const prevStatus = Util.getCandidateStatus(candidates, cellInfo);\n\n      if (Util.isLastCandidate(candidates, cellInfo)) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      [candidates, cellInfo] = Util.flipCandidateStatus(candidates, cellInfo);\n\n      const traceItem = Util.initTraceItemCandidate(\n        [cellInfo],\n        Config.operationTypes.manual\n      );\n\n      if (Util.isNarrowCandidate(prevStatus)) {\n        let markerIdxs = Util.getMarkerIdxsFromCellIdx(cellInfo.idx);\n        let markerTrace = [];\n\n        for (let markerIdx of markerIdxs) {\n          const markerInfo = Util.initMarkerInfo(markerIdx, cellInfo.num);\n          const targetMarkerIdx = Util.findNumInMarker(markerNums, markerInfo);\n\n          if (targetMarkerIdx !== null) {\n            let concerningCellIdxs = Util.getTargetCellIndicesByMarkerIdx(\n              targetMarkerIdx,\n              candidates\n            );\n\n            concerningCellIdxs = concerningCellIdxs.filter(idx =>\n              Util.isNarrowCandidate(\n                Util.getCandidateStatus(\n                  candidates,\n                  Util.initCellInfo(idx, markerInfo.num)\n                )\n              )\n            );\n\n            if (concerningCellIdxs.length === 1) {\n              const markerInfo = Util.initMarkerInfo(\n                targetMarkerIdx,\n                cellInfo.num\n              );\n              markerNums = Util.assignSelectable2MarkerNums(\n                markerNums,\n                markerInfo\n              );\n\n              markerTrace.push(markerInfo);\n            }\n          }\n        }\n\n        if (markerTrace.length > 0) {\n          traceItem.marker = markerTrace;\n        }\n      }\n      trace.push(traceItem);\n\n      return { candidates, markerNums, trace };\n    });\n  };\n\n  handleMarker = () => {\n    // console.log(\"inside handleMarker\");\n\n    this.setState(prevState => {\n      const markerStatus = Util.flipMarkerStatus(prevState.markerStatus);\n\n      return { markerStatus };\n    });\n\n    document.getElementById(Config.buttonIds.marker).blur();\n  };\n\n  handleStepBack = () => {\n    const { trace } = this.state;\n\n    // console.log(\"hangleStepBack\");\n\n    if (!!trace.length) {\n      const lastEvent = trace.pop();\n      const num = lastEvent.numMatrix.num;\n      const idx = lastEvent.numMatrix.idx;\n\n      if (num > 0) {\n        this.deleteNumNStore(idx, false);\n      } else {\n        this.addNumNStore(Util.initCellInfo(idx, Math.abs(num)));\n      }\n    }\n\n    document.getElementById(Config.buttonIds.stepBack).blur();\n  };\n\n  handleClear = () => {\n    // console.log(\"inside handleClear\");\n\n    this.setState({\n      helpMode: Config.helpMode.none,\n      exclusiveCandidates: [],\n      duplicates: [],\n      singleNumValue: 0,\n      showNumPanel: false,\n      isShowMessage: false\n    });\n    document.getElementById(Config.buttonIds.clear).blur();\n  };\n\n  handleNewGame = () => {\n    // console.log(\"inside handleNewGame\");\n\n    const { lang } = this.state;\n    let origState = this.getInitialState();\n    origState.lang = lang;\n\n    this.setState(origState);\n\n    document.getElementById(Config.buttonIds.newGame).blur();\n  };\n\n  handleSampleGames = sampleLevel => {\n    // console.log(\"inside handleSampleGames\");\n\n    const { lang } = this.state;\n    const origState = this.getInitialState();\n\n    const sampleMatrix = Util.getSampleMatrix(sampleLevel);\n    const id = Config.buttonIds.sampleGame + Util.capitalize(sampleLevel);\n\n    origState.numMatrix = sampleMatrix;\n    origState.sampleGameID = sampleLevel;\n\n    origState.lang = lang;\n\n    // origState.ansMatrix = this.calcAnswer(sampleMatrix);\n    const dataset = this.calcAnswer(sampleMatrix);\n\n    // There is a cell full of wide-removed //\n    // if (origState.ansMatrix === null) {\n    if (dataset.ansMatrix === null) {\n      this.setState({\n        isShowMessage: true,\n        message: Config.alertMessages.deadEnd\n      });\n    } else {\n      origState.ansMatrix = dataset.numMatrix;\n      // const gameLevel = dataset.gameLevel;\n\n      // if (origState.ansMatrix) {\n      origState.mode = Config.mode.play;\n      origState.checkMode = Config.checkMode.none;\n      origState.isRegisteredMatrix = Util.getRegisteredFlags(sampleMatrix);\n\n      // if (Util.isAllFilled(origState.ansMatrix)) {\n      //   origState.gameLevel = 6;\n      // } else {\n      //   origState.gameLevel = Config.candidateLevels.length;\n      // }\n      origState.gameLevel = Util.isAllFilled(origState.ansMatrix)\n        ? dataset.gameLevel\n        : Config.candidateLevels.length;\n\n      origState.numCounts = Util.countNumbers(sampleMatrix);\n    }\n\n    this.setState(origState);\n\n    document.getElementById(id).blur();\n  };\n\n  handleSetUp = () => {\n    // console.log(\"inside handleSetUp\");\n\n    const { mode } = this.state;\n\n    if (mode === Config.mode.set) {\n      if (this.doCheckDuplicates() === Config.result.passed) {\n        this.setState(prevState => {\n          // const ansMatrix = this.calcAnswer(prevState.numMatrix);\n          const dataset = this.calcAnswer(prevState.numMatrix);\n          const ansMatrix = dataset.numMatrix;\n          let gameLevel = dataset.gameLevel;\n\n          if (ansMatrix) {\n            // const gameLevel = Util.isAllFilled(ansMatrix)\n            //   ? 6\n            //   : Config.candidateLevels.length;\n            gameLevel = Util.isAllFilled(ansMatrix)\n              ? gameLevel\n              : Config.candidateLevels.length;\n\n            return {\n              mode: Config.mode.play,\n              helpMode: Config.helpMode.none,\n              checkMode: Config.checkMode.none,\n              singleNumValue: 0,\n              ansMatrix,\n              gameLevel\n            };\n          } else {\n            return {\n              isShowMessage: true,\n              message: Config.alertMessages.wrongQuestion\n            };\n          }\n        });\n      } else {\n        this.setState({\n          checkMode: Config.checkMode.duplicates,\n          isShowMessage: true,\n          message: Config.alertMessages.duplicates\n        });\n      }\n    } else {\n      this.setState(prevState => {\n        let numMatrix = prevState.numMatrix;\n        const isRegisteredMatrix = prevState.isRegisteredMatrix;\n\n        return {\n          mode: Config.mode.set,\n          helpMode: Config.helpMode.none,\n          checkMode: Config.checkMode.duplicates,\n          numMatrix: Util.resetNumMatrix(numMatrix, isRegisteredMatrix),\n          candidates: Util.initCube(),\n          exclusiveCandidates: [],\n          markerNums: Util.initMarkerNums(),\n          trace: [],\n          singleNumValue: 0\n        };\n      });\n    }\n\n    document.getElementById(Config.buttonIds.setup).blur();\n  };\n\n  handleRestart = () => {\n    const {\n      lang,\n      numMatrix,\n      isRegisteredMatrix,\n      sampleGameID,\n      gameLevel\n    } = this.state;\n    const origState = this.getInitialState();\n\n    // console.log(\"inside handleRestart\");\n\n    origState.lang = lang;\n    origState.mode = Config.mode.play;\n    origState.checkMode = Config.checkMode.none;\n\n    origState.numMatrix = Util.resetNumMatrix(numMatrix, isRegisteredMatrix);\n    origState.isRegisteredMatrix = isRegisteredMatrix;\n    origState.sampleGameID = sampleGameID;\n    origState.gameLevel = gameLevel;\n    origState.numCounts = Util.countNumbers(origState.numMatrix);\n\n    this.setState(origState);\n\n    document.getElementById(Config.buttonIds.restart).blur();\n  };\n\n  handleHelpButton = () => {\n    document.getElementById(Config.buttonIds.help).blur();\n  };\n\n  handleLang = () => {\n    this.setState(prevState => {\n      return { lang: Util.flipLang(prevState.lang) };\n    });\n\n    document.getElementById(Config.buttonIds.lang).blur();\n  };\n\n  showFloating = event => {\n    const { mode, isRegisteredMatrix } = this.state;\n\n    // console.log(\"insdie showFloating\");\n\n    let idx = null;\n    const cellAddress = event.target.id;\n\n    if (Util.isMarkerAddress(cellAddress)) {\n      idx = Util.markerId2Idx(cellAddress);\n    } else {\n      idx = Util.R1C12Index(cellAddress);\n    }\n\n    if (\n      !idx ||\n      (!Util.isMarkerIndex(idx) &&\n        (mode === Config.mode.play && isRegisteredMatrix[idx.r][idx.c]))\n    ) {\n      return;\n    }\n\n    this.setState({\n      activeCellIndex: idx,\n      mousePosition: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      showNumPanel: true\n    });\n  };\n\n  handleMessageModalClick = () => {\n    // console.log(\"inside handleMessageModalClick\");\n\n    this.setState({\n      isShowMessage: false\n    });\n  };\n\n  render() {\n    const { lang } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>{Config.panelTitles.header[lang]}</h1>\n        </header>\n        <main className=\"App-main\">\n          <ControlPanel\n            {...this.state}\n            handleRestart={this.handleRestart}\n            handleSetUp={this.handleSetUp}\n            handleNewGame={this.handleNewGame}\n            handleSampleGames={this.handleSampleGames}\n            handleSave={this.handleSave}\n          />\n          <SudokuBoard\n            {...this.state}\n            showFloating={this.showFloating}\n            handleNumInsert={this.handleNumInsert}\n            handleCandidateCell={this.handleCandidateCell}\n            handleMarkerCell={this.handleMarkerCell}\n          />\n          <HelperPanel\n            {...this.state}\n            handleCheck={this.handleCheck}\n            handleHelpMode={this.handleHelpMode}\n            handleSingleNum={this.handleSingleNum}\n            handleSingleNumLevel={this.handleSingleNumLevel}\n            handleMultipleNums={this.handleMultipleNums}\n            handleCandidates={this.handleCandidateLevels}\n            handleControls={this.handleControls}\n            handleSkipIneffectiveStatus={this.handleSkipIneffectiveStatus}\n            handleMarker={this.handleMarker}\n            handleHelpButton={this.handleHelpButton}\n            handleLang={this.handleLang}\n            handleClear={this.handleClear}\n          />\n        </main>\n        <Footer {...this.state} />\n        {/* Popup panels (invisible at start) */}\n        <Floating\n          {...this.state}\n          modal\n          // viewport\n          closeOnModalClick\n          handleNumPanelClick={this.handleNumPanelClick}\n          handleDelete={this.handleDelete}\n          handleCancel={this.handleCancel}\n        />\n        <ShowMessage\n          {...this.state}\n          modal\n          closeOnModalClick\n          handleMessageModalClick={this.handleMessageModalClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport { getRandomArbitrary, getRandomInt, getRandomIntInclusive };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}