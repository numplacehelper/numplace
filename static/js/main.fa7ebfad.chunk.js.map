{"version":3,"sources":["images/forward.svg","images/forwardDisabled.svg","images/fastForward.svg","images/fastForwardDisabled.svg","images/backward.svg","images/backwardDisabled.svg","images/rewind.svg","images/rewindDisabled.svg","images/select.svg","images/selectDisabled.svg","images/erase.svg","images/eraseDisabled.svg","images/close.svg","components/Cell.js","Config.js","util/combinations.js","Util.js","components/NumPanelBlock.js","components/sudokuBoard/CellContainer.js","components/sudokuBoard/Marker.js","components/sudokuBoard/BoardBlock.js","components/sudokuBoard/SudokuBoard.js","components/control/NewGame.js","components/control/SampleGames.js","components/control/Restart.js","components/control/SetUp.js","components/control/ControlPanel.js","components/helper/Check.js","components/helper/helpMode/HelpModeButtons.js","components/helper/helpMode/SingleNum.js","components/helper/helpMode/MultipleNums.js","components/helper/helpMode/CandidatesLevels.js","components/helper/helpMode/Controls.js","components/helper/helpMode/HelpModePane.js","components/helper/MarkerButton.js","components/helper/LangButton.js","components/helper/HelpButton.js","components/helper/Indicator.js","components/helper/HelperPanel.js","components/Footer.js","components/floating/Delete.js","components/floating/Cancel.js","components/floating/NumPanelControl.js","components/floating/NumPanel.js","components/floating/Floating.js","components/floating/ShowMessage.js","App.js","util/Random.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","_this$props","this","props","cellId","num","lastCandidate","clsName","onClick","react_default","a","createElement","id","className","data-num","Component","Config","lang","en","ja","size","sizeB","numCells","Math","pow","maxLoopNum","maxUnionSize","maxSquareNum","traceTypes","numMatrix","candidate","marker","traceElementTypes","Object","assign","operation","operationTypes","manual","auto","candidateLevelTypes","level0","candidateTypes","displayCandidates","removeByInsertedNum","singleCandidate","singleExclusive","multipleExclusive","square","assumptionTest","level1","level2","level3","level4","level5","level6","candidateLevelTypesArray","stepByStepLevels","candidateLevels","restrictionTypes","row","column","col","block","blk","restrictionTypesShort","r","c","b","restrictionTypesStraightArray","restrictionTypesStraightShortArray","restrictionTypesArray","invBRC","mode","set","play","helpModeArray4display","helpMode","none","singleNum","candidates","both","multipleNums","helpModeArray4displayOnMultipleNums","helpModeArray","updateHelpModes","checkModeArray","checkMode","duplicates","correctness","processTypes","insertion","panelIds","sudokuBoard","cellContainerSuffix","control","helper","numPanelContainer","numPanelWrapper","numPanel","numPanelCell","numPanelControl","messageWrapper","footer","footerCredit","textForm","panelClassNames","subBlock","cell","cellContainer","smallCell","subCell","cellNum","panelTitles","header","buttonIds","newGame","sampleGameWrapper","sampleGameInnerWrapper","sampleGame","setup","save","restart","check","checkWrapper","singleNumRadio","singleNumButton","multipleNumsLabel","multipleNumsCheckbox","candidateWrapper","controlButtonWrapper","controls","controlLabelSkipIneffective","help","helperLableWrapper","indicatorWrapper","indicator","delete","cancel","buttonClassNames","sampleGameFrame","sampleGameButton","checkTitle","checkButton","singleNumTitle","singleNumContainer","singleNumRadioWrapper","singleNumButtonWrapper","singleNumDisabled","singleNumDone","singleNumExceeding","multipleNumsContainer","multipleNumsCheckBoxWrapper","multipleNumsDisabled","multipleNumsDone","multipleNumsExceeding","candidateTitle","candidateContainer","candidateButtonWrapper","candidateDisabled","candidateButton","controlSkipIneffective","buttonStatus","waiting","active","disabled","buttonTitles","edit","sampleGames","langButtonTitles","helpModeButtonIds","container","wrapper","title","helpModeButtonClassNames","formNames","skipIneffective","candidateActiveControls","candidateControls","reset","backward","forward","fastForward","select","erase","keys","candidateControlArray","candidateButtonGroupNames","candidateButtons","exclusiveMultiples4marker","candidateStatus","assigned","selected","selectable","exclusiveSingle","exclusiveDouble","exclusiveTriple","exclusiveQuadruple","exclusiveSquare","removable","removed","shadowed","weaklyShadowed","inhibited","exclusiveTypes4marker","exclusiveMultiples","narrowExclusiveStatuses","exclusiveStatuses","wideExclusiveStatuses","selectedList","wideSelectedList","wideRemovedList","narrowCandidateList","markerRelatedExclusiveTypes","candidateList","wideCandidateList","registered","duplicated","checkButtonLabels","checkTitleCaptions","helpModeButtonLabels","helpModeCaptions","singleNumLevels","singleNumCaptions","candidateLevelCaptions","constrolIconCaptions","candidateControlIconSizes","small","large","backwardStopCondition","wrongInsertion","numInsertion","result","passed","failed","messages","success","failure","alertMessages","deadEnd","wrongQuestion","helpPath","helpFiles","dummyMatrix","sampleGameClassList","sampleGameClasses","beginner","easy","medium","hard","xtreme","sampleGameTitles","credit","publisher","author","book","question","matrix","creditTemplate","k_combinations","k","i","j","combs","head","tailcombs","length","push","slice","concat","Util","N","arguments","undefined","Array","from","idxSequence","getIndexSequence","redundant","reverse","map","blockId","parseInt","getBlockNumFromBlockId","toUpperCase","val","len","fill","_this","initArray","_this2","initMatrix","arr","getNsequence","numPanelMatrix","splice","idxs","nums","status","type","rcbIdx","unionSize","isBackward","constructor","idx","truth","rcType","rc","checkedArray","forEach","getContentFromMatrix","cellInfo","_this3","getCandidateStatusArray","n2i","_this4","statusArray","targetStatuses","_this5","convertExclusive2Candidates","includes","candidateNums","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","isNarrowCandidate","i2n","err","return","statuses","getNarrowCandidateNumsFromStatusArray","_this6","candidateNumMatrix","getNumsFromCandidateNumMatrix","idxArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","initCellIdx","_this7","markerIdx","isExclusiveSingle","getFirstLetter","initMarkerIdx","isExclusiveDoubleOrTriple","isInSameRowCol","blkIdx","isInSameBlock","initMarkerInfo","_ref4","numInfo","candInfoArray","markerInfoArray","defineProperty","initTraceItem","candInfos","markerInfos","_this8","reduce","getRowColIndicesFromBlockIdx","dic","regMatrix","appMatrix","appearance","isRegisteredMatrix","regRow","isRegistered","assignStatus2Candidates","prevStatuses","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","cellInfoSub","initCellInfo","getCandidateStatus","_this9","traceItem","trace","infoType","particularTrace","filter","particularTraceItem","flattenMatrix2Array","getAllParticularInfosFromTrace","numCounts","allIdxs","getAllCellIndicies","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getNumFromNumMatrix","countWideSelectedCellsInCandidates","_this10","count","candCell","isWideSelectedInStatuses","cellInfos","_this11","_this12","_this13","isCandidate","countCandidates","candNums","getCandidateNums","pop","_this14","isWideRemoved","countNarrowCandidates","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_ref7","_ref6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref10","_ref9","isSelectable","address","markerNums","getNumsFromMarkerNums","isMarkerIndex","getNumFromMarkerNums","markerInfo","getNumArrayFromMarkerNums","ary","n","m","level","classTitle","capitalize","getSampleGameButtonId","levelId","gameInfo","getSampleGameInfo","gameNumMatrix","deepCopy","gameClass","convZero2Null","_levelId$split","split","_levelId$split2","langs","values","indexOf","crediteInfo","_arr","_i","_ref13","_ref12","key","replace","blkIndex","blockCellIndices","getBlkIndicesFromIdx","getNumbersFromIndices","getNumbersFromBlockIndex","blkNum","getNumbersFromBlockIdx","indices","_this15","cellIndices","_this16","colNums","_this17","_this18","rowBase","floor","colBase","getRowIndicesFromBlockIdx","getColIndicesFromBlockIdx","_this19","flipRCType","counterRC","shortIdxArray","_this20","rowIdxs","colIdxs","getCellIdxsFromMarkerIdx","removeWideSelectedCellIdxs","cellIdxs","_this21","isWideSelectedInCell","_this22","targetCellIndices","getCellIndices","isIdxInDuplicates","getRowIndicesFromIdx","getColIndicesFromIdx","blockIdx","getBlockIdxFromCellIdx","getBlkRowIndicesFromIdx","getBlkColIndicesFromIdx","removeSelectCells","_this23","rows2","getRowIndicesWithoutTheIdx","cols2","getColIndicesWithoutTheIdx","blks2","getBlockOnlyIndicesFromCellIdx","rows","cols","bIdx","nBlock","getBlkIndicesFromNum","rcbType","_this24","getCandidateCellIndices","cellIndicesTmp","removeDuplicatedIndices","unionCell","getRelatedIndices4union","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","prevStatus","_this25","relatedCellInfos","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop","counterRCType","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iterator10","blkIdxs","_arr2","_i2","blkSequence","getRowColWiseBlockIdxSequence","r1c1","r1c1n1","R1C12Index","_this26","getCellIndicesFromBlockId","index2R1C1","markerId","toLowerCase","_this27","cellIdx","blockSeq","getRelatedBlockIdxsFromCellIdx","markerIdxs","_arr3","_i3","blockIdxs","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_ref16","_ref15","infoArray","getInfoArrayFromMarkerNums","infos","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_ref19","_ref18","isReset","abs","isTheNumInMarker","findNumInMarker","getFirstNullIdx","sortMarkerNums","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_ref22","_ref21","targetMarkerInfo","_i4","mInfo","setMarkerNum","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","assignMarkerStatusSub","assignMarkerStatus","getMarkerStatus","rcInfo","sorted","shift","newNum","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_ref25","_ref24","markerStatus","markerTrace","findPreviousMarkerInfo","updateMarkerStatus","revMarkerTrace","matchedMarkerInfo","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","prevMInfo","isMatchTwoMarkers","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_ref28","_ref27","countNonZeroCells","_this28","rowInfo","_this29","colInfo","_this30","blkInfo","dupCellIndices","cellInfoArray","getCellInfoArrayFromIndices","nulllessCellInfoArray","removeNullsFromCellInfo","sort","isTwoIdxsSame","_this31","dup","findDuplicatedIndices","dupidx","ansMatrix","wrongIdxs","isMatrixAllNull","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","isNumCorrect","ans","isAllNull","elem","ary1","ary2","isSame","e1","removeDuplicatedNumbers","statusList","toConsumableArray","idx1","idx2","JSON","stringify","idxs1","idxs2","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_ref31","_ref30","_this32","directions","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_loop2","rcIdxs","isAllNumbersSame","v","_iterator24","_ret2","_this33","pairCell","exclusiveCandidates","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","exCand","blkIdx1","_this34","idxsArray","_this35","isInCellInfoArray","_this36","didx","blockNum","getIsDuplicatedFromIndices","_this37","appearanceMatrix","allCellIdxs","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","appendNum","assignAppearance","candidateLevel","_this38","removeTypes","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","getCandidateStatuses","combinedStatus","combineStatuses","isSelected","hasSelected","dataset","conditions","_this39","isStepByStep","isSkipIneffective","candidateTrace","prevMarkerTrace","getAllMarkerInfosFromTrace","expectedLength","getUnionSizes","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_loop3","candidateCells","getSingleNumCandidateCells","direction","convertRCType2Direction","targetCellInfo","convertCellInfo2MarkerInfo","isInExclusiveCandidates","isStatusWorth2Store","updateCellIdxs","_this39$assignCandida","assignCandidateStatus4SingleNum","_this39$assignCandida2","updateCellInfo","_this39$assignCandida3","_this39$assignCandida4","isCellsAllWideRemoved","_iterator28","_ret3","rcIdx","candidateIdxs","targetIdxs","_this40","untargetIdxs","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","_this$getSingleNumBTa","getSingleNumBTargetIdxs","_this$getSingleNumBTa2","getSingleNumBUntargetIdxs","_this$assignCandidate","_this$assignCandidate2","untargetCellInfo","_this$assignCandidate3","_this$assignCandidate4","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","candInfo","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","_ref34","_ref33","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","_ref37","_ref36","initCube","initMarkerNums","initDataset","setCandidates","traceItems","_dataset","isSkipLevel1","processType","helperLevel","setCandidatesLevel1","gameLevel","isAllWideSelected","getLevelNumFromFunctionName","loopNum","exclusiveCandidateLength","exclusiveCandidateLengthLevel5","exclusiveCandidateLengthLevel4","exclusiveCandidateLengthLevel3","exclusiveCandidateLengthLevel2","setSelectableA","setSelectableB","setSingleNumExclusiveCandidates","setExclusiveUnionA","setExclusiveUnionB","setSquareCandidates","setAssumptionTest","nLevel","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","_this$updateCandidate","updateCandidateOfTheCell","_this$updateRelatedCe","updateRelatedCells","singleNumValue","candidateTraceTmp","numSequence","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","_iteratorNormalCompletion37","_didIteratorError37","_iteratorError37","_step37","_iterator37","_this$updateCandidate3","_this$updateCandidate4","_this$updateRelatedCe3","_this$updateRelatedCe4","getMarkerIdxsFromCellIdx","_iteratorNormalCompletion38","_didIteratorError38","_iteratorError38","_step38","_iterator38","markerTraceTmp","_this$updateMarkerSta","updateMarkerStatus2Selectable","_this$updateMarkerSta2","initTraceItemCandidate","selectableCells","findSingleCandidateCellsB","_iteratorNormalCompletion39","_didIteratorError39","_iteratorError39","_step39","_iterator39","_this$updateCandidate5","_this$updateCandidate6","_this$updateRelatedCe5","_this$updateRelatedCe6","_iteratorNormalCompletion40","_didIteratorError40","_iteratorError40","_step40","_iterator40","_this$updateMarkerSta3","_this$updateMarkerSta4","_iteratorNormalCompletion41","_didIteratorError41","_iteratorError41","_step41","_iterator41","setSingleNumExclusiveCandidatesA","setSingleNumExclusiveCandidatesB","_this41","unionSizes","candNumMatrix","getCandidateNumMatrix","_iteratorNormalCompletion42","_didIteratorError42","_iteratorError42","_step42","_iterator42","_iteratorNormalCompletion43","_didIteratorError43","_iteratorError43","_step43","_iterator43","cellIndicesLength","_iteratorNormalCompletion44","_didIteratorError44","_iteratorError44","_step44","_loop4","candLengths","candidateCellIndices","countNumsInCandidateNumMatrix","unionCells","findExclusiveUnionA","console","log","_iteratorNormalCompletion45","_didIteratorError45","_iteratorError45","_step45","_iterator45","isInCellInfoArrayIgnoringRCBInfo","_this41$updateCandida","updateCandidates4UnionA","_this41$updateCandida2","_iteratorNormalCompletion46","_didIteratorError46","_iteratorError46","_step46","_iterator46","_this41$updateMarkerS","_this41$updateMarkerS2","_iterator44","_ret4","candIdxArray","_iteratorNormalCompletion47","_didIteratorError47","_iteratorError47","_step47","_iterator47","unionIdxs","numsUnion","getUnionNumbers","numArray","_iteratorNormalCompletion48","_didIteratorError48","_iteratorError48","_step48","_iterator48","_iteratorNormalCompletion49","_didIteratorError49","_iteratorError49","_step49","_iterator49","_iteratorNormalCompletion50","_didIteratorError50","_iteratorError50","_step50","_iterator50","extractCellInfoFromCandidate","cellLength","_iteratorNormalCompletion51","_didIteratorError51","_iteratorError51","_step51","_iterator51","unionCellArrayB","findExclusiveUnionB","_iteratorNormalCompletion52","_didIteratorError52","_iteratorError52","_step52","_iterator52","unionCellB","_this$updateCandidate7","updateCandidates4UnionB","_this$updateCandidate8","_iteratorNormalCompletion53","_didIteratorError53","_iteratorError53","_step53","_iterator53","_this$updateMarkerSta5","_this$updateMarkerSta6","targetCellInfos","_iteratorNormalCompletion54","_didIteratorError54","_iteratorError54","_step54","_iterator54","idxsUnion","getUnionIndices","_this42","squareNums","_iteratorNormalCompletion55","_didIteratorError55","_iteratorError55","_step55","_iterator55","rowcol","_iteratorNormalCompletion56","_didIteratorError56","_iteratorError56","_step56","_loop5","exclusiveSquareCandidates","isExclusiveSquare","_iteratorNormalCompletion57","_didIteratorError57","_iteratorError57","_step57","_iterator57","squareNum","getSquareTargetCells","squareCellInfoArray","findSquareCells","_iteratorNormalCompletion58","_didIteratorError58","_iteratorError58","_step58","_iterator58","squareCellInfo","isInExclusiveSquareCandidates","_this42$updateCandida","updateCandidates4Square","_this42$updateCandida2","_iterator56","_ret5","_this43","indexArray","_iteratorNormalCompletion59","_didIteratorError59","_iteratorError59","_step59","_iterator59","iRC","squareCellInfos","flipRowCol","_iteratorNormalCompletion60","_didIteratorError60","_iteratorError60","_step60","_iterator60","iSet","candidateRCIdxsArray","targetCellInfoSets","findAssumptionTest","_iteratorNormalCompletion61","_didIteratorError61","_iteratorError61","_step61","_iterator61","targetCellInfoSet","_iteratorNormalCompletion62","_didIteratorError62","_iteratorError62","_step62","_iterator62","_ref40","_ref39","_iteratorNormalCompletion63","_didIteratorError63","_iteratorError63","_step63","_iterator63","cInfo","inhibitedNum","assignRemovable2Candidates","assignAssumptionTest2Candidates","_this44","getNarrowCandidateNums","rectangles","getRectangleSet","_iteratorNormalCompletion64","_didIteratorError64","_iteratorError64","_step64","_iterator64","rectangle","getAssumptionTestCellInfo","rectangleSet","_loop6","pivotCellInfo","rowMemberCellInfos","colMemberCellInfos","_iteratorNormalCompletion65","_didIteratorError65","_iteratorError65","_step65","_loop7","rowCell","_iteratorNormalCompletion66","_didIteratorError66","_iteratorError66","_step66","_loop8","colCell","oppositeCellInfos","_iterator66","_iterator65","rectangleCellInfos","_this45","_iteratorNormalCompletion67","_didIteratorError67","_iteratorError67","_step67","_iterator67","_ref43","_ref42","aPair","counterPair","_iteratorNormalCompletion68","_didIteratorError68","_iteratorError68","_step68","_iterator68","_ref46","_ref45","pivotCell","oppositeCell","_iteratorNormalCompletion69","_didIteratorError69","_iteratorError69","_step69","_loop9","pNum","counterNums","isTwoArraysSame","_iterator69","_ret6","_iteratorNormalCompletion70","_didIteratorError70","_iteratorError70","_step70","_iterator70","markerTraceItem","markerInfoA","markerInfoB","targetTrace","getTraceItemsWithSelectables","_iteratorNormalCompletion71","_didIteratorError71","_iteratorError71","_step71","_iterator71","targetTraceItem","numTrace","_iteratorNormalCompletion72","_didIteratorError72","_iteratorError72","_step72","_iterator72","newCellInfo","isSelectableCellInfo","assignNum2NumMatrix","assignSelected2Candidates","_iteratorNormalCompletion73","_didIteratorError73","_iteratorError73","_step73","_iterator73","markerInfos4Trace","_Util$resetMarker","resetMarker","_Util$resetMarker2","isRemovableCellInfo","_iteratorNormalCompletion74","_didIteratorError74","_iteratorError74","_step74","_iterator74","isRemovable","assignRemoved2Candidates","_iteratorNormalCompletion75","_didIteratorError75","_iteratorError75","_step75","_iterator75","getSelectableIdx","_this$updateCandidate9","getTraceItemsWithRemovableWithoutSelectable","_iteratorNormalCompletion76","_didIteratorError76","_iteratorError76","_step76","_iterator76","_iteratorNormalCompletion77","_didIteratorError77","_iteratorError77","_step77","_iterator77","_iteratorNormalCompletion78","_didIteratorError78","_iteratorError78","_step78","_iterator78","isRemovable4erase","_i6","_iteratorNormalCompletion79","_didIteratorError79","_iteratorError79","_step79","_iterator79","cellInfo4num","_iteratorNormalCompletion80","_didIteratorError80","_iteratorError80","_step80","_iterator80","isWideExclusiveCandidate","assignCandidate2Candidates","excludingStatus","hasStatus","filterTraceItems","getRelatedCellInfo4unionA","_iteratorNormalCompletion81","_didIteratorError81","_iteratorError81","_step81","_iterator81","_iteratorNormalCompletion83","_didIteratorError83","_iteratorError83","_step83","_iterator83","_iteratorNormalCompletion82","_didIteratorError82","_iteratorError82","_step82","_iterator82","isCellAllWideRemoved","_iteratorNormalCompletion84","_didIteratorError84","_iteratorError84","_step84","_iterator84","_iteratorNormalCompletion86","_didIteratorError86","_iteratorError86","_step86","_iterator86","assignStatus","getRelatedCellInfo4unionB","removableTargetCellInfos","_i7","_iteratorNormalCompletion85","_didIteratorError85","_iteratorError85","_step85","_iterator85","_this46","counterDirection","squareIndices","rawRCIdxs","keyRCIdxs","unTargetCellInfos","_iteratorNormalCompletion87","_didIteratorError87","_iteratorError87","_step87","_iterator87","keyRCIdx","_iteratorNormalCompletion88","_didIteratorError88","_iteratorError88","_step88","_iterator88","_i8","assignExclusiveSquare2Candidates","_i9","_this47","singleCandidateCells","_iteratorNormalCompletion89","_didIteratorError89","_iteratorError89","_step89","_iterator89","_ref49","_ref48","_iteratorNormalCompletion90","_didIteratorError90","_iteratorError90","_step90","_loop10","_ref50","_ref51","cand","_iterator90","_ret7","_iteratorNormalCompletion91","_didIteratorError91","_iteratorError91","_step91","_iterator91","_this48","_iteratorNormalCompletion92","_didIteratorError92","_iteratorError92","_step92","_iterator92","_iteratorNormalCompletion93","_didIteratorError93","_iteratorError93","_step93","_iterator93","_ret8","_iteratorNormalCompletion94","_didIteratorError94","_iteratorError94","_step94","_iterator94","selectStatus","removeStatus","_iteratorNormalCompletion95","_didIteratorError95","_iteratorError95","_step95","_iterator95","isRemoved","relatedIndices","getRelatedIndicesBesidesItself","_iteratorNormalCompletion96","_didIteratorError96","_iteratorError96","_step96","_iterator96","_this$updateCandidate11","_this$updateCandidate12","_this$updateRelatedCe7","_this$updateRelatedCe8","_this49","having","_this50","isWideSelected","_this51","isCandidates","_this52","countWideRemoved","_this53","isWrong","isExclusiveDouble","isExclusiveTriple","candidateUpper","statusCandidateUpper","statusSelectable","statusRemovable","_this54","_iteratorNormalCompletion97","_didIteratorError97","_iteratorError97","_step97","_iterator97","_ref54","_ref53","_this55","isWideCandidate","candidateArray","_this56","_this57","isCandidateWithoutRemovable","_this58","filteredCellIndices","_this59","_iteratorNormalCompletion98","_didIteratorError98","_iteratorError98","_step98","_iterator98","_iteratorNormalCompletion99","_didIteratorError99","_iteratorError99","_step99","_iterator99","getRelatedCellIndicesByMarkerIdx","_iteratorNormalCompletion100","_didIteratorError100","_iteratorError100","_step100","_iterator100","_this$setSelectableA","setSelectableA2MarkerNums","_this$setSelectableA2","_this$setSelectableB","setSelectableB2MarkerNums","_this$setSelectableB2","_this60","relatedMarkerIdxs","_iteratorNormalCompletion101","_didIteratorError101","_iteratorError101","_step101","_iterator101","relatedMarkerIdx","relatedMarkerInfo","concerningCellInfos","getTargetCellIndicesByMarkerIdx","countNumInCandidates","assignSelectable2MarkerNums","selectableNum","getSelectableNum","_iteratorNormalCompletion102","_didIteratorError102","_iteratorError102","_step102","_iterator102","_this61","assignedNums","concernedCellIdxs","targetCellIdxs","isNumInCell","removableNums","_iteratorNormalCompletion103","_didIteratorError103","_iteratorError103","_step103","_iterator103","_iteratorNormalCompletion105","_didIteratorError105","_iteratorError105","_step105","_iterator105","_iteratorNormalCompletion104","_didIteratorError104","_iteratorError104","_step104","_iterator104","tmpMarkerInfo","assignExclusiveDouble2MarkerNums","assignExclusiveTriple2MarkerNums","doubleExclusiveCellIdxs","getWideCandidateNums","_iteratorNormalCompletion106","_didIteratorError106","_iteratorError106","_step106","_iterator106","unTargetIdxs","_iteratorNormalCompletion107","_didIteratorError107","_iteratorError107","_step107","_iterator107","targetCellInfos4nums2","isTwoIdxSetsSame","_iteratorNormalCompletion108","_didIteratorError108","_iteratorError108","_step108","_iterator108","selectableCellInfos","_iteratorNormalCompletion109","_didIteratorError109","_iteratorError109","_step109","_loop11","selectableCellInfo","removableCellIdxs","_iteratorNormalCompletion110","_didIteratorError110","_iteratorError110","_step110","_iterator110","_iterator109","oldStatus","newStatus","exclusive","_iteratorNormalCompletion111","_didIteratorError111","_iteratorError111","_step111","_iterator111","target","removingKeys","keyName","item","_iteratorNormalCompletion112","_didIteratorError112","_iteratorError112","_step112","_iterator112","exSquares","_this62","_iteratorNormalCompletion113","_didIteratorError113","_iteratorError113","_step113","_loop12","exSquare","tIdx","_iterator113","_ret9","x","max","_iteratorNormalCompletion114","_didIteratorError114","_iteratorError114","_step114","_iterator114","rcbTypes","s","isSubCell","functionName","str","numSet","numsArray","idxSet","charAt","prototype","apply","lines","convNull2Zero","join","data","_iteratorNormalCompletion115","_didIteratorError115","_iteratorError115","_step115","_iterator115","org","parse","filename","file","Blob","window","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","NumPanelBlock","blockClass","cellIdBase","cellClass","inhibitedClass","appearanceArray","onClickFunc","cellLabels","clsNames","getCellNumClass","cells","components_Cell","CellContainer","appearanceSubCellArray","appearanceSmallCell","onCellClick","handleCandidateCell","components_NumPanelBlock","Marker","getCells","cellLabel","_this$props2","rowColType","rowColClass","idBase","idBaseShort","rowColIdBase","abbreviateBlockId","wrapperId","wrapperClass","getBlockIdxFromBlockId","rowColNIndices","getBlkRowColIndicesFromIdx","cellIdBases","rowCols","nRC","BoardBlock","showFloating","handleNumInsert","handleMarkerCell","displayNums","blockWrapperId","getSingleCandidate","isSelectableCell","sudokuBoard_CellContainer","markOnClickFunc","sudokuBoard_Marker","SudokuBoard","numbers","getAppearanceMatrixFromCandidates","getAppearanceMatrixFromNumMatrix","blocks","getBlockIdByNum","isRegisteredArray","isDuplicatedArray","sudokuBoard_BoardBlock","NewGame","handleNewGame","SampleGames","sampleGameID","handleSampleGames","buttonSet","getSampleGameList","innerWrapperId","innerWrapperClass","buttons","_","buttonId","btnClsName","buttonTitle","getSampleGameButtonLabel","getSampleGameButtonTitle","Restart","handleRestart","SetUp","handleSetUp","ControlPanel","control_NewGame","control_SetUp","control_SampleGames","control_Restart","Check","getButton","handleCheck","myself","name","label","titleCaption","titleClassName","HelpModeButtons","handleHelpMode","buttonType","SingleNum","handleSingleNum","radios","labelDivClassName","labelClassName","toString","onChange","checked","MultipleNums","handleChange","event","handleMultipleNums","checkboxs","labelId","checkboxId","CandidateLevels","handleCandidateLevels","handleCandidates","getLevelNum","getCandidateLevelTitle","getCandidateLevelId","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkboxIsSkip","React","createRef","controlType","_activeSymbols","_disabledSymbols","_iconStyles","handleControls","activeSymbols","forwardLogo","fastForwardLogo","backwardLogo","rewindLogo","selectLogo","eraseLogo","disabledSymbols","forwardDisabledLogo","fastForwardDisabledLogo","backwardDisabledLogo","rewindDisabledLogo","selectDisabledLogo","eraseDisabledLogo","iconSizeSmall","iconSizeLarge","iconStyleSmall","width","height","iconStyleLarge","iconStyles","symbol","src","style","alt","getControlId","handleCheckbox","e","handleSkipIneffectiveStatus","currentTarget","setState","state","ref","HelpModePane","helpMode_MultipleNums","helpMode_SingleNum","helpMode_HelpModeButtons","CandidatesLevels","helpMode_Controls","MarkerButton","handleMarker","LangButton","handleLang","theOtherLang","flipLang","HelpButton","handleHelp","handleHelpButton","fileName","path","open","Indicator","HelperlPanel","helper_Indicator","helper_Check","helpMode_HelpModePane","helper_MarkerButton","helper_HelpButton","helper_LangButton","Footer","getCredit","Delete","activeCellIndex","handleDelete","isNumInMarker","Cancel","handleCancel","NumPanelControl","floating_Delete","floating_Cancel","NumPanel","handleNumPanelClick","floating_NumPanelControl","Floating","showNumPanel","handleModalClick","_ref","modal","closeOnModalClick","mousePosition","isModal","doShow","position","left","top","y","display","floating_NumPanel","ShowMessage","show","isShowMessage","message","handleMessageModalClick","closeLogo","App","calcAnswer","isMarkerOff","convertSelectable2Selected","addNumNStore","_this$state","prevState","addNum","checkDuplicate","checkCorrectness","countNumbers","_this$state2","prevNum","traceLength","updateCandidates","assignTruth2regMatrix","initRegInfo","initTraceItemNum","deleteNumNStore","deleteNum","isFilled","isComplete","isGameDone","addMarkerNStore","addMarker","_Util$setRelatedCandi","setRelatedCandidatesBySingleMark","_Util$setRelatedCandi2","_Util$setRelatedCandi3","setRelatedCandidatesByMultipleMarks","_Util$setRelatedCandi4","delMarker","newMarkerInfos","initTraceItemMarker","updateMarkerStatusNStore","getInfosFromMarkerNums","getRelatedMarkerIdxsFromCellIdx","getCorrespondingCellIdxs2MarkerIdx","relatedCellIdxs","_this$state3","duplcates","getElementById","blur","prevHelpMode","prevSingleNumValue","prevMultipleNums","stopCondition","doBackward","doInitSingleNum","doInitCandidates","doCheckDuplicates","_this$state4","_this$state5","handleSingleNumLevel","getSingleNumBtnId","doCandidates","_this$state6","initCandidates","_this$state7","_this$state8","index","_this$state9","cellAddress","getAttribute","isNaN","_this$state10","isMarkerAddress","markerId2Idx","doSelectSelectableCandidates","doForward","doEraseExclusiveColors","doBackwardNStore","_Util$eraseExclusiveC","eraseExclusiveColors","_Util$eraseExclusiveC2","selectSelectables","eraseRmovalbe","_this$state11","doEraseCandidates","isAll","stopCondtion","loopMax","datasetTmp","lastEvent","getNumInfoFromTraceItem","tmpCellInfo","getCandidateInfoFromTraceItem","traceBackCandidates","getMarkerInfoFromTraceItem","_Util$resetMarker3","_Util$resetMarker4","R1C1N12CellInfo","isLastCandidate","_Util$flipCandidateSt","flipCandidateStatus","_Util$flipCandidateSt2","targetMarkerIdx","concerningCellIdxs","flipMarkerStatus","handleStepBack","stepBack","handleClear","clear","origState","getInitialState","sampleLevel","sampleMatrix","getSampleMatrix","getRegisteredFlags","isAllFilled","resetNumMatrix","_this$state12","_this$state13","clientX","clientY","didUpdate","min","_this$state14","successMessages","ceil","random","countManualInputs","control_ControlPanel","handleSave","sudokuBoard_SudokuBoard","HelperPanel","components_Footer","floating_Floating","floating_ShowMessage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa7ebfad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forward.92aa02a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/forwardDisabled.aa89f039.svg\";","module.exports = __webpack_public_path__ + \"static/media/fastForward.03cf5ac0.svg\";","module.exports = __webpack_public_path__ + \"static/media/fastForwardDisabled.93c696f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward.715f6885.svg\";","module.exports = __webpack_public_path__ + \"static/media/backwardDisabled.bef06159.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewind.6e7212f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewindDisabled.4ef08094.svg\";","module.exports = __webpack_public_path__ + \"static/media/select.3aa9aeb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectDisabled.421f9320.svg\";","module.exports = __webpack_public_path__ + \"static/media/erase.a96425d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraseDisabled.52d4ff05.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.37f834c1.svg\";","import React, { Component } from \"react\";\n\n// import Config from \"../Config\";\n// import Util from \"../Util\";\n\nimport \"../css/cell.css\";\nimport \"../css/cellColor.css\";\n\nclass Cell extends Component {\n  render() {\n    const { cellId, num, lastCandidate, clsName, onClick } = this.props;\n\n    return (\n      <div\n        id={cellId}\n        className={clsName}\n        data-num={lastCandidate}\n        onClick={onClick}\n      >\n        <span id={cellId + \"span\"}>{num}</span>\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","class Config {\n  static lang = {\n    en: \"en\",\n    ja: \"ja\"\n  };\n\n  static size = 9;\n  static sizeB = 3;\n  static numCells = Math.pow(Config.size, 2);\n\n  static maxLoopNum = 20;\n  static maxUnionSize = 4;\n  static maxSquareNum = 4;\n\n  // static footerClassName = \"App-footer\";\n\n  static traceTypes = {\n    numMatrix: \"numMatrix\",\n    candidate: \"candidate\",\n    marker: \"marker\"\n  };\n\n  static traceElementTypes = Object.assign(\n    { operation: \"operation\" },\n    Config.traceTypes\n  );\n\n  static operationTypes = {\n    manual: \"manual\",\n    auto: \"auto\"\n  };\n\n  static candidateTypes = {\n    displayCandidates: \"displayCandidates\",\n    removeByInsertedNum: \"removeByInsertedNum\",\n    singleCandidate: \"singleCandidate\",\n    singleExclusive: \"singleExclusive\",\n    multipleExclusive: \"multipleExclusive\",\n    square: \"square\",\n    assumptionTest: \"assumptionTest\"\n  };\n\n  static candidateLevelTypes = {\n    level0: Config.candidateTypes.displayCandidates,\n    level1: Config.candidateTypes.removeByInsertedNum,\n    level2: Config.candidateTypes.singleCandidate,\n    level3: Config.candidateTypes.singleExclusive,\n    level4: Config.candidateTypes.multipleExclusive,\n    level5: Config.candidateTypes.square,\n    level6: Config.candidateTypes.assumptionTest\n  };\n\n  static candidateLevelTypesArray = [\n    Config.candidateTypes.displayCandidates,\n    Config.candidateTypes.removeByInsertedNum,\n    Config.candidateTypes.singleCandidate,\n    Config.candidateTypes.singleExclusive,\n    Config.candidateTypes.multipleExclusive,\n    Config.candidateTypes.square,\n    Config.candidateTypes.assumptionTest\n  ];\n\n  static stepByStepLevels = [\n    Config.candidateLevelTypes.level2,\n    Config.candidateLevelTypes.level3,\n    Config.candidateLevelTypes.level4,\n    Config.candidateLevelTypes.level5,\n    Config.candidateLevelTypes.level6\n  ];\n\n  static candidateLevels = [\n    \"level0\",\n    \"level1\",\n    \"level2\",\n    \"level3\",\n    \"level4\",\n    \"level5\",\n    \"level6\"\n  ];\n\n  static restrictionTypes = {\n    row: \"row\",\n    column: \"col\",\n    col: \"col\",\n    block: \"blk\",\n    blk: \"blk\"\n  };\n\n  static restrictionTypesShort = {\n    row: \"r\",\n    r: \"r\",\n    column: \"c\",\n    col: \"c\",\n    c: \"c\",\n    block: \"b\",\n    blk: \"b\",\n    b: \"b\"\n  };\n\n  static restrictionTypesStraightArray = [\"row\", \"col\"];\n  static restrictionTypesStraightShortArray = [\"r\", \"c\"];\n  static restrictionTypesArray = [\n    ...Config.restrictionTypesStraightArray,\n    \"blk\"\n  ];\n\n  static invBRC = {\n    b: Config.restrictionTypes.blk,\n    r: Config.restrictionTypes.row,\n    c: Config.restrictionTypes.col\n  };\n\n  static mode = {\n    set: \"set\",\n    play: \"play\"\n  };\n\n  static helpMode = {\n    none: \"none\",\n    singleNum: \"singleNum\",\n    candidates: \"candidates\",\n    both: \"both\",\n    multipleNums: \"multipleNums\"\n  };\n\n  static helpModeArray4display = [\n    Config.helpMode.singleNum,\n    Config.helpMode.candidates\n  ];\n\n  static helpModeArray4displayOnMultipleNums = [\n    Config.helpMode.multipleNums,\n    Config.helpMode.candidates\n  ];\n\n  static helpModeArray = [\n    ...Config.helpModeArray4display,\n    Config.helpMode.none\n  ];\n\n  static updateHelpModes = [\n    ...Config.helpModeArray4display,\n    Config.helpMode.both,\n    Config.helpMode.multipleNums\n  ];\n\n  static checkMode = {\n    none: \"none\",\n    duplicates: \"duplicates\",\n    correctness: \"correctness\"\n  };\n\n  static checkModeArray = [\n    Config.checkMode.duplicates,\n    Config.checkMode.correctness\n  ];\n\n  static processTypes = {\n    insertion: \"insertion\",\n    candidates: \"candidates\",\n    singleNum: \"singleNum\"\n  };\n\n  static panelIds = {\n    sudokuBoard: \"sudokuBoard\",\n    block: \"block\",\n    cellContainerSuffix: \"Container\",\n    control: \"controlPanel\",\n    helper: \"helperPanel\",\n\n    numPanelContainer: \"numPanelContainer\",\n    numPanelWrapper: \"numPanelWrap\",\n    numPanel: \"numPanel\",\n    numPanelCell: \"N\",\n    numPanelControl: \"numPanelControl\",\n    messageWrapper: \"messageWrap\",\n\n    footer: \"footer\",\n    footerCredit: \"footerCredit\",\n\n    textForm: \"textForm\"\n  };\n\n  static panelClassNames = {\n    block: \"block\",\n    subBlock: \"subBlock\",\n    cell: \"cell\",\n    cellContainer: \"cellContainer\",\n    smallCell: \"smallCell\",\n    subCell: \"subCell\",\n    cellNum: \"num\",\n    control: \"controlPanel\",\n    helper: \"controlPanel\",\n    numPanelWrapper: \"float-wrap\",\n    messageWrapper: \"float-wrap-M\",\n\n    footer: \"App-footer\",\n    footerCredit: \"footerCredit\",\n\n    textForm: \"textForm\"\n  };\n\n  static panelTitles = {\n    header: {\n      en: \"Number Place Helper\",\n      ja: \"ナンプレ ヘルパー\"\n    },\n    helper: {\n      en: \"Helper\",\n      ja: \"ヘルパーパネル\"\n    },\n    control: {\n      en: \"Game Control\",\n      ja: \"ゲームパネル\"\n    },\n    textForm: \"Game Data\"\n  };\n\n  static buttonIds = {\n    // Game control //\n    newGame: \"newGame\",\n    sampleGameWrapper: \"sampleGameWrapper\",\n    sampleGameInnerWrapper: \"sampleGameInnerWrapper\",\n    sampleGame: \"sampleGame\",\n    setup: \"setup\",\n    save: \"save\",\n    restart: \"restart\",\n\n    // Helper //\n    check: \"check\",\n    checkWrapper: \"checkWrapper\",\n\n    singleNum: \"singleNumWrapper\",\n    singleNumRadio: \"radio\",\n    singleNumButton: \"singleNumButton\",\n\n    multipleNums: \"multipleNums\",\n    multipleNumsLabel: \"multipleNumsLabel\",\n    multipleNumsCheckbox: \"multipleNumsCheckbox\",\n\n    candidateWrapper: \"candidateWrapper\",\n    candidates: \"candidates\",\n    candidateLevels: \"candidateLevels\",\n\n    controlButtonWrapper: \"controlButtonWrapper\",\n    controls: \"controls\",\n    controlLabelSkipIneffective: \"controlLabelSkipIneffective\",\n\n    marker: \"marker\",\n\n    lang: \"lang\",\n    help: \"help\",\n\n    helperLableWrapper: \"helperLableWrapper\",\n    indicatorWrapper: \"indicatorWrapper\",\n    indicator: \"indicator\",\n\n    // Number Panel //\n    delete: \"delete\",\n    cancel: \"cancel\"\n  };\n\n  static buttonClassNames = {\n    // Game control //\n    newGame: \"controlButton\",\n\n    sampleGameFrame: \"controlButtonWrapper controlButton\",\n    sampleGameWrapper: \"sampleGameWrapper\",\n    sampleGameInnerWrapper: \"sampleGameInnerWrapper\",\n    sampleGameButton: \"sampleGameButton\",\n\n    setup: \"controlButton\",\n    save: \"controlButton\",\n    restart: \"controlButton\",\n\n    // Helper //\n    check: \"controlButton\",\n    checkTitle: \"controlTitle\",\n    checkButton: \"sampleGameButton\",\n\n    singleNumTitle: \"controlTitle\",\n    singleNumContainer: \"controlButtonWrapper controlButton\",\n    singleNumRadioWrapper: \"radioWrapper\",\n    singleNumButtonWrapper: \"candidateButtonWrapper\",\n    singleNumDisabled: \"inaccessible\",\n    singleNumDone: \"allDone\",\n    singleNumExceeding: \"exceeding\",\n    singleNumButton: \"sampleGameButton\",\n\n    multipleNumsContainer: \"controlButtonWrapper controlButton\",\n    multipleNumsCheckBoxWrapper: \"checkBoxWrapper\",\n    multipleNumsDisabled: \"inaccessible\",\n    multipleNumsDone: \"allDone\",\n    multipleNumsExceeding: \"exceeding\",\n\n    candidateTitle: \"controlTitle\",\n    candidateContainer: \"controlButtonWrapper controlButton\",\n    candidateButtonWrapper: \"candidateButtonWrapper\",\n    candidates: \"controlButton\",\n    candidateDisabled: \"inaccessible\",\n    candidateButton: \"sampleGameButton\",\n\n    controlSkipIneffective: \"controlCheckbox\",\n    marker: \"controlButton\",\n    lang: \"controlButton\",\n    help: \"controlButton\",\n\n    // Number Panel //\n    delete: \"controlButton\",\n    cancel: \"controlButton\"\n  };\n\n  static buttonStatus = {\n    waiting: \"waiting\",\n    active: \"active\",\n    disabled: \"disabled\"\n  };\n\n  static buttonTitles = {\n    // Game control //\n    newGame: {\n      en: \"New Game\",\n      ja: \"新しいゲーム\"\n    },\n    setup: {\n      en: \"Set & Play\",\n      ja: \"ゲームスタート\"\n    },\n    edit: {\n      en: \"Edit Game\",\n      ja: \"ゲームを修正する\"\n    },\n    sampleGames: {\n      en: \"Sample Games\",\n      ja: \"サンプルゲーム\"\n    },\n    restart: {\n      en: \"Restart\",\n      ja: \"再スタート\"\n    },\n    save: \"Save\",\n\n    // Helper //\n    check: \"Check\",\n    singleNum: \"Single Number\",\n    candidates: \"Candidates\",\n    controls: \"Controls\",\n    marker: {\n      en: \"Marker\",\n      ja: \"マーカー\"\n    },\n    help: {\n      en: \"Help\",\n      ja: \"ヘルプ\"\n    },\n\n    // Number Panel //\n    delete: \"Delete\",\n    cancel: \"Cancel\"\n  };\n\n  static langButtonTitles = {\n    en: \"English\",\n    ja: \"日本語\"\n  };\n\n  static helpModeButtonIds = {\n    container: \"helpModeContainer\",\n    wrapper: \"helpModeWrapper\",\n    title: \"helpModeTitle\",\n    none: \"cancelButton\",\n    candidates: \"candidatesButton\",\n    singleNum: \"singleNumButton\",\n    multipleNums: \"singleNumButton\"\n  };\n\n  static helpModeButtonClassNames = {\n    container: \"controlButtonWrapper controlButton\",\n    wrapper: \"candidateButtonWrapper\",\n    title: \"controlTitle\",\n    none: \"sampleGameButton\",\n    candidates: \"sampleGameButton\",\n    singleNum: \"sampleGameButton\",\n    multipleNums: \"sampleGameButton\"\n  };\n\n  static formNames = {\n    skipIneffective: \"skipIneffective\"\n  };\n\n  static candidateControls = {\n    reset: \"reset\",\n    backward: \"backward\",\n    forward: \"forward\",\n    fastForward: \"fastForward\",\n    select: \"select\",\n    erase: \"erase\"\n  };\n\n  static candidateActiveControls = {\n    singleNum: [\n      Config.candidateControls.reset,\n      Config.candidateControls.backward,\n      Config.candidateControls.forward,\n      Config.candidateControls.fastForward,\n      Config.candidateControls.select\n    ],\n    candidates: [Object.keys(Config.candidateControls)]\n  };\n\n  static candidateControlArray = [\n    Config.candidateControls.reset,\n    Config.candidateControls.backward,\n    Config.candidateControls.forward,\n    Config.candidateControls.fastForward,\n    Config.candidateControls.select,\n    Config.candidateControls.erase\n  ];\n\n  static candidateButtonGroupNames = [\"levels\", \"controls\"];\n\n  static candidateButtons = [\n    ...Config.candidateLevels,\n    ...Config.candidateControlArray\n  ];\n\n  static candidateStatus = {\n    assigned: \"assigned\",\n    selected: \"selected\",\n    selectable: \"selectable\",\n    candidate: \"candidate\",\n    exclusiveSingle: \"exclusiveSingleCandidate\",\n    exclusiveDouble: \"exclusiveDoubleCandidate\",\n    exclusiveTriple: \"exclusiveTripleCandidate\",\n    exclusiveQuadruple: \"exclusiveQuadrupleCandidate\",\n    exclusiveSquare: \"exclusiveSquareCandidate\",\n\n    assumptionTest: \"assumptionTest\",\n\n    removable: \"removable\",\n    removed: \"removed\",\n\n    shadowed: \"shadowed\",\n    weaklyShadowed: \"weaklyShadowed\",\n    inhibited: \"inhibited\"\n  };\n\n  static exclusiveMultiples4marker = [\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple\n  ];\n\n  static exclusiveTypes4marker = [\n    Config.candidateStatus.exclusiveSingle,\n    ...Config.exclusiveMultiples4marker\n  ];\n\n  static exclusiveMultiples = [\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple,\n    Config.candidateStatus.exclusiveQuadruple\n  ];\n\n  static narrowExclusiveStatuses = [\n    Config.candidateStatus.exclusiveSingle,\n    ...Config.exclusiveMultiples\n  ];\n\n  static exclusiveStatuses = [\n    ...Config.narrowExclusiveStatuses,\n    Config.candidateStatus.exclusiveSquare,\n    Config.candidateStatus.assumptionTest\n  ];\n\n  static wideExclusiveStatuses = [\n    Config.candidateStatus.selectable,\n    ...Config.exclusiveStatuses\n  ];\n\n  static selectedList = [\n    Config.candidateStatus.assigned,\n    Config.candidateStatus.selected\n  ];\n\n  static wideSelectedList = [\n    ...Config.selectedList,\n    Config.candidateStatus.selectable\n  ];\n\n  static wideRemovedList = [\n    Config.candidateStatus.removable,\n    Config.candidateStatus.removed\n  ];\n\n  static narrowCandidateList = [\n    Config.candidateStatus.candidate,\n    Config.candidateStatus.exclusiveSingle,\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple,\n    Config.candidateStatus.exclusiveQuadruple,\n    Config.candidateStatus.exclusiveSquare,\n    Config.candidateStatus.assumptionTest\n  ];\n\n  static markerRelatedExclusiveTypes = [\n    Config.candidateStatus.selectable,\n    Config.candidateStatus.exclusiveSingle,\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple\n  ];\n\n  static candidateList = [\n    ...Config.narrowCandidateList,\n    Config.candidateStatus.selectable\n  ];\n\n  static wideCandidateList = [\n    Config.candidateStatus.removable,\n    ...Config.candidateList\n  ];\n\n  static registered = \"registered\";\n  static duplicated = \"duplicated\";\n\n  static checkButtonLabels = {\n    title: {\n      en: \"Insertion Check\",\n      ja: \"入力チェック\"\n    },\n    none: {\n      en: \"Cancel\",\n      ja: \"キャンセル\"\n    },\n    duplicates: {\n      en: \"Duplicate\",\n      ja: \"重複\"\n    },\n    correctness: {\n      en: \"Correctness\",\n      ja: \"不正解\"\n    }\n  };\n\n  static checkTitleCaptions = {\n    none: {\n      en: \"Cancel Check Function\",\n      ja: \"チェック機能をオフにする\"\n    },\n    duplicates: {\n      en: \"Check Duplicates all the time\",\n      ja: \"重複を常時チェック\"\n    },\n    correctness: {\n      en: \"Check Correctness all the time\",\n      ja: \"正解と一致しない入力を常時チェック\"\n    }\n  };\n\n  static helpModeButtonLabels = {\n    title: {\n      en: \"Helper Functions\",\n      ja: \"ヘルパー機能\"\n    },\n    none: {\n      en: \"Cancel\",\n      ja: \"キャンセル\"\n    },\n    singleNum: {\n      en: \"Single Num\",\n      ja: \"単一数表示\"\n    },\n    multipleNums: {\n      en: \"Multi Nums\",\n      ja: \"複数数表示\"\n    },\n    candidates: {\n      en: \"Candidates\",\n      ja: \"候補表示\"\n    },\n    skipIneffective: {\n      en: \"Skip ineffective exclusives\",\n      ja: \"無効な排他的候補を非表示\"\n    }\n  };\n\n  static helpModeCaptions = {\n    none: {\n      en: \"Cancel the current helper function\",\n      ja: \"ヘルパー機能をオフにする\"\n    },\n    singleNum: {\n      en: \"Shadow numbers other than the selected number\",\n      ja: \"選択された数字のみ表示\"\n    },\n    candidates: {\n      en: \"Show candidates of cells\",\n      ja: \"候補の表示\"\n    },\n    both: {\n      en: \"Combine the single number and the candidates functions\",\n      ja: \"単一数表示と候補表示の同時利用\"\n    },\n    multipleNums: {\n      en: \"Show selected numbers with candidates\",\n      ja: \"複数数表示と候補表示の同時利用\"\n    }\n  };\n\n  static singleNumLevels = [\"level0\", \"level1\", \"level2\", \"level3\"];\n\n  static singleNumCaptions = {\n    level0: {\n      en: \"Shadow numbers other than the selected number\",\n      ja: \"選択した数字以外を目立たなくする\"\n    },\n    level1: {\n      en: \"Shadow cells inhibited by the number\",\n      ja: \"すでに盤上にある数字によって選択不可能なセルに影をつける\"\n    },\n    level2: {\n      en: \"Highlight selectable cells\",\n      ja: \"選択可能なセルを目立たせる\"\n    },\n    level3: {\n      en: \"Shadow cells constrained by the candidates in other blocks\",\n      ja: \"排他的な候補によって選択不可能なセルに影をつける\"\n    }\n  };\n\n  static candidateLevelCaptions = {\n    level0: {\n      en: \"Show a candidate panel in each cell\",\n      ja: \"候補を表示する\"\n    },\n    level1: {\n      en: \"Remove candidates inhibited by numbers on other cells\",\n      ja: \"すでに盤上にある数字によって選択不可能な数字を候補から削除する\"\n    },\n    level2: {\n      en: \"Highlight selectable candidates\",\n      ja: \"選択可能な候補を目立たせる\"\n    },\n    level3: {\n      en:\n        \"Highlight candidates constraining other cells by the selected single number\",\n      ja: \"排他的な単一数候補によって選択不可能なセルからその数字を削除する\"\n    },\n    level4: {\n      en: \"Highlight candidates constraining other cells by a few numbers\",\n      ja: \"複数の数による排他的候補を目立たせる\"\n    },\n    level5: {\n      en: \"Highlight square candidates\",\n      ja: \"井桁候補を目立たせる\"\n    },\n    level6: {\n      en: \"Highlight assumption-test candidates\",\n      ja: \"仮定-試験によって候補から除外される数字を表示する\"\n    }\n  };\n\n  static constrolIconCaptions = {\n    reset: {\n      en: \"Reset\",\n      ja: \"これまでの操作を無効にする\"\n    },\n    backward: {\n      en: \"Backward\",\n      ja: \"ヘルパー機能による表示をひとつ前に戻す\"\n    },\n    forward: {\n      en: \"Forward\",\n      ja: \"ヘルパー機能を進める\"\n    },\n    fastForward: {\n      en: \"Fast forward\",\n      ja: \"ヘルパー機能を可能な限り進める\"\n    },\n    select: {\n      en: \"Select all selectable candidates\",\n      ja: \"選択可能なセルを全て選択する\"\n    },\n    erase: {\n      en: \"Remove colors of exclusive candidates\",\n      ja: \"ヘルパー機能による色つけを解除する\"\n    }\n  };\n\n  static candidateControlIconSizes = {\n    small: \"14px\",\n    large: \"16px\"\n  };\n\n  static backwardStopCondition = {\n    wrongInsertion: \"wrongInsertion\",\n    numInsertion: \"numInsertion\"\n  };\n\n  static result = {\n    passed: \"passed\",\n    failed: \"failed\"\n  };\n\n  static messages = {\n    success: [\n      \"Complete!\",\n      \"Perfect!\",\n      \"Excellent!\",\n      \"Incredible!\",\n      \"Phenomenal!\",\n      \"Well done!\",\n      \"Good job!\",\n      \"Great!\",\n      \"Awesome!\",\n      \"Wonderful!\",\n      \"Bravo!\",\n      \"Amazing!\",\n      \"You did it!\",\n      \"You're genius!\"\n    ],\n    failure: \"There are some duplicates.\"\n  };\n\n  static alertMessages = {\n    duplicates: \"There are some duplicates.\",\n    deadEnd: \"A cell with no candidates.\",\n    wrongQuestion: \"This is insoluble.\"\n  };\n\n  static helpPath = \"./help/\";\n\n  static helpFiles = {\n    en: \"help_en.html\",\n    ja: \"help_ja.html\"\n  };\n\n  static dummyMatrix = [\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [4, 5, 6, 7, 8, 9, 1, 2, 3],\n    [7, 8, 9, 1, 2, 3, 4, 5, 6],\n    [2, 3, 4, 5, 6, 7, 8, 9, 1],\n    [5, 6, 7, 8, 9, 1, 2, 3, 4],\n    [8, 9, 1, 2, 3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7, 8, 9, 1, 2],\n    [6, 7, 8, 9, 1, 2, 3, 4, 5],\n    [9, 1, 2, 3, 4, 5, 6, null, null]\n  ];\n\n  static sampleGameClasses = {\n    beginner: \"beginner\",\n    easy: \"easy\",\n    medium: \"medium\",\n    hard: \"hard\",\n    xtreme: \"xtreme\"\n  };\n\n  static sampleGameClassList = [\n    Config.sampleGameClasses.beginner,\n    Config.sampleGameClasses.easy,\n    Config.sampleGameClasses.medium,\n    Config.sampleGameClasses.hard,\n    Config.sampleGameClasses.xtreme\n  ];\n\n  static sampleGameTitles = {\n    beginner: {\n      en: \"Beginner\",\n      ja: \"初心者\"\n    },\n    easy: {\n      en: \"Easy\",\n      ja: \"初級\"\n    },\n    medium: {\n      en: \"Medium\",\n      ja: \"中級\"\n    },\n    hard: {\n      en: \"Hard\",\n      ja: \"上級\"\n    },\n    xtreme: {\n      en: \"Extreme\",\n      ja: \"超上級\"\n    }\n  };\n\n  static sampleGames = {\n    [Config.sampleGameClassList[0]]: [\n      // {\n      //   credit: {\n      //     publisher: \"Byakuyasyobo\",\n      //     author: \"Akihiko Takise\",\n      //     book: \"Syokyu NumPra 12 Gatsugo\",\n      //     question: \"Q1\"\n      //   },\n      //   matrix: [\n      //     [8, 0, 0, 0, 0, 1, 0, 0, 6],\n      //     [0, 0, 0, 9, 0, 6, 0, 3, 0],\n      //     [0, 0, 0, 3, 4, 2, 1, 0, 0],\n      //     [0, 7, 4, 0, 0, 0, 2, 1, 9],\n      //     [0, 0, 8, 0, 5, 0, 4, 0, 0],\n      //     [9, 1, 3, 0, 0, 0, 8, 6, 0],\n      //     [0, 0, 5, 7, 1, 4, 0, 0, 0],\n      //     [0, 2, 0, 8, 0, 3, 0, 0, 0],\n      //     [1, 0, 0, 2, 0, 0, 0, 0, 4]\n      //   ]\n      // },\n      {\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [8, 0, 0, 0, 0, 1, 0, 0, 6],\n          [0, 0, 0, 9, 0, 6, 0, 3, 0],\n          [0, 0, 0, 3, 4, 2, 1, 0, 0],\n          [0, 7, 4, 0, 0, 0, 2, 1, 9],\n          [0, 0, 8, 0, 5, 0, 4, 0, 0],\n          [9, 1, 3, 0, 0, 0, 8, 6, 0],\n          [0, 0, 5, 7, 1, 4, 0, 0, 0],\n          [0, 2, 0, 8, 0, 3, 0, 0, 0],\n          [1, 0, 0, 2, 0, 0, 0, 0, 4]\n        ]\n      },\n      // Syokyu NumPre 12 Gatugo Q252\n      // [Config.sampleGameList[0]]:\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q252\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q252\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q252\"\n          }\n        },\n        matrix: [\n          [5, 0, 1, 0, 0, 0, 7, 0, 0],\n          [0, 0, 0, 0, 0, 3, 0, 0, 0],\n          [6, 0, 9, 0, 0, 7, 1, 0, 4],\n          [0, 0, 0, 0, 1, 0, 4, 3, 0],\n          [0, 0, 0, 7, 0, 6, 0, 0, 0],\n          [0, 2, 8, 0, 9, 0, 0, 0, 0],\n          [4, 0, 5, 6, 0, 0, 2, 0, 7],\n          [0, 0, 0, 9, 0, 0, 0, 0, 0],\n          [0, 0, 2, 0, 0, 0, 5, 0, 1]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q11\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q11\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q11\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 8, 0, 6, 0, 0, 3],\n          [0, 0, 2, 9, 0, 0, 7, 4, 0],\n          [0, 7, 0, 0, 4, 0, 0, 6, 0],\n          [6, 4, 0, 0, 1, 0, 0, 0, 7],\n          [0, 0, 7, 4, 0, 3, 1, 0, 0],\n          [5, 0, 0, 0, 6, 0, 0, 3, 2],\n          [0, 3, 0, 0, 2, 0, 0, 8, 0],\n          [0, 9, 1, 0, 0, 7, 6, 0, 0],\n          [2, 0, 0, 5, 0, 1, 0, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q200\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q200\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q200\"\n          }\n        },\n        matrix: [\n          [1, 0, 0, 0, 0, 0, 0, 0, 4],\n          [0, 9, 0, 8, 0, 2, 0, 0, 0],\n          [0, 0, 3, 0, 0, 9, 1, 0, 0],\n          [0, 6, 0, 0, 5, 0, 4, 1, 0],\n          [0, 0, 0, 3, 0, 6, 0, 0, 0],\n          [0, 8, 5, 0, 4, 0, 0, 3, 0],\n          [0, 0, 6, 5, 0, 0, 2, 0, 0],\n          [0, 0, 0, 6, 0, 7, 0, 5, 0],\n          [2, 0, 0, 0, 0, 0, 0, 0, 7]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Chukyu NumPra 2 Gatsugo\",\n        //   question: \"Q7\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q7\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"中級ナンプレ 2月号\",\n            question: \"Q7\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 6, 0, 0, 0, 1],\n          [0, 0, 1, 7, 0, 2, 0, 0, 0],\n          [0, 6, 0, 5, 0, 4, 0, 0, 0],\n          [0, 3, 2, 0, 0, 0, 8, 7, 0],\n          [9, 0, 0, 0, 5, 0, 0, 0, 6],\n          [0, 4, 5, 0, 0, 0, 3, 2, 0],\n          [0, 0, 0, 1, 0, 6, 0, 8, 0],\n          [0, 0, 0, 9, 0, 7, 2, 0, 0],\n          [3, 0, 0, 0, 8, 0, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[1]]: [\n      // {\n      //   credit: \"Tyukyu Numpla Feburary Q251\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 3, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 6, 0, 8, 0, 0],\n      //     [0, 8, 0, 5, 0, 2, 0, 4, 0],\n      //     [0, 0, 5, 0, 0, 3, 2, 0, 0],\n      //     [9, 2, 0, 0, 0, 0, 0, 3, 1],\n      //     [0, 0, 1, 4, 0, 0, 6, 0, 0],\n      //     [0, 3, 0, 9, 0, 7, 0, 6, 0],\n      //     [0, 0, 7, 0, 8, 0, 3, 0, 0],\n      //     [0, 0, 0, 0, 1, 0, 0, 0, 0]\n      //   ]\n      // },\n      // // Pocket sudoku 11 joukyuuhen Q1\n      // [Config.sampleGameList[1]]: {\n      // [Config.sampleGameList[1]]: {\n      //   {\n      //     credit: \"Tyukyu Numpla Feburary Q1\",\n      //     matrix: [\n      //       [0, 5, 0, 2, 0, 6, 0, 1, 0],\n      //       [3, 0, 0, 0, 4, 0, 0, 0, 6],\n      //       [0, 0, 2, 0, 0, 0, 0, 0, 0],\n      //       [9, 0, 0, 0, 8, 0, 0, 0, 5],\n      //       [0, 6, 0, 9, 7, 5, 0, 2, 0],\n      //       [2, 0, 0, 0, 6, 0, 0, 0, 1],\n      //       [0, 0, 0, 0, 0, 0, 7, 0, 0],\n      //       [1, 0, 0, 0, 5, 0, 0, 0, 9],\n      //       [0, 9, 0, 7, 0, 3, 0, 6, 0]\n      //     ]\n      //   }\n      {\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q1\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 0, 8, 3],\n          [0, 0, 1, 4, 0, 0, 0, 0, 0],\n          [0, 3, 0, 9, 0, 0, 5, 0, 0],\n          [0, 5, 7, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 2, 0, 6, 0],\n          [0, 0, 0, 0, 7, 0, 1, 0, 4],\n          [0, 0, 4, 0, 0, 7, 0, 0, 2],\n          [3, 0, 0, 0, 6, 0, 0, 0, 0],\n          [5, 0, 0, 0, 0, 8, 9, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q1\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 9, 7, 0],\n          [0, 0, 0, 0, 0, 0, 3, 8, 0],\n          [0, 0, 0, 9, 2, 0, 0, 0, 0],\n          [0, 0, 0, 7, 5, 0, 0, 9, 8],\n          [5, 6, 0, 0, 0, 0, 0, 3, 7],\n          [7, 3, 0, 0, 4, 8, 0, 0, 0],\n          [0, 0, 0, 0, 6, 9, 0, 0, 0],\n          [0, 7, 2, 0, 0, 0, 0, 0, 0],\n          [0, 8, 5, 0, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q2\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q2\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q2\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 2, 7, 0, 0, 0, 4],\n          [0, 0, 8, 0, 0, 0, 2, 0, 0],\n          [0, 5, 0, 0, 1, 0, 9, 0, 0],\n          [1, 0, 0, 0, 0, 0, 0, 5, 6],\n          [4, 0, 3, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 2, 0],\n          [0, 9, 6, 0, 0, 0, 0, 0, 3],\n          [0, 0, 0, 5, 0, 8, 0, 0, 0],\n          [8, 0, 0, 1, 0, 0, 6, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Pocket sudoku 11 jokyuhen Q11\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q11\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q11\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q11\"\n          }\n        },\n        matrix: [\n          [1, 0, 0, 7, 0, 0, 0, 6, 0],\n          [0, 7, 0, 0, 1, 0, 0, 0, 4],\n          [0, 0, 3, 0, 0, 2, 0, 0, 0],\n          [3, 0, 0, 5, 0, 0, 1, 0, 0],\n          [0, 2, 0, 0, 8, 0, 0, 7, 0],\n          [0, 0, 6, 0, 0, 3, 0, 0, 8],\n          [0, 0, 0, 4, 0, 0, 3, 0, 0],\n          [5, 0, 0, 0, 6, 0, 0, 1, 0],\n          [0, 1, 0, 0, 0, 8, 0, 0, 2]\n        ]\n      },\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q3\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q3\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q3\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q3\"\n          }\n        },\n        matrix: [\n          [0, 1, 0, 0, 0, 5, 0, 0, 0],\n          [0, 0, 5, 0, 2, 0, 3, 0, 4],\n          [0, 0, 0, 6, 0, 0, 0, 8, 0],\n          [5, 0, 0, 0, 7, 0, 4, 0, 0],\n          [0, 9, 0, 0, 0, 0, 0, 1, 0],\n          [0, 0, 2, 0, 5, 0, 0, 0, 6],\n          [0, 6, 0, 0, 0, 8, 0, 0, 0],\n          [8, 0, 7, 0, 3, 0, 2, 0, 0],\n          [0, 0, 0, 7, 0, 0, 0, 9, 0]\n        ]\n      },\n      {\n        // // credit: \"NumPra premium Zeus Q62\",\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q62\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q62\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q62\"\n          }\n        },\n        matrix: [\n          [0, 0, 2, 0, 7, 0, 6, 0, 0],\n          [0, 0, 0, 9, 0, 3, 0, 0, 0],\n          [0, 0, 5, 0, 0, 0, 3, 0, 1],\n          [9, 8, 0, 0, 0, 0, 0, 1, 0],\n          [0, 0, 0, 3, 0, 0, 0, 0, 7],\n          [0, 0, 0, 6, 4, 0, 0, 5, 0],\n          [0, 0, 1, 0, 0, 0, 7, 0, 2],\n          [0, 0, 0, 0, 0, 5, 0, 0, 0],\n          [4, 0, 0, 0, 0, 8, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[2]]: [\n      {\n        // // credit: \"Pocket sudoku 11 jokyuhen Q54\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q54\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q54\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q54\"\n          }\n        },\n        matrix: [\n          [0, 1, 0, 0, 3, 0, 0, 0, 8],\n          [4, 0, 0, 6, 0, 0, 0, 2, 0],\n          [0, 0, 9, 0, 0, 0, 5, 0, 0],\n          [0, 7, 0, 0, 0, 5, 0, 0, 0],\n          [1, 0, 0, 0, 8, 0, 0, 0, 3],\n          [0, 0, 0, 4, 0, 0, 0, 7, 0],\n          [0, 0, 6, 0, 0, 0, 9, 0, 0],\n          [0, 8, 0, 0, 0, 9, 0, 0, 1],\n          [7, 0, 0, 0, 2, 0, 0, 6, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      // {\n      //   credit: \"Gekikara Sudoku10 Q99\",\n      //   matrix: [\n      //     [0, 0, 2, 1, 0, 0, 0, 7, 6],\n      //     [0, 0, 3, 6, 0, 0, 0, 1, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [5, 7, 0, 0, 0, 3, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 8, 5, 0, 0, 0, 6, 2],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [8, 2, 0, 0, 0, 9, 3, 0, 0],\n      //     [4, 3, 0, 0, 0, 2, 6, 0, 0]\n      //   ]\n      // },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q79\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q79\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q79\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q79\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 0, 2, 1],\n          [0, 0, 0, 6, 0, 0, 3, 8, 0],\n          [0, 0, 7, 0, 0, 3, 5, 0, 0],\n          [0, 8, 0, 0, 5, 1, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 8, 2, 0, 0, 9, 0],\n          [0, 0, 2, 4, 0, 0, 7, 0, 0],\n          [0, 3, 9, 0, 0, 6, 0, 0, 0],\n          [8, 6, 0, 0, 0, 0, 0, 0, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Gekikara sudoku 10 Q87\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Rimu Takayura\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q87\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Rimu Takayura\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q87\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"高由良りむ\",\n            book: \"激辛数独 10\",\n            question: \"Q87\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 5, 0, 0, 7, 0, 0],\n          [0, 3, 0, 0, 0, 9, 0, 8, 0],\n          [5, 0, 8, 0, 0, 0, 9, 0, 0],\n          [0, 7, 0, 0, 2, 0, 0, 0, 8],\n          [0, 0, 0, 1, 0, 4, 0, 0, 0],\n          [9, 0, 0, 0, 7, 0, 0, 1, 0],\n          [0, 0, 6, 0, 0, 0, 5, 0, 9],\n          [0, 8, 0, 4, 0, 0, 0, 3, 0],\n          [0, 0, 7, 0, 0, 3, 0, 0, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Gekikara sudoku 10 Q97\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Anpai\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q97\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Anpai\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q97\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"あんぱい\",\n            book: \"激辛数独 10\",\n            question: \"Q97\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 1, 0, 5, 0],\n          [0, 0, 7, 0, 3, 0, 0, 0, 1],\n          [0, 6, 0, 2, 0, 0, 0, 0, 0],\n          [0, 0, 6, 0, 1, 0, 0, 0, 4],\n          [0, 5, 0, 6, 0, 7, 0, 2, 0],\n          [4, 0, 0, 0, 2, 0, 9, 0, 0],\n          [0, 0, 0, 0, 0, 8, 0, 3, 0],\n          [8, 0, 0, 0, 5, 0, 2, 0, 0],\n          [0, 1, 0, 9, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q103\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q103\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q103\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q103\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 6, 7, 0, 0],\n          [0, 2, 3, 0, 0, 0, 8, 9, 0],\n          [5, 9, 0, 0, 0, 0, 0, 6, 0],\n          [3, 0, 0, 6, 0, 2, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 9, 0, 1, 0, 0, 4],\n          [0, 3, 0, 0, 0, 0, 0, 1, 6],\n          [0, 1, 9, 0, 0, 0, 5, 7, 0],\n          [0, 0, 5, 2, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Gekikara Sudoku 10 103\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Susumu Kondo\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q103\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Susumu Kondo\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q103\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"近藤夲\",\n            book: \"激辛数独 10\",\n            question: \"Q103\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 7, 9, 0, 0],\n          [8, 4, 0, 0, 1, 0, 0, 0, 0],\n          [0, 1, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 2, 0, 0, 6, 0, 0],\n          [0, 3, 0, 0, 4, 0, 0, 5, 0],\n          [0, 0, 7, 0, 0, 9, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 3, 0],\n          [0, 0, 0, 0, 5, 0, 0, 4, 1],\n          [0, 0, 2, 6, 0, 0, 0, 0, 0]\n        ]\n      }\n    ],\n    // Gekikara Sudoku10 Q105\n    [Config.sampleGameClassList[3]]: [\n      {\n        // // credit: \"Gekikara Sudoku10 Q82\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Chibisukemaru\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q82\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Chibisukemaru\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q82\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"チビスケ丸\",\n            book: \"激辛数独 10\",\n            question: \"Q82\"\n          }\n        },\n        matrix: [\n          [0, 0, 1, 0, 5, 0, 0, 0, 9],\n          [4, 0, 0, 1, 0, 0, 2, 0, 0],\n          [0, 6, 0, 0, 0, 4, 0, 5, 0],\n          [9, 0, 0, 0, 0, 0, 7, 0, 0],\n          [0, 0, 0, 0, 1, 0, 0, 0, 0],\n          [0, 0, 4, 0, 0, 0, 0, 0, 3],\n          [0, 3, 0, 2, 0, 0, 0, 8, 0],\n          [0, 0, 9, 0, 0, 5, 0, 0, 7],\n          [8, 0, 0, 0, 3, 0, 4, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"Gekikara Sudoku 10 84\",\n      //   matrix: [\n      //     [0, 0, 1, 5, 0, 0, 0, 3, 0],\n      //     [0, 0, 0, 0, 0, 8, 7, 0, 0],\n      //     [0, 5, 0, 0, 4, 0, 0, 0, 0],\n      //     [0, 4, 0, 3, 0, 0, 0, 0, 9],\n      //     [1, 0, 0, 0, 0, 0, 0, 0, 6],\n      //     [8, 0, 0, 0, 0, 7, 0, 2, 0],\n      //     [0, 0, 0, 0, 3, 0, 0, 6, 0],\n      //     [0, 0, 5, 4, 0, 0, 0, 0, 0],\n      //     [0, 3, 0, 0, 0, 6, 9, 0, 0]\n      //   ]\n      // },\n      {\n        // // credit: \"ChoGekikara sudoku 4 15\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Nyoroppi\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q15\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Nyoroppi\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q15\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"にょろっぴぃ\",\n            book: \"超激辛数独 4\",\n            question: \"Q15\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 4, 9, 0, 0, 0],\n          [0, 3, 7, 0, 0, 0, 6, 1, 0],\n          [0, 9, 2, 0, 7, 0, 0, 5, 0],\n          [0, 7, 0, 9, 0, 0, 1, 8, 0],\n          [0, 0, 0, 0, 8, 0, 0, 0, 0],\n          [0, 1, 6, 0, 0, 4, 0, 7, 0],\n          [0, 8, 0, 0, 5, 0, 7, 9, 0],\n          [0, 2, 1, 0, 0, 0, 5, 3, 0],\n          [0, 0, 0, 3, 1, 0, 0, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"ChoGekikara sudoku 4 16\",\n      //   matrix: [\n      //     [0, 0, 0, 5, 0, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 3, 0, 1, 0, 0],\n      //     [0, 4, 0, 0, 0, 7, 0, 5, 0],\n      //     [0, 3, 0, 4, 0, 0, 0, 6, 0],\n      //     [0, 0, 1, 0, 0, 0, 2, 0, 0],\n      //     [0, 8, 0, 0, 0, 5, 0, 7, 0],\n      //     [0, 6, 0, 3, 0, 0, 0, 8, 0],\n      //     [0, 0, 8, 0, 2, 0, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 1, 0, 0, 0]\n      //   ]\n      // },\n      //   {\n      //     credit: \"ChoGekikara sudoku 4 18\",\n      //     matrix: [\n      //       [0, 0, 6, 2, 0, 0, 0, 7, 0],\n      //       [0, 8, 0, 0, 9, 0, 0, 0, 2],\n      //       [1, 0, 0, 0, 5, 0, 0, 0, 0],\n      //       [5, 0, 0, 9, 0, 0, 0, 0, 0],\n      //       [0, 6, 2, 0, 0, 0, 1, 4, 0],\n      //       [0, 0, 0, 0, 0, 3, 0, 0, 7],\n      //       [0, 0, 0, 0, 1, 0, 0, 0, 6],\n      //       [6, 0, 0, 0, 3, 0, 0, 8, 0],\n      //       [0, 5, 0, 0, 0, 4, 3, 0, 0]\n      //     ]\n      //   },\n      //   {\n      //     credit: \"ChoGekikara Sudoku 4 20\",\n      //     matrix: [\n      //       [0, 4, 0, 0, 0, 1, 0, 0, 2],\n      //       [9, 0, 0, 0, 5, 0, 1, 0, 0],\n      //       [0, 3, 0, 4, 0, 0, 0, 6, 0],\n      //       [0, 0, 3, 0, 0, 0, 0, 0, 5],\n      //       [0, 2, 0, 0, 0, 0, 0, 4, 0],\n      //       [7, 0, 0, 0, 0, 0, 3, 0, 0],\n      //       [0, 8, 0, 0, 0, 3, 0, 2, 0],\n      //       [0, 0, 9, 0, 2, 0, 0, 0, 1],\n      //       [6, 0, 0, 1, 0, 0, 0, 9, 0]\n      //     ]\n      //   },\n      {\n        // // credit: \"ChoGekikara Sudoku4 40\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Haasan\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q40\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Haasan\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q40\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"はあさん\",\n            book: \"超激辛数独 4\",\n            question: \"Q40\"\n          }\n        },\n        matrix: [\n          [7, 0, 0, 5, 0, 2, 0, 0, 9],\n          [0, 6, 0, 0, 9, 0, 0, 5, 0],\n          [0, 0, 2, 0, 0, 0, 8, 0, 0],\n          [0, 0, 0, 2, 0, 7, 0, 0, 0],\n          [0, 0, 0, 0, 5, 0, 0, 0, 0],\n          [0, 0, 0, 3, 0, 9, 0, 0, 0],\n          [0, 0, 5, 0, 0, 0, 7, 0, 0],\n          [0, 9, 0, 0, 8, 0, 0, 6, 0],\n          [4, 0, 0, 7, 0, 1, 0, 0, 3]\n        ]\n      },\n      {\n        // // credit: \"Gekikara Sudoku10 105\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Mitsuyuki Okuyama\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q105\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Mitsuyuki Okuyama\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q105\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"おく山みつゆき\",\n            book: \"激辛数独 10\",\n            question: \"Q105\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 0, 0, 3, 0],\n          [0, 0, 6, 0, 2, 0, 5, 0, 0],\n          [0, 2, 0, 0, 0, 4, 0, 0, 0],\n          [0, 0, 0, 9, 0, 0, 0, 7, 0],\n          [0, 0, 7, 0, 5, 0, 6, 0, 0],\n          [0, 4, 0, 0, 0, 8, 0, 0, 0],\n          [0, 0, 0, 8, 0, 0, 0, 9, 0],\n          [0, 0, 5, 0, 6, 0, 7, 0, 0],\n          [0, 8, 0, 0, 0, 9, 0, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"Gekikara Sudoku 10 99\",\n      //   matrix: [\n      //     [0, 0, 2, 1, 0, 0, 0, 7, 6],\n      //     [0, 0, 3, 6, 0, 0, 0, 1, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [5, 7, 0, 0, 0, 3, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 8, 5, 0, 0, 0, 6, 2],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [8, 2, 0, 0, 0, 9, 3, 0, 0],\n      //     [4, 3, 0, 0, 0, 2, 6, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku 10 101\",\n      //   matrix: [\n      //     [0, 0, 0, 7, 0, 8, 0, 6, 0],\n      //     [0, 0, 0, 0, 1, 0, 2, 0, 8],\n      //     [0, 0, 0, 0, 0, 6, 0, 7, 0],\n      //     [9, 0, 0, 0, 0, 0, 3, 0, 2],\n      //     [0, 6, 0, 0, 0, 0, 0, 9, 0],\n      //     [5, 0, 3, 0, 0, 0, 0, 0, 1],\n      //     [0, 4, 0, 3, 0, 0, 0, 0, 0],\n      //     [8, 0, 1, 0, 2, 0, 0, 0, 0],\n      //     [0, 7, 0, 8, 0, 9, 0, 0, 0]\n      //   ]\n      // }\n      {\n        // // credit: \"ChoGekikara Sudoku 4 Q84\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Aquablue\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q84\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Sakusaku\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q84\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"さくさく\",\n            book: \"超激辛数独 4\",\n            question: \"Q84\"\n          }\n        },\n        matrix: [\n          [2, 0, 0, 8, 0, 0, 0, 0, 3],\n          [0, 0, 7, 0, 0, 0, 9, 0, 0],\n          [0, 6, 0, 0, 9, 0, 0, 5, 0],\n          [1, 0, 0, 2, 0, 0, 0, 0, 0],\n          [0, 0, 4, 0, 5, 0, 6, 0, 0],\n          [0, 0, 0, 0, 0, 3, 0, 0, 1],\n          [0, 5, 0, 0, 8, 0, 0, 2, 0],\n          [0, 0, 6, 0, 0, 0, 5, 0, 0],\n          [3, 0, 0, 0, 0, 4, 0, 0, 8]\n        ]\n      },\n      {\n        // // credit: \"ChoGekikara Sudoku 4 Q85\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Okayusan\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q85\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Koki\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q85\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"Koki\",\n            book: \"超激辛数独 4\",\n            question: \"Q85\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 0, 0, 0, 0],\n          [0, 0, 2, 0, 1, 0, 9, 0, 0],\n          [0, 3, 0, 0, 0, 8, 0, 4, 0],\n          [0, 0, 1, 0, 0, 0, 0, 0, 2],\n          [0, 4, 0, 0, 0, 0, 0, 7, 0],\n          [9, 0, 0, 0, 0, 0, 5, 0, 0],\n          [0, 7, 0, 4, 0, 0, 0, 8, 0],\n          [0, 0, 5, 0, 9, 0, 2, 0, 0],\n          [0, 0, 0, 0, 0, 7, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[4]]: [\n      {\n        // // credit: \"ChoJokyu NumPla vol.12 Q201\",\n        // credit: {\n        //   publisher: \"Byakuyashobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"ChoJokyu NumPla vol.12\",\n        //   question: \"Q201\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyashobo\",\n            author: \"Akihiko Takise\",\n            book: \"ChoJokyu NumPla vol.12\",\n            question: \"Q201\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"超上級ナンプレ vol.12\",\n            question: \"Q201\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 4, 0, 0, 0],\n          [0, 0, 7, 0, 2, 0, 8, 4, 0],\n          [0, 2, 0, 9, 0, 0, 0, 6, 0],\n          [1, 0, 5, 0, 0, 0, 0, 0, 7],\n          [0, 7, 0, 0, 1, 0, 0, 2, 0],\n          [6, 0, 0, 0, 0, 0, 5, 0, 4],\n          [0, 6, 0, 0, 0, 7, 0, 3, 0],\n          [0, 4, 1, 0, 5, 0, 2, 0, 0],\n          [0, 0, 0, 2, 0, 3, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"ChoJokyu NumPla vol.12 Q202\",\n        // credit: {\n        //   publisher: \"Byakuyashobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"ChoJokyu NumPla vol.12\",\n        //   question: \"Q202\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyashobo\",\n            author: \"Akihiko Takise\",\n            book: \"ChoJokyu NumPla vol.12\",\n            question: \"Q202\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"超上級ナンプレ vol.12\",\n            question: \"Q202\"\n          }\n        },\n        matrix: [\n          [0, 2, 0, 0, 0, 9, 5, 0, 0],\n          [5, 8, 0, 0, 0, 0, 0, 4, 0],\n          [0, 0, 0, 0, 4, 0, 8, 0, 1],\n          [0, 0, 0, 1, 0, 8, 0, 0, 7],\n          [0, 0, 3, 0, 0, 0, 6, 0, 0],\n          [6, 0, 0, 3, 0, 7, 0, 0, 0],\n          [4, 0, 1, 0, 7, 0, 0, 0, 0],\n          [0, 6, 0, 0, 0, 0, 0, 3, 2],\n          [0, 0, 5, 4, 0, 0, 0, 1, 0]\n        ]\n      }\n      // {\n      //   credit: \"ChoGekikara Sudoku 4 68\",\n      //   matrix: [\n      //     [0, 4, 0, 0, 0, 8, 0, 0, 5],\n      //     [2, 0, 0, 4, 0, 0, 0, 7, 0],\n      //     [0, 0, 5, 0, 3, 0, 6, 0, 0],\n      //     [0, 7, 0, 0, 0, 5, 0, 0, 8],\n      //     [0, 0, 4, 0, 0, 0, 5, 0, 0],\n      //     [3, 0, 0, 6, 0, 0, 0, 1, 0],\n      //     [0, 0, 9, 0, 6, 0, 1, 0, 0],\n      //     [0, 1, 0, 0, 0, 2, 0, 0, 7],\n      //     [5, 0, 0, 7, 0, 0, 0, 2, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 88\",\n      //   matrix: [\n      //     [5, 0, 0, 0, 0, 0, 0, 0, 6],\n      //     [0, 0, 0, 8, 3, 6, 0, 0, 0],\n      //     [0, 0, 3, 0, 0, 0, 1, 0, 0],\n      //     [0, 7, 0, 5, 0, 2, 0, 4, 0],\n      //     [0, 3, 0, 0, 0, 0, 0, 1, 0],\n      //     [0, 8, 0, 3, 0, 9, 0, 2, 0],\n      //     [0, 0, 9, 0, 0, 0, 5, 0, 0],\n      //     [0, 0, 0, 2, 4, 8, 0, 0, 0],\n      //     [7, 0, 0, 0, 0, 0, 0, 0, 1]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 85\",\n      //   matrix: [\n      //     [2, 0, 0, 0, 3, 4, 0, 0, 0],\n      //     [0, 0, 0, 2, 0, 0, 0, 0, 7],\n      //     [0, 5, 0, 0, 0, 0, 6, 0, 0],\n      //     [0, 3, 0, 0, 0, 0, 8, 0, 0],\n      //     [0, 6, 0, 0, 2, 0, 0, 9, 0],\n      //     [0, 0, 8, 0, 0, 0, 0, 5, 0],\n      //     [0, 0, 5, 0, 0, 0, 0, 8, 0],\n      //     [4, 0, 0, 0, 0, 8, 0, 0, 0],\n      //     [0, 0, 0, 6, 7, 0, 0, 0, 3]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 20\",\n      //   matrix: [\n      //     [1, 0, 0, 0, 0, 9, 0, 0, 0],\n      //     [0, 2, 0, 7, 0, 0, 4, 0, 3],\n      //     [0, 0, 3, 0, 0, 0, 0, 6, 0],\n      //     [0, 9, 0, 4, 0, 0, 8, 0, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [3, 0, 1, 0, 0, 6, 0, 4, 0],\n      //     [0, 5, 0, 0, 0, 0, 7, 0, 0],\n      //     [6, 0, 2, 0, 0, 4, 0, 8, 0],\n      //     [0, 0, 0, 5, 0, 0, 0, 0, 9]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 37\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 1, 2, 0, 0],\n      //     [0, 0, 9, 6, 0, 0, 0, 3, 0],\n      //     [0, 0, 3, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 5, 3, 0, 0, 0, 6, 0],\n      //     [0, 0, 0, 0, 5, 0, 0, 0, 0],\n      //     [0, 4, 0, 0, 0, 2, 1, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 8, 0, 0],\n      //     [0, 2, 0, 0, 0, 8, 4, 0, 0],\n      //     [0, 0, 6, 9, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 33\",\n      //   matrix: [\n      //     [0, 0, 0, 1, 0, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 0, 0, 8, 0, 0],\n      //     [0, 6, 0, 0, 0, 8, 4, 9, 0],\n      //     [5, 0, 0, 0, 6, 0, 9, 0, 0],\n      //     [0, 0, 0, 4, 3, 1, 0, 0, 0],\n      //     [0, 0, 1, 0, 2, 0, 0, 0, 3],\n      //     [0, 2, 6, 9, 0, 0, 0, 5, 0],\n      //     [0, 0, 4, 0, 0, 0, 3, 0, 0],\n      //     [0, 0, 0, 0, 0, 6, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 32\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 3, 0, 0, 0, 4],\n      //     [0, 0, 4, 0, 0, 7, 0, 8, 0],\n      //     [0, 6, 5, 1, 0, 0, 0, 0, 0],\n      //     [0, 0, 7, 0, 0, 0, 0, 6, 0],\n      //     [2, 0, 0, 0, 1, 0, 0, 0, 3],\n      //     [0, 4, 0, 0, 0, 0, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 9, 5, 7, 0],\n      //     [0, 9, 0, 6, 0, 0, 1, 0, 0],\n      //     [8, 0, 0, 0, 2, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 26\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 6, 7, 8, 0],\n      //     [0, 0, 8, 0, 0, 0, 3, 0, 0],\n      //     [0, 2, 0, 4, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 4, 0, 5, 0],\n      //     [0, 0, 3, 0, 0, 0, 1, 0, 0],\n      //     [0, 1, 0, 5, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 8, 0, 4, 0],\n      //     [0, 0, 9, 0, 0, 0, 6, 0, 0],\n      //     [0, 3, 7, 1, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 25\",\n      //   matrix: [\n      //     [0, 0, 3, 0, 0, 9, 0, 0, 4],\n      //     [0, 0, 4, 0, 0, 8, 0, 0, 0],\n      //     [0, 0, 2, 0, 0, 0, 0, 7, 0],\n      //     [0, 0, 0, 0, 7, 0, 0, 6, 0],\n      //     [0, 7, 0, 0, 5, 0, 0, 2, 0],\n      //     [0, 1, 0, 0, 2, 0, 0, 0, 0],\n      //     [0, 8, 0, 0, 0, 0, 1, 0, 0],\n      //     [0, 0, 0, 4, 0, 0, 5, 0, 0],\n      //     [6, 0, 0, 3, 0, 0, 9, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: {\n      //     en: {\n      //       publisher: \"Nikoli\",\n      //       author: \"Tanpopo-gumi\",\n      //       book: \"ChoGekikara Sudoku 4\",\n      //       question: \"Q90\"\n      //     },\n      //     ja: {\n      //       publisher: \"ニコリ\",\n      //       author: \"たんぽぽ組\",\n      //       book: \"超激辛数独 4\",\n      //       question: \"Q90\"\n      //     }\n      //   },\n      //   matrix: [\n      //     [0, 0, 0, 6, 0, 8, 0, 4, 0],\n      //     [7, 0, 0, 1, 0, 4, 0, 0, 9],\n      //     [0, 0, 4, 0, 9, 0, 7, 0, 0],\n      //     [1, 9, 0, 0, 0, 0, 0, 7, 6],\n      //     [0, 0, 7, 0, 0, 0, 5, 0, 0],\n      //     [6, 4, 0, 0, 0, 0, 0, 3, 1],\n      //     [0, 0, 8, 0, 1, 0, 6, 0, 0],\n      //     [4, 0, 0, 8, 0, 6, 0, 0, 7],\n      //     [0, 2, 0, 5, 0, 7, 0, 0, 0]\n      //   ]\n      // }\n      // {\n      //   credit: \"\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n    ]\n  };\n\n  // static headerTitle = \"Number Place Helper\";\n\n  static creditTemplate = {\n    en:\n      \"__question__ in __book__ created by __author__ published by __publisher__\",\n    ja: \"__question__  __author__ 作成 (__book__, __publisher__ 出版)\"\n  };\n}\n\nexport default Config;\n","/**\n * Copyright 2012 Akseli Palén.\n * Created 2012-07-15.\n * Licensed under the MIT license.\n *\n * <license>\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files\n * (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software,\n * and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * </lisence>\n *\n * Implements functions to calculate combinations of elements in JS Arrays.\n *\n * Functions:\n *   k_combinations(set, k) -- Return all k-sized combinations in a set\n *   combinations(set) -- Return all combinations of the set\n */\n\n/**\n * K-combinations\n *\n * Get k-sized combinations of elements in a set.\n *\n * Usage:\n *   k_combinations(set, k)\n *\n * Parameters:\n *   set: Array of objects of any type. They are treated as unique.\n *   k: size of combinations to search for.\n *\n * Return:\n *   Array of found combinations, size of a combination is k.\n *\n * Examples:\n *\n *   k_combinations([1, 2, 3], 1)\n *   -> [[1], [2], [3]]\n *\n *   k_combinations([1, 2, 3], 2)\n *   -> [[1,2], [1,3], [2, 3]\n *\n *   k_combinations([1, 2, 3], 3)\n *   -> [[1, 2, 3]]\n *\n *   k_combinations([1, 2, 3], 4)\n *   -> []\n *\n *   k_combinations([1, 2, 3], 0)\n *   -> []\n *\n *   k_combinations([1, 2, 3], -1)\n *   -> []\n *\n *   k_combinations([], 0)\n *   -> []\n */\nfunction k_combinations(set, k) {\n  var i, j, combs, head, tailcombs;\n\n  // There is no way to take e.g. sets of 5 elements from\n  // a set of 4.\n  if (k > set.length || k <= 0) {\n    return [];\n  }\n\n  // K-sized set has only one K-sized subset.\n  if (k === set.length) {\n    return [set];\n  }\n\n  // There is N 1-sized subsets in a N-sized set.\n  if (k === 1) {\n    combs = [];\n    for (i = 0; i < set.length; i++) {\n      combs.push([set[i]]);\n    }\n    return combs;\n  }\n\n  // Assert {1 < k < set.length}\n\n  // Algorithm description:\n  // To get k-combinations of a set, we want to join each element\n  // with all (k-1)-combinations of the other elements. The set of\n  // these k-sized sets would be the desired result. However, as we\n  // represent sets with lists, we need to take duplicates into\n  // account. To avoid producing duplicates and also unnecessary\n  // computing, we use the following approach: each element i\n  // divides the list into three: the preceding elements, the\n  // current element i, and the subsequent elements. For the first\n  // element, the list of preceding elements is empty. For element i,\n  // we compute the (k-1)-computations of the subsequent elements,\n  // join each with the element i, and store the joined to the set of\n  // computed k-combinations. We do not need to take the preceding\n  // elements into account, because they have already been the i:th\n  // element so they are already computed and stored. When the length\n  // of the subsequent list drops below (k-1), we cannot find any\n  // (k-1)-combs, hence the upper limit for the iteration:\n  combs = [];\n  for (i = 0; i < set.length - k + 1; i++) {\n    // head is a list that includes only our current element.\n    head = set.slice(i, i + 1);\n    // We take smaller combinations from the subsequent elements\n    tailcombs = k_combinations(set.slice(i + 1), k - 1);\n    // For each (k-1)-combination we join it with the current\n    // and store it to the set of k-combinations.\n    for (j = 0; j < tailcombs.length; j++) {\n      combs.push(head.concat(tailcombs[j]));\n    }\n  }\n  return combs;\n}\n\n/**\n * Combinations\n *\n * Get all possible combinations of elements in a set.\n *\n * Usage:\n *   combinations(set)\n *\n * Examples:\n *\n *   combinations([1, 2, 3])\n *   -> [[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]]\n *\n *   combinations([1])\n *   -> [[1]]\n */\nfunction combinations(set) {\n  var k, i, combs, k_combs;\n  combs = [];\n\n  // Calculate all non-empty k-combinations\n  for (k = 1; k <= set.length; k++) {\n    k_combs = k_combinations(set, k);\n    for (i = 0; i < k_combs.length; i++) {\n      combs.push(k_combs[i]);\n    }\n  }\n  return combs;\n}\n\nexport { k_combinations, combinations };\n","import Config from \"./Config\";\n// import \"./util/ArrayPermutation\";\nimport { k_combinations } from \"./util/combinations\";\n\nclass Util {\n  // this might be useful for future //\n  // get key of an object from the value //\n  // Object.keys(x).find(key => x[key] === 2)\n\n  static getIndexSequence(N = Config.size) {\n    return Array.from(Array(N).keys());\n  }\n\n  static getRedundantIndexSequence() {\n    let idxSequence = this.getIndexSequence();\n    const redundant = this.getIndexSequence(Config.size - 1);\n    idxSequence = idxSequence.concat(redundant.reverse());\n    return idxSequence;\n  }\n\n  static getNsequence(N = Config.size) {\n    return this.getIndexSequence(N).map(i => i + 1);\n  }\n\n  static getBlockIdByNum(num) {\n    return Config.panelIds.block + num;\n  }\n\n  static getBlockNumFromBlockId(blockId) {\n    return parseInt(blockId.slice(-1));\n  }\n\n  static getBlockIdxFromBlockId(blockId) {\n    return this.getBlockNumFromBlockId(blockId) - 1;\n  }\n\n  static abbreviateBlockId(blockId) {\n    return blockId.slice(0, 1).toUpperCase() + blockId.slice(-1);\n  }\n\n  static initArray(val = null, len = Config.size) {\n    return new Array(len).fill(val);\n  }\n\n  static initMatrix(val = null, len = Config.size) {\n    return this.initArray(val, len).map(val => this.initArray(val, len));\n  }\n\n  static initCube(val = null, len = Config.size) {\n    return this.initArray(val, len).map(val => this.initMatrix(val, len));\n  }\n\n  static initNumPanelMatrix() {\n    const arr = this.getNsequence(Config.size);\n    const numPanelMatrix = [];\n    while (arr.length) numPanelMatrix.push(arr.splice(0, Config.sizeB));\n\n    return numPanelMatrix;\n  }\n\n  static initCellIdx(r = null, c = null) {\n    return { r, c };\n  }\n\n  static initCellInfo(\n    idxs = null,\n    nums = null,\n    status = null,\n    type = null,\n    rcbIdx = null,\n    unionSize = null,\n    isBackward = false\n  ) {\n    if (idxs !== null && idxs.constructor === Array) {\n      if (nums !== null && nums.constructor === Array) {\n        return {\n          idxs,\n          nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      } else {\n        return {\n          idxs: idxs,\n          num: nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      }\n    } else {\n      if (nums !== null && nums.constructor === Array) {\n        return {\n          idx: idxs,\n          nums: nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      }\n    }\n\n    return {\n      idx: idxs,\n      num: nums,\n      status,\n      type,\n      rcbIdx,\n      unionSize,\n      isBackward\n    };\n  }\n\n  static initRegInfo(idx, truth = true) {\n    return { idx, truth };\n  }\n\n  static initMarkerIdx(b = null, rcType = \"\", rc = null, i = null) {\n    return { b, rcType, rc, i };\n  }\n\n  static initMarkerInfo(idx, num = null, status = null) {\n    return { idx, num, status };\n  }\n\n  static initCheckboxArray(multipleNums) {\n    // console.log(\"inside initCheckboxArray\");\n\n    const checkedArray = Util.initArray(false, Config.size + 1);\n    multipleNums.forEach(num => (checkedArray[num] = true));\n\n    return checkedArray;\n  }\n\n  static getContentFromMatrix(matrix, idx) {\n    return matrix[idx.r][idx.c];\n  }\n\n  static getNumFromNumMatrix(numMatrix, idx) {\n    return this.getContentFromMatrix(numMatrix, idx);\n  }\n\n  static getCandidateStatusArray(candidates, idx) {\n    return this.getContentFromMatrix(candidates, idx);\n  }\n\n  static getCandidateStatus(candidates, cellInfo) {\n    if (\"idxs\" in cellInfo) {\n      return cellInfo.idxs.map(\n        idx =>\n          this.getCandidateStatusArray(candidates, idx)[this.n2i(cellInfo.num)]\n      );\n    } else if (\"idx\" in cellInfo) {\n      return this.getCandidateStatusArray(candidates, cellInfo.idx)[\n        this.n2i(cellInfo.num)\n      ];\n    }\n    return null;\n  }\n\n  static getCandidateStatuses(candidates, idx, nums) {\n    const statusArray = this.getCandidateStatusArray(candidates, idx);\n    return nums.map(num => statusArray[this.n2i(num)]);\n  }\n\n  static combineStatuses(targetStatuses) {\n    targetStatuses = targetStatuses.map(status =>\n      this.convertExclusive2Candidates(status)\n    );\n\n    if (targetStatuses.includes(Config.candidateStatus.selected)) {\n      return Config.candidateStatus.selected;\n    } else if (targetStatuses.includes(Config.candidateStatus.selectable)) {\n      return Config.candidateStatus.selectable;\n    } else if (targetStatuses.includes(Config.candidateStatus.candidate)) {\n      return Config.candidateStatus.candidate;\n    }\n\n    return Config.candidateStatus.removed;\n  }\n\n  static getNarrowCandidateNumsFromStatusArray(statusArray) {\n    // console.log(\"inside getNarrowCandidateNumsFromStatusArray\");\n\n    let candidateNums = [];\n\n    for (let [i, status] of statusArray.entries()) {\n      if (this.isNarrowCandidate(status)) {\n        candidateNums.push(this.i2n(i));\n      }\n    }\n\n    return candidateNums;\n  }\n\n  static getNarrowCandidateNumsFromCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n\n    return this.getNarrowCandidateNumsFromStatusArray(statuses);\n  }\n\n  static getCandidateNumMatrix(candidates) {\n    // console.log(\"inside getCandidateMatrix\");\n\n    return candidates.map(row =>\n      row.map(statuses => {\n        return this.getNarrowCandidateNumsFromStatusArray(statuses);\n      })\n    );\n  }\n\n  static getNumsFromCandidateNumMatrix(candidateNumMatrix, idx) {\n    // console.log(\"inside getNumsFromCandidateNumMatrix\");\n\n    return this.getContentFromMatrix(candidateNumMatrix, idx);\n  }\n\n  static countNumsInCandidateNumMatrix(candidateNumMatrix, idx) {\n    // console.log(\"inside countNumsInCandidateNumMatrix\");\n\n    return this.getNumsFromCandidateNumMatrix(candidateNumMatrix, idx).length;\n  }\n\n  static getAllCellIndicies() {\n    const idxArray = this.getIndexSequence();\n\n    let idxs = [];\n\n    for (let r of idxArray) {\n      for (let c of idxArray) {\n        idxs.push(this.initCellIdx(r, c));\n      }\n    }\n    return idxs;\n  }\n\n  static convertCellInfo2MarkerInfo(cellInfo) {\n    // console.log(\"inside convertCellInfo2MarkerInfo\");\n\n    let markerIdx = null;\n    if (this.isExclusiveSingle(cellInfo.status)) {\n      const rcType = this.getFirstLetter(cellInfo.type);\n\n      markerIdx = this.initMarkerIdx(\n        cellInfo.rcbIdx,\n        rcType,\n        cellInfo.idxs[0][rcType]\n      );\n    } else if (this.isExclusiveDoubleOrTriple(cellInfo.status)) {\n      if (cellInfo.type === Config.restrictionTypes.blk) {\n        const rcType = this.isInSameRowCol(cellInfo.idxs);\n\n        if (rcType) {\n          markerIdx = this.initMarkerIdx(\n            cellInfo.rcbIdx,\n            rcType,\n            cellInfo.idxs[0][rcType]\n          );\n        }\n      } else {\n        const blkIdx = this.isInSameBlock(cellInfo.idxs);\n\n        if (typeof blkIdx === \"number\") {\n          markerIdx = this.initMarkerIdx(\n            blkIdx,\n            this.getFirstLetter(cellInfo.type),\n            cellInfo.rcbIdx\n          );\n        }\n      }\n    } else {\n      return null;\n    }\n\n    if (markerIdx === null) {\n      return null;\n    }\n\n    if (cellInfo.num) {\n      return this.initMarkerInfo(markerIdx, cellInfo.num, cellInfo.status);\n    }\n\n    return cellInfo.nums.map(num =>\n      this.initMarkerInfo(markerIdx, num, cellInfo.status)\n    );\n  }\n\n  static initTraceItem(\n    numInfo = null,\n    candInfoArray = [],\n    markerInfoArray = [],\n    operation = Config.operationTypes.manual\n  ) {\n    // // console.log(\"inside initTraceItem\");\n\n    if (candInfoArray && candInfoArray.constructor !== Array) {\n      candInfoArray = [candInfoArray];\n    }\n    if (markerInfoArray && markerInfoArray.constructor !== Array) {\n      markerInfoArray = [markerInfoArray];\n    }\n\n    return {\n      [Config.traceTypes.numMatrix]: numInfo,\n      [Config.traceTypes.candidate]: candInfoArray,\n      [Config.traceTypes.marker]: markerInfoArray,\n      [Config.traceElementTypes.operation]: operation\n    };\n  }\n\n  static initTraceItemNum(\n    numInfo = null,\n    operation = Config.operationTypes.manual\n  ) {\n    return this.initTraceItem(numInfo, null, null, operation);\n  }\n\n  static initTraceItemCandidate(\n    candInfos = null,\n    operation = Config.operationTypes.manual\n  ) {\n    if (candInfos.constructor === Array) {\n      return this.initTraceItem(null, candInfos, null, operation);\n    }\n    return this.initTraceItem(null, [candInfos], null, operation);\n  }\n\n  static initTraceItemMarker(\n    markerInfos = null,\n    operation = Config.operationTypes.manual\n  ) {\n    if (markerInfos.constructor === Array) {\n      return this.initTraceItem(null, null, markerInfos, operation);\n    }\n    return this.initTraceItem(null, null, [markerInfos], operation);\n  }\n\n  static initMarkerNums() {\n    // console.log(\"inside initMarkerNums\");\n\n    const markerNums = this.getIndexSequence().map(blkIdx => {\n      return [\"r\", \"c\"].reduce((idxs, rcType) => {\n        idxs[rcType] = this.getRowColIndicesFromBlockIdx(blkIdx, rcType).reduce(\n          (dic, r) => {\n            dic[r] = {\n              nums: this.initArray(null, Config.sizeB),\n              statuses: this.initArray(null, Config.sizeB)\n            };\n            return dic;\n          },\n          {}\n        );\n        return idxs;\n      }, {});\n    });\n\n    return markerNums;\n  }\n\n  static assignNum2NumMatrix(numMatrix, cellInfo) {\n    const idx = cellInfo.idx;\n    numMatrix[idx.r][idx.c] = cellInfo.num;\n    return numMatrix;\n  }\n\n  static assignTruth2regMatrix(regMatrix, cellInfo) {\n    const idx = cellInfo.idx;\n\n    regMatrix[idx.r][idx.c] = cellInfo.truth;\n    return regMatrix;\n  }\n\n  static assignAppearance(appMatrix, idx, appearance) {\n    appMatrix[idx.r][idx.c] = appearance;\n    return appMatrix;\n  }\n\n  static resetNumMatrix(numMatrix, isRegisteredMatrix) {\n    isRegisteredMatrix.forEach((regRow, r) => {\n      regRow.forEach((isRegistered, c) => {\n        if (!isRegistered) {\n          numMatrix[r][c] = null;\n        }\n      });\n    });\n\n    return numMatrix;\n  }\n\n  static assignStatus2Candidates(candidates, cellInfo, status) {\n    // console.log(\"inside assignCandidates\");\n\n    const idx = cellInfo.idx;\n    const num = cellInfo.num;\n\n    candidates[idx.r][idx.c][Util.n2i(num)] = status;\n\n    return candidates;\n  }\n\n  static assignCandidate2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.candidate\n    );\n  }\n\n  static assignSelected2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.selected\n    );\n  }\n\n  static assignSelectable2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static assignExclusiveSingle2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveSingle\n    );\n  }\n\n  static assignExclusiveDouble2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveDouble\n    );\n  }\n\n  static assignExclusiveTriple2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveTriple\n    );\n  }\n\n  static assignExclusiveQuadruple2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveQuadruple\n    );\n  }\n\n  static assignExclusiveSquare2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveSquare\n    );\n  }\n\n  static assignAssumptionTest2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.assumptionTest\n    );\n  }\n\n  static assignRemovable2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.removable\n    );\n  }\n\n  static assignRemoved2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.removed\n    );\n  }\n\n  static assignCandidateStatus4SingleNum(candidates, cellInfo, status) {\n    if (!(\"idxs\" in cellInfo)) {\n      return [candidates, null];\n    }\n\n    cellInfo.prevStatuses = [];\n    for (let idx of cellInfo.idxs) {\n      const cellInfoSub = this.initCellInfo(idx, cellInfo.num);\n\n      cellInfo.prevStatuses.push(\n        this.getCandidateStatus(candidates, cellInfoSub)\n      );\n\n      candidates = this.assignStatus2Candidates(\n        candidates,\n        cellInfoSub,\n        status\n      );\n    }\n\n    return [candidates, cellInfo];\n  }\n\n  static resetCandidateStatuses(candidates) {\n    return candidates.map(row =>\n      row.map(cell =>\n        cell.map(status =>\n          this.isNarrowCandidate(status)\n            ? Config.candidateStatus.candidate\n            : status\n        )\n      )\n    );\n  }\n\n  static getNumInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.numMatrix];\n  }\n\n  static getCandidateInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.candidate];\n  }\n\n  static getMarkerInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.marker];\n  }\n\n  static getAllParticularInfosFromTrace(trace, infoType) {\n    let particularTrace = trace.map(traceItem => traceItem[infoType]);\n    particularTrace = particularTrace.filter(\n      particularTraceItem => particularTraceItem\n    );\n\n    if (infoType === Config.traceTypes.numMatrix) {\n      return particularTrace;\n    }\n\n    return this.flattenMatrix2Array(particularTrace);\n  }\n\n  static getAllNumInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(\n      trace,\n      Config.traceTypes.numMatrix\n    );\n  }\n\n  static getAllCandidateInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(\n      trace,\n      Config.traceTypes.candidate\n    );\n  }\n\n  static getAllMarkerInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(trace, Config.traceTypes.marker);\n  }\n\n  static countNumbers(numMatrix) {\n    let numCounts = this.initArray(0, Config.size + 1);\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      const val = this.getNumFromNumMatrix(numMatrix, idx);\n      if (val) {\n        numCounts[val]++;\n      }\n    }\n\n    return numCounts;\n  }\n\n  static isAllWideSelected(candidates) {\n    // console.log(\"inside isAllWideSelected\");\n\n    return (\n      Config.numCells === this.countWideSelectedCellsInCandidates(candidates)\n    );\n  }\n\n  static countWideSelectedCellsInCandidates(candidates) {\n    // console.log(\"inside countWideSelectInCandidates\");\n\n    const candArray = this.flattenMatrix2Array(candidates);\n\n    const countWideSelected = candArray.reduce(\n      (count, candCell) => count + this.isWideSelectedInStatuses(candCell),\n      0\n    );\n\n    return countWideSelected;\n  }\n\n  static countNumInCandidates(candidates, cellInfos) {\n    const candidateCells = cellInfos.filter(cellInfo =>\n      this.isNarrowCandidate(this.getCandidateStatus(candidates, cellInfo))\n    );\n\n    return candidateCells.length;\n  }\n\n  static countNarrowCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.reduce(\n      (count, status) => count + this.isNarrowCandidate(status),\n      0\n    );\n  }\n\n  static countCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.reduce(\n      (count, status) => count + this.isCandidate(status),\n      0\n    );\n  }\n\n  static isSingleCandidate(candidates, idx) {\n    return this.countCandidates(candidates, idx) === 1;\n  }\n\n  static getSingleCandidate(candidates, idx) {\n    let candNums = this.getCandidateNums(candidates, idx);\n    if (candNums.length === 1) {\n      return candNums.pop();\n    }\n    return null;\n  }\n\n  static countWideRemoved(candidates, idx) {\n    return this.getCandidateStatusArray(candidates, idx).reduce(\n      (count, status) => count + this.isWideRemoved(status),\n      0\n    );\n  }\n\n  static countManualInputs(trace) {\n    // console.log(\"inside countManualInputs\");\n\n    return trace.filter(\n      traceItem => traceItem.operation === Config.operationTypes.manual\n    ).length;\n  }\n\n  static getSelectableNum(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    if (this.countNarrowCandidates(candidates, idx) === 1) {\n      for (let [i, status] of statuses.entries()) {\n        if (this.isNarrowCandidate(status)) {\n          return this.i2n(i);\n        }\n      }\n    }\n    return null;\n  }\n\n  static getSelectableIdx(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    for (let [i, status] of statuses.entries()) {\n      if (this.isSelectable(status)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  static isNumInCell(numMatrix, idx) {\n    // console.log(\"inside isNumInCell function in Util.js\");\n\n    if (idx && idx.r !== null && idx.c !== null) {\n      return !!numMatrix[idx.r][idx.c];\n    }\n    return false;\n  }\n\n  static isMarkerAddress(address) {\n    return Util.getFirstLetter(address) === \"B\";\n  }\n\n  static isMarkerIndex(idx) {\n    return typeof idx.b !== \"undefined\";\n  }\n\n  static hasNumInMarker(markerNums, idx) {\n    const nums = this.getNumsFromMarkerNums(markerNums, idx);\n    return nums.length > 0;\n  }\n\n  static isNumInMarker(markerNums, idx) {\n    if (idx && this.isMarkerIndex(idx)) {\n      return !!this.getNumFromMarkerNums(markerNums, idx);\n    }\n    return false;\n  }\n\n  static isTheNumInMarker(markerNums, markerInfo) {\n    // console.log(\"inside isTheNumInMarker\");\n\n    const idx = markerInfo.idx;\n    if (idx && this.isMarkerIndex(idx) && markerInfo.num !== null) {\n      const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n      return nums.includes(markerInfo.num);\n    }\n    return false;\n  }\n\n  static sumArray(ary) {\n    return ary.reduce((a, b) => a + b, 0);\n  }\n\n  static n2i(n) {\n    return n - 1;\n  }\n\n  static i2n(i) {\n    return i + 1;\n  }\n\n  // count cells assigned a number to check all cells are filled with numbers //\n  static countNonZeroCells(numMatrix) {\n    return numMatrix\n      .reduce((a, b) => a.concat(b))\n      .map(a => a > 0)\n      .reduce((a, b) => a + b, 0);\n  }\n\n  // convert elements of a matrix from empty to null //\n  static convEmpty2Null(m) {\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        if (!m[r][c]) {\n          m[r][c] = null;\n        }\n      }\n    }\n    return m;\n  }\n\n  // convert elements of a matrix from zero to null //\n  static convZero2Null(m) {\n    // const allIdxs = this.getAllCellIndicies();\n\n    // for (let idx of allIdxs) {\n    //   const val = this.getNumFromNumMatrix(m, idx);\n    //   if (!val) {\n    //     m = this.assignNum2NumMatrix(m, this.initCellInfo(idx, null));\n    //   }\n    // }\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        // if (!m[r][c] || m[r][c] === 0) {\n        if (!m[r][c]) {\n          m[r][c] = null;\n        }\n      }\n    }\n    return m;\n  }\n\n  static convNull2Zero(m) {\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        // if (!m[r][c] || m[r][c] === null) {\n        if (!m[r][c]) {\n          m[r][c] = 0;\n        }\n      }\n    }\n    return m;\n  }\n\n  static getSampleGameList() {\n    return Config.sampleGameClassList;\n  }\n\n  static getDummyMatrix() {\n    return Config.dummyMatrix;\n  }\n\n  static getSampleGameButtonId(level, i) {\n    return level + \"-\" + this.i2n(i);\n  }\n\n  static getSampleGameButtonLabel(level, i) {\n    return this.getFirstLetter(level).toUpperCase() + this.i2n(i);\n  }\n\n  static getSampleGameButtonTitle(level, i, lang = \"en\") {\n    const classTitle = Config.sampleGameTitles[level][lang];\n    return this.capitalize(this.getSampleGameButtonId(classTitle, i));\n  }\n\n  static getSampleMatrix(levelId) {\n    // console.log(\"inside levelId\");\n\n    const gameInfo = this.getSampleGameInfo(levelId);\n\n    const gameNumMatrix = this.deepCopy(\n      Config.sampleGames[gameInfo.gameClass][gameInfo.idx].matrix\n    );\n\n    return this.convZero2Null(gameNumMatrix);\n  }\n\n  static getSampleGameInfo(levelId) {\n    if (!levelId) {\n      return null;\n    }\n\n    const [gameClass, n] = levelId.split(\"-\");\n    return {\n      gameClass,\n      idx: parseInt(this.n2i(n))\n    };\n  }\n\n  static flipLang(lang) {\n    // console.log(\"inside flipLang\");\n\n    const langs = Object.values(Config.lang);\n    const idx = langs.indexOf(lang);\n\n    return langs[idx ? 0 : 1];\n  }\n\n  static getCredit(crediteInfo, lang) {\n    // console.log(\"inside getCredit\");\n\n    let credit = Config.creditTemplate[lang];\n\n    for (let [key, val] of Object.entries(crediteInfo)) {\n      credit = credit.replace(\"__\" + key + \"__\", val);\n    }\n\n    return credit;\n  }\n\n  // return flags to distinguish originally set numbers for a game //\n  static getRegisteredFlags(numMatrix) {\n    return numMatrix.map(row => row.map(num => num !== null));\n  }\n\n  // return numbers in a block assigned by index (0-8) as an array (obsolete?) //\n  static getNumbersFromBlockIndex(m, blkIndex) {\n    const blockCellIndices = this.getBlkIndicesFromIdx(blkIndex);\n\n    // // should use map function //\n    // let blkNums = [];\n    // blockCellIndices.forEach(idx => {\n    //   // blkNums.push(m[idx.r][idx.c]);\n    //   blkNums.push(this.getNumFromNumMatrix(m, idx));\n    // });\n    // return blkNums;\n\n    return this.getNumbersFromIndices(m, blockCellIndices);\n  }\n\n  // return numbers in a block assigned by number (1-9) as an array (obsolete?) //\n  static getNumbersFromBlockIdx(m, blkIdx) {\n    // return this.getNumbersFromBlockIndex(m, blkNum - 1);\n    return this.getNumbersFromBlockIndex(m, blkIdx);\n  }\n\n  static getNumbersFromBlockNum(m, blkNum) {\n    // return this.getNumbersFromBlockIndex(m, blkNum - 1);\n    // return this.getNumbersFromBlockIndex(m, this.n2i(blkNum));\n    return this.getNumbersFromBlockIdx(m, this.n2i(blkNum));\n  }\n\n  // return numbers of an element assigned by the indices //\n  static getNumbersFromIndices(m, indices) {\n    // console.log(\"inside getNumbersFromIndices\");\n\n    // return indices.map(idx => m[idx.r][idx.c]);\n    return indices.map(idx => this.getNumFromNumMatrix(m, idx));\n  }\n\n  // return cellInfo (number and the index of the matrix) //\n  static getCellInfoArrayFromIndices(numMatrix, cellIndices) {\n    // return cellIndices.map(idx => {\n    //   return {\n    //     idx: idx,\n    //     num: numMatrix[idx.r][idx.c]\n    //   };\n    // });\n\n    return cellIndices.map(idx =>\n      this.initCellInfo(idx, this.getNumFromNumMatrix(numMatrix, idx))\n    );\n  }\n\n  // return numbers in a row as an array (obsolete?) //\n  static getRowNumbers(m, r) {\n    return m[r];\n  }\n\n  // return numbers in a column as an array (obsolete?) //\n  static getColNumbers(m, c) {\n    let colNums = [];\n    for (let r = 0; r < m.length; r++) {\n      colNums.push(m[r][c]);\n    }\n    return colNums;\n  }\n\n  // return cell indices of the assigned row index //\n  static getRowIndicesFromIdx(r) {\n    // console.log(\"inside getCellIndicesFromRowIndex\");\n\n    return this.getIndexSequence(Config.size).map(c => {\n      return this.initCellIdx(r, c);\n    });\n  }\n\n  // return cell indices of the assigned column index //\n  static getColIndicesFromIdx(c) {\n    // console.log(\"inside getCellIndicesFromColIndex\");\n\n    return this.getIndexSequence(Config.size).map(r => {\n      return this.initCellIdx(r, c);\n    });\n  }\n\n  static getRowIndicesFromBlockIdx(blkIdx) {\n    const rowBase = Math.floor(blkIdx / Config.sizeB) * Config.sizeB;\n    return this.getIndexSequence(Config.sizeB).map(i => i + rowBase);\n  }\n\n  static getColIndicesFromBlockIdx(blkIdx) {\n    const colBase = (blkIdx % Config.sizeB) * Config.sizeB;\n    return this.getIndexSequence(Config.sizeB).map(i => i + colBase);\n  }\n\n  static getRowColIndicesFromBlockIdx(blkIdx, rcType) {\n    // console.log(\"inside getRowColIndicesFromBlockIdx\");\n\n    if (rcType === \"r\" || rcType === \"row\") {\n      return this.getRowIndicesFromBlockIdx(blkIdx);\n    }\n    return this.getColIndicesFromBlockIdx(blkIdx);\n  }\n\n  static getCellIdxsFromMarkerIdx(markerIdx) {\n    // console.log(\"inside getCellIdxsFromMarkerIdx\");\n\n    const counterRCs = this.getRowColIndicesFromBlockIdx(\n      markerIdx.b,\n      this.flipRCType(markerIdx.rcType)\n    );\n\n    return counterRCs.map(counterRC =>\n      markerIdx.rcType === \"r\"\n        ? this.initCellIdx(markerIdx.rc, counterRC)\n        : this.initCellIdx(counterRC, markerIdx.rc)\n    );\n  }\n\n  static getRowColWiseBlockIdxSequence(rcType) {\n    const shortIdxArray = this.getIndexSequence(Config.sizeB);\n\n    if (rcType === \"r\") {\n      return shortIdxArray.map(i =>\n        shortIdxArray.map(j => j + Config.sizeB * i)\n      );\n    }\n    return shortIdxArray.map(i => shortIdxArray.map(j => j * Config.sizeB + i));\n  }\n\n  static getBlkIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getCellIndicesFromIdx\");\n\n    const rowIdxs = this.getRowIndicesFromBlockIdx(blkIdx);\n    const colIdxs = this.getColIndicesFromBlockIdx(blkIdx);\n\n    return rowIdxs.reduce(\n      (idxs, r) => idxs.concat(colIdxs.map(c => this.initCellIdx(r, c))),\n      []\n    );\n  }\n\n  static getTargetCellIndicesByMarkerIdx(markerIdx, candidates) {\n    // console.log(\"inside getTargetCellIndicesByMarkerIdx\");\n\n    const idxs = this.getCellIdxsFromMarkerIdx(markerIdx);\n\n    return this.removeWideSelectedCellIdxs(candidates, idxs);\n  }\n\n  static removeWideSelectedCellIdxs(candidates, cellIdxs) {\n    return cellIdxs.filter(idx => !this.isWideSelectedInCell(candidates, idx));\n  }\n\n  static getRelatedCellIndicesByMarkerIdx(markerIdx, candidates) {\n    let cellIndices = this.getBlkIndicesFromIdx(markerIdx.b);\n    const targetCellIndices = cellIndices.filter(\n      idx => idx[markerIdx.rcType] === markerIdx.rc\n    );\n\n    cellIndices = cellIndices.concat(\n      this.getCellIndices(markerIdx.rc, markerIdx.rcType)\n    );\n\n    return cellIndices.filter(\n      idx =>\n        !this.isIdxInDuplicates(targetCellIndices, idx) &&\n        !this.isWideSelectedInCell(candidates, idx)\n    );\n  }\n\n  // return cell indices of the assigned row/column/block index //\n  static getCellIndices(idx, type = \"row\") {\n    // console.log(\"inside getCellIndices with type: \", type);\n\n    let cellIndices = [];\n    switch (type) {\n      case \"r\":\n      case \"row\":\n        cellIndices = this.getRowIndicesFromIdx(idx);\n        break;\n      case \"c\":\n      case \"col\":\n      case \"column\":\n        cellIndices = this.getColIndicesFromIdx(idx);\n        break;\n      case \"b\":\n      case \"blk\":\n      case \"block\":\n        cellIndices = this.getBlkIndicesFromIdx(idx);\n        break;\n      default:\n        break;\n    }\n    return cellIndices;\n  }\n\n  static getAllIndices(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    const indices = {\n      row: this.getRowIndicesFromIdx(idx.r),\n      col: this.getColIndicesFromIdx(idx.c),\n      blk: this.getBlkIndicesFromIdx(blockIdx)\n    };\n    return indices;\n  }\n\n  // return row indices of the assigned block index //\n  static getBlkRowIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getBlkRowIndicesFromIdx\");\n\n    const rowBase = Math.floor(blkIdx / Config.sizeB) * Config.sizeB;\n    let rowIndices = this.getIndexSequence(Config.sizeB);\n\n    return rowIndices.map(r => r + rowBase);\n  }\n\n  // return column indices of the assigned block index //\n  static getBlkColIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getBlkColIndicesFromIdx\");\n\n    const colBase = (blkIdx % Config.sizeB) * Config.sizeB;\n\n    let colIndices = this.getIndexSequence(Config.sizeB);\n    return colIndices.map(c => c + colBase);\n  }\n\n  static getBlkRowColIndicesFromIdx(blkIdx, rcType) {\n    return rcType === \"row\"\n      ? this.getBlkRowIndicesFromIdx(blkIdx)\n      : this.getBlkColIndicesFromIdx(blkIdx);\n  }\n\n  static getCandidateCellIndices(candidates, rcbIdx, type) {\n    let cellIndices = this.getCellIndices(rcbIdx, type);\n    return this.removeSelectCells(candidates, cellIndices);\n  }\n\n  static removeSelectCells(candidates, idxs) {\n    return idxs.filter(idx => !this.isWideSelectedInCell(candidates, idx));\n  }\n\n  static getRelatedIndicesBesidesItself(idx) {\n    // console.log(\"inside getReletedIndicesBesidesItself\");\n\n    const rows2 = this.getRowIndicesWithoutTheIdx(idx);\n    const cols2 = this.getColIndicesWithoutTheIdx(idx);\n    const blks2 = this.getBlockOnlyIndicesFromCellIdx(idx);\n\n    return rows2.concat(cols2).concat(blks2);\n  }\n\n  static getRowIndicesWithoutTheIdx(idx) {\n    const rows = this.getRowIndicesFromIdx(idx.r);\n    rows.splice(idx.c, 1);\n    return rows;\n  }\n\n  static getColIndicesWithoutTheIdx(idx) {\n    const cols = this.getColIndicesFromIdx(idx.c);\n    cols.splice(idx.r, 1);\n    return cols;\n  }\n\n  static getBlockOnlyIndicesFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n    const blks = this.getBlkIndicesFromIdx(blockIdx);\n\n    return blks.filter(bIdx => bIdx.r !== idx.r && bIdx.c !== idx.c);\n  }\n\n  // return cell indices of the assigned block num //\n  static getBlkIndicesFromNum(blkNum) {\n    // return this.getBlkIndicesFromIdx(blkNum - 1, Config.size);\n    return this.getBlkIndicesFromIdx(this.n2i(blkNum), Config.size);\n  }\n\n  static getCellIndicesFromBlockId(blockId) {\n    const nBlock = this.getBlockNumFromBlockId(blockId);\n    return this.getBlkIndicesFromNum(nBlock);\n  }\n\n  static getBlockIdxFromCellIdx(idx) {\n    let blockIdx = Math.floor(idx.r / Config.sizeB) * Config.sizeB;\n    blockIdx += Math.floor(idx.c / Config.sizeB);\n    return blockIdx;\n  }\n\n  static getRelatedIndices4union(candidates, idxs, rcbIdx, rcbType) {\n    // console.log(\"inside getRelatedIndices4union\");\n\n    let cellIndices = this.getCandidateCellIndices(candidates, rcbIdx, rcbType);\n\n    let cellIndicesTmp = [];\n    if (rcbType === \"blk\") {\n      const rcType = this.isInSameRowCol(idxs);\n      if (rcType) {\n        cellIndicesTmp = this.getCandidateCellIndices(\n          candidates,\n          idxs[0][rcType],\n          rcType\n        );\n      }\n    } else {\n      const blkIdx = this.isInSameBlock(idxs);\n\n      if (typeof blkIdx === \"number\") {\n        cellIndicesTmp = this.getCandidateCellIndices(\n          candidates,\n          blkIdx,\n          \"blk\"\n        );\n      }\n    }\n\n    cellIndices = cellIndices.concat(cellIndicesTmp);\n    cellIndices = this.removeDuplicatedIndices(cellIndices);\n\n    // remove the union cells themselves //\n    cellIndices = cellIndices.filter(idx => !this.isIdxInDuplicates(idxs, idx));\n\n    return cellIndices;\n  }\n\n  static getRelatedCellInfo4unionA(candidates, unionCell) {\n    let cellInfos = [];\n\n    let cellIndices = this.getRelatedIndices4union(\n      candidates,\n      unionCell.idxs,\n      unionCell.rcbIdx,\n      unionCell.type\n    );\n\n    for (let idx of cellIndices) {\n      for (let num of unionCell.nums) {\n        const cellInfo = this.initCellInfo(\n          idx,\n          num,\n          Config.candidateStatus.removable\n        );\n        const prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isNarrowCandidate(prevStatus)) {\n          cellInfo.prevStatus = prevStatus;\n          cellInfos.push(cellInfo);\n        }\n      }\n    }\n    return cellInfos;\n  }\n\n  static getRelatedCellInfo4unionB(candidates, unionCell) {\n    let relatedCellInfos = [];\n    const idxArray = this.getIndexSequence();\n\n    if (unionCell.type !== Config.restrictionTypes.block) {\n      return [];\n    }\n\n    for (let rcType of Config.restrictionTypesStraightShortArray) {\n      const counterRCType = this.flipRCType(rcType);\n\n      if (!this.isInSameRowCol(unionCell.idxs, rcType)) {\n        continue;\n      }\n\n      // if (this.isInSameRowCol(unionCell.idxs, rcType)) {\n      const rc = unionCell.idxs[0][rcType];\n\n      for (let counterRC of idxArray) {\n        if (unionCell.idxs.map(idx => idx[counterRCType]).includes(counterRC)) {\n          continue;\n        }\n\n        // if (\n        //   !unionCell.idxs.map(idx => idx[counterRCType]).includes(counterRC)\n        // ) {\n        for (let num of unionCell.nums) {\n          const idx =\n            rcType === Config.restrictionTypesShort.row\n              ? this.initCellIdx(rc, counterRC)\n              : this.initCellIdx(counterRC, rc);\n          const cellInfo = this.initCellInfo(\n            idx,\n            num,\n            Config.candidateStatus.removable\n          );\n          cellInfo.prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n          if (this.isNarrowCandidate(cellInfo.prevStatus)) {\n            relatedCellInfos.push(cellInfo);\n          }\n        }\n        // }\n      }\n      // }\n    }\n\n    return relatedCellInfos;\n  }\n\n  static getRelatedBlockIdxsFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    let blkIdxs = {};\n    for (let rcType of [\"r\", \"c\"]) {\n      const blkSequence = this.getRowColWiseBlockIdxSequence(rcType);\n\n      blkIdxs[rcType] = blkSequence\n        .filter(idxs => idxs.includes(blockIdx))\n        .pop();\n    }\n\n    return blkIdxs;\n  }\n\n  static index2R1C1(idx) {\n    return `R${idx.r + 1}C${idx.c + 1}`;\n  }\n\n  static R1C12Index(r1c1) {\n    return {\n      r: parseInt(r1c1.slice(1, 2)) - 1,\n      c: parseInt(r1c1.slice(3, 4)) - 1\n    };\n  }\n\n  static R1C1N12CellInfo(r1c1n1) {\n    return {\n      idx: this.R1C12Index(r1c1n1.slice(0, 4)),\n      num: parseInt(r1c1n1.slice(5, 6))\n    };\n  }\n\n  static getR1C1FromBlockId(blockId) {\n    const cellIndices = this.getCellIndicesFromBlockId(blockId);\n    const cellIndicesR1C1 = cellIndices.map(i => this.index2R1C1(i));\n\n    return cellIndicesR1C1;\n  }\n\n  static markerId2Idx(markerId) {\n    // console.log(\"inside markerId2Idx\");\n\n    // const b = parseInt(markerId.slice(1, 2)) - 1;\n    // const rc = parseInt(markerId.slice(3, 4)) - 1;\n    // const i = parseInt(markerId.slice(5, 6)) - 1;\n    const b = this.n2i(parseInt(markerId.slice(1, 2)));\n    const rcType = markerId.slice(2, 3).toLowerCase();\n    const rc = this.n2i(parseInt(markerId.slice(3, 4)));\n    const i = this.n2i(parseInt(markerId.slice(5, 6)));\n\n    return this.initMarkerIdx(b, rcType, rc, i);\n  }\n\n  static markerIdx2Id(idx) {\n    return `B${idx.b}${idx.rcType}${idx.rc}I${idx.i + 1}`;\n  }\n\n  static getMarkerIdxsFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    return [\"r\", \"c\"].map(rcType =>\n      this.initMarkerIdx(blockIdx, rcType, idx[rcType])\n    );\n  }\n\n  static getCorrespondingCellIdxs2MarkerIdx(markerIdx) {\n    const RCIdxs = Util.getRowColIndicesFromBlockIdx(\n      markerIdx.b,\n      Util.flipRCType(markerIdx.rcType)\n    );\n\n    return RCIdxs.map(rc =>\n      markerIdx.rcType === \"r\"\n        ? Util.initCellIdx(markerIdx.rc, rc)\n        : Util.initCellIdx(rc, markerIdx.rc)\n    );\n  }\n\n  static getRelatedMarkerIdxsFromCellIdx(cellIdx) {\n    // console.log(\"inside getRelatedMarkerIdxsFromCellIdx\");\n\n    const blockSeq = this.getRelatedBlockIdxsFromCellIdx(cellIdx);\n\n    let markerIdxs = [];\n    for (let rcType of Object.keys(blockSeq)) {\n      const blockIdxs = blockSeq[rcType].reduce(\n        (ary, i) => ary.concat(Array(3).fill(i)),\n        []\n      );\n      for (let [rc, b] of blockIdxs.entries()) {\n        markerIdxs.push(this.initMarkerIdx(b, this.flipRCType(rcType), rc));\n      }\n    }\n\n    return markerIdxs;\n  }\n\n  static getNumFromMarkerNums(markerNums, idx) {\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    return nums[idx.i];\n  }\n\n  static getNumsFromMarkerNums(markerNums, idx) {\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    return nums.filter(num => num !== null);\n  }\n\n  static getNumArrayFromMarkerNums(markerNums, idx) {\n    // console.log(\"inside markerNums\");\n\n    const nums = markerNums[idx.b][idx.rcType][idx.rc].nums;\n    return nums;\n  }\n\n  static getInfoArrayFromMarkerNums(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc];\n  }\n\n  static getInfosFromMarkerNums(markerNums, idx) {\n    // console.log(\"inside getInfosFromMarkerNums\");\n\n    const infoArray = this.getInfoArrayFromMarkerNums(markerNums, idx);\n\n    const infos = { nums: [], statuses: [] };\n    for (let [i, num] of infoArray.nums.entries()) {\n      if (num !== null) {\n        infos.nums.push(num);\n        infos.statuses.push(infoArray.statuses[i]);\n      }\n    }\n\n    return infos;\n  }\n\n  static isTheMarkerCellNull(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] === null;\n  }\n\n  static setMarkerNum(markerNums, markerInfo) {\n    // console.log(\"inside setMarkerNum\");\n\n    let idx = markerInfo.idx;\n    let isReset = false;\n\n    if (markerInfo.num < 0) {\n      isReset = true;\n      markerInfo.num = Math.abs(markerInfo.num);\n    }\n\n    if (this.isTheNumInMarker(markerNums, markerInfo)) {\n      idx = this.findNumInMarker(markerNums, markerInfo);\n    } else if (idx.i === null || this.getNumFromMarkerNums(markerNums, idx)) {\n      idx.i = this.getFirstNullIdx(\n        this.getNumArrayFromMarkerNums(markerNums, idx)\n      );\n    }\n\n    if (isReset) {\n      markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] = null;\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = null;\n    } else {\n      markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] = markerInfo.num;\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = markerInfo.status;\n    }\n\n    markerNums[idx.b][idx.rcType][idx.rc] = this.sortMarkerNums(\n      this.getInfoArrayFromMarkerNums(markerNums, idx)\n    );\n\n    return markerNums;\n  }\n\n  static resetMarker(markerNums, markerInfos) {\n    // console.log(\"inside resetMarker\");\n\n    for (let markerInfo of markerInfos) {\n      let markerInfoArray = [];\n      if (\"nums\" in markerInfo) {\n        for (let [i, num] of markerInfo.nums.entries()) {\n          const targetMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          if (\"prevStatuses\" in markerInfo) {\n            if (num !== markerInfo.num) {\n              targetMarkerInfo.prevStatus = markerInfo.prevStatuses[i];\n            }\n          }\n          markerInfoArray.push(targetMarkerInfo);\n        }\n      } else {\n        markerInfoArray.push(markerInfo);\n      }\n\n      for (let mInfo of markerInfoArray) {\n        if (typeof mInfo.num !== \"number\") {\n          mInfo.num = this.getNumFromMarkerNums(markerNums, mInfo.idx);\n          if (!mInfo.num) {\n            continue;\n          }\n        }\n\n        if (\"prevStatus\" in mInfo) {\n          mInfo = this.initMarkerInfo(mInfo.idx, mInfo.num, mInfo.prevStatus);\n        } else {\n          mInfo = this.initMarkerInfo(mInfo.idx, -mInfo.num, null);\n        }\n\n        markerNums = this.setMarkerNum(markerNums, mInfo);\n      }\n    }\n\n    return [markerNums, markerInfos];\n  }\n\n  static assignMarkerStatusSub(markerNums, mInfo) {\n    const idx = this.findNumInMarker(markerNums, mInfo);\n\n    if (idx !== null) {\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = mInfo.status;\n    }\n    return markerNums;\n  }\n\n  static assignMarkerStatus(markerNums, markerInfo) {\n    // console.log(\"inside assignMarkerStatus\");\n\n    if (Object.keys(markerInfo).includes(\"nums\")) {\n      for (let num of markerInfo.nums) {\n        markerInfo.num = num;\n        markerNums = this.assignMarkerStatusSub(markerNums, markerInfo);\n      }\n    } else if (Object.keys(markerInfo).includes(\"num\")) {\n      markerNums = this.assignMarkerStatusSub(markerNums, markerInfo);\n    }\n\n    return markerNums;\n  }\n\n  static assignSelectable2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.selectable;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveSingle2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveSingle;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveDouble2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveDouble;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveTriple2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveTriple;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static getMarkerStatus(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i];\n  }\n\n  static isMarkerStatusSelectable(markerNums, idx) {\n    return (\n      this.getMarkerStatus(markerNums, idx) ===\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static sortMarkerNums(rcInfo) {\n    // console.log(\"inside sortMarkerNums\");\n\n    let sorted = {\n      nums: [],\n      statuses: []\n    };\n\n    sorted.nums.push(rcInfo.nums.shift());\n    sorted.statuses.push(rcInfo.statuses.shift());\n\n    while (rcInfo.nums.length > 0) {\n      const newNum = rcInfo.nums.shift();\n      const status = rcInfo.statuses.shift();\n      let idx = sorted.nums.length;\n\n      if (newNum !== null) {\n        for (let [i, num] of sorted.nums.entries()) {\n          if (num === null || num > newNum) {\n            idx = i;\n            break;\n          }\n        }\n      }\n\n      sorted.nums.splice(idx, 0, newNum);\n      sorted.statuses.splice(idx, 0, status);\n    }\n\n    return sorted;\n  }\n\n  static findNumInMarker(markerNums, markerInfo) {\n    // console.log(\"inside findNumInMarker\");\n\n    let idx = markerInfo.idx;\n\n    if (markerInfo.num === null) {\n      return idx;\n    }\n\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    const i = nums.indexOf(markerInfo.num);\n\n    if (i >= 0) {\n      idx.i = i;\n      return idx;\n    }\n    return null;\n  }\n\n  static flipMarkerStatus(markerStatus) {\n    return markerStatus === Config.buttonStatus.active\n      ? Config.buttonStatus.waiting\n      : Config.buttonStatus.active;\n  }\n\n  static updateMarkerStatus(markerNums, markerInfo, markerTrace, status) {\n    // console.log(\"inside updateMarkerStatus2Selectable\");\n\n    let targetMarkerInfo = this.findPreviousMarkerInfo(\n      markerNums,\n      markerTrace,\n      markerInfo\n    );\n\n    if (targetMarkerInfo) {\n      targetMarkerInfo.prevStatus = targetMarkerInfo.status;\n      targetMarkerInfo.status = status;\n\n      markerNums = this.assignMarkerStatus(markerNums, targetMarkerInfo);\n    }\n\n    return [markerNums, targetMarkerInfo];\n  }\n\n  static updateMarkerStatus2Selectable(markerNums, markerInfo, markerTrace) {\n    // console.log(\"inside updateMarkerStatus2Selectable\");\n\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static updateMarkerStatus2ExDouble(markerNums, markerInfo, markerTrace) {\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.exclusiveDouble\n    );\n  }\n\n  static updateMarkerStatus2ExTriple(markerNums, markerInfo, markerTrace) {\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.exclusiveTriple\n    );\n  }\n\n  static findPreviousMarkerInfo(markerNums, markerTrace, markerInfo) {\n    if (markerTrace === null || markerTrace.length === 0) {\n      return null;\n    }\n\n    // should rely on newest marker //\n    const revMarkerTrace = markerTrace.reverse();\n    let matchedMarkerInfo = null;\n\n    for (let prevMInfo of revMarkerTrace) {\n      if (this.isMatchTwoMarkers(markerInfo, prevMInfo)) {\n        const idx = this.findNumInMarker(markerNums, prevMInfo);\n\n        if (idx !== null) {\n          matchedMarkerInfo = this.initMarkerInfo(idx, markerInfo.num);\n          matchedMarkerInfo.prevStatus = prevMInfo.status;\n\n          break;\n        }\n      }\n    }\n\n    return matchedMarkerInfo;\n  }\n\n  static getFirstNullIdx(ary) {\n    for (let [i, num] of ary.entries()) {\n      if (num === null) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  static isAllFilled(numMatrix) {\n    return this.countNonZeroCells(numMatrix) === Config.numCells;\n  }\n\n  static extractRowInfo(m, r) {\n    let rowInfo = [];\n\n    if (\n      m.length === Config.size &&\n      m[r].length === Config.size &&\n      m.length > r\n    ) {\n      m[r].forEach((num, c) => {\n        rowInfo.push(this.initCellInfo(this.initCellIdx(r, c), num));\n      });\n    }\n    return rowInfo;\n  }\n\n  static extractColInfo(m, c) {\n    let colInfo = [];\n\n    if (m.length === this.size && m.length > c) {\n      m.forEach((row, r) => {\n        colInfo.push(this.initCellInfo(this.initCellIdx(r, c), row[c]));\n      });\n    }\n    return colInfo;\n  }\n\n  static extactBlockInfo(m, blkIdx) {\n    let blkInfo = [];\n    const indices = this.getBlkIndicesFromIdx(blkIdx, Config.size);\n\n    if (m.length === Config.size && indices.length === Config.size) {\n      indices.forEach(idx => {\n        blkInfo.push(this.initCellInfo(idx, m[idx.r][idx.c]));\n      });\n    }\n    return blkInfo;\n  }\n\n  static findDuplicatedIndices(numMatrix, cellIndices) {\n    // console.log(\"inside findDuplicatedIndices\");\n\n    let dupCellIndices = [];\n    const cellInfoArray = this.getCellInfoArrayFromIndices(\n      numMatrix,\n      cellIndices\n    );\n    const nulllessCellInfoArray = this.removeNullsFromCellInfo(cellInfoArray);\n\n    nulllessCellInfoArray.sort(function(a, b) {\n      if (a.num > b.num) {\n        return 1;\n      }\n      if (a.num < b.num) {\n        return -1;\n      }\n      return 0;\n    });\n\n    for (var i = 0; i < nulllessCellInfoArray.length - 1; i++) {\n      // if duplicates found //\n      if (nulllessCellInfoArray[i + 1].num === nulllessCellInfoArray[i].num) {\n        // if first time or duplicates for different number from the previous duplicates //\n        if (\n          dupCellIndices.length === 0 ||\n          !this.isTwoIdxsSame(\n            dupCellIndices[dupCellIndices.length - 1],\n            nulllessCellInfoArray[i].idx\n          )\n        ) {\n          dupCellIndices.push(nulllessCellInfoArray[i].idx);\n        }\n        dupCellIndices.push(nulllessCellInfoArray[i + 1].idx);\n      }\n    }\n\n    return dupCellIndices;\n  }\n\n  static checkDuplicate(numMatrix) {\n    var duplicates = [];\n\n    const idxSequence = this.getIndexSequence(Config.size);\n\n    Config.restrictionTypesArray.forEach(type => {\n      idxSequence.forEach(idx => {\n        const cellIndices = this.getCellIndices(idx, type);\n        let dup = this.findDuplicatedIndices(numMatrix, cellIndices);\n\n        if (dup.length > 0) {\n          if (duplicates.length > 0) {\n            dup = dup.filter(\n              dupidx => !this.isIdxInDuplicates(duplicates, dupidx)\n            );\n          }\n          duplicates = duplicates.concat(dup);\n        }\n      });\n    });\n\n    return duplicates;\n  }\n\n  static checkCorrectness(ansMatrix, numMatrix) {\n    // console.log(\"inside checkCorrectness\");\n\n    let wrongIdxs = [];\n    if (ansMatrix === null || this.isMatrixAllNull(ansMatrix)) {\n      return [];\n    }\n\n    const idxArray = this.getIndexSequence();\n    for (let r of idxArray) {\n      for (let c of idxArray) {\n        const idx = this.initCellIdx(r, c);\n        if (\n          !this.isNumCorrect(\n            ansMatrix,\n            this.initCellInfo(idx, this.getNumFromNumMatrix(numMatrix, idx))\n          )\n        ) {\n          wrongIdxs.push(this.initCellIdx(r, c));\n        }\n      }\n    }\n\n    return wrongIdxs;\n  }\n\n  static isNumCorrect(ansMatrix, cellInfo) {\n    const ans = this.getNumFromNumMatrix(ansMatrix, cellInfo.idx);\n    return ans === null || cellInfo.num === null || ans === cellInfo.num;\n  }\n\n  static isMatrixAllNull(m) {\n    const ary = this.flattenMatrix2Array(m);\n    return ary.reduce((isAllNull, elem) => elem === null && isAllNull, true);\n  }\n\n  static isTwoArraysSame(ary1, ary2) {\n    // console.log(\"inside isTwoArraysSame\");\n\n    if (\n      ary1 === null ||\n      ary2 === null ||\n      ary1.length === 0 ||\n      ary1.length !== ary2.length\n    ) {\n      return null;\n    }\n\n    return ary1.reduce((isSame, e1, i) => isSame && e1 === ary2[i], true);\n  }\n\n  static isAllNumbersSame(nums) {\n    if (nums.length < 2) {\n      return false;\n    }\n\n    return this.removeDuplicatedNumbers(nums).length === 1;\n  }\n\n  static isAllStatusesSame(statuses) {\n    if (statuses.length < 2) {\n      return false;\n    }\n\n    const statusList = statuses.reduce(\n      (statusList, status) =>\n        statusList.includes(status) ? statusList : [...statusList, status],\n      []\n    );\n\n    return statusList.length === 1;\n  }\n\n  static isTwoIdxsSame(idx1, idx2) {\n    return JSON.stringify(idx1) === JSON.stringify(idx2);\n  }\n\n  static isTwoIdxSetsSame(idxs1, idxs2) {\n    for (let [i, idx1] of idxs1.entries()) {\n      if (!this.isTwoIdxsSame(idx1, idxs2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isInSameRowCol(idxs, directions = [\"r\", \"c\"]) {\n    for (let rc of directions) {\n      const rcIdxs = idxs.map(idx => idx[rc]);\n      if (this.isAllNumbersSame(rcIdxs)) {\n        // return true;\n        return rc;\n      }\n    }\n    return false;\n  }\n\n  static isInSameBlock(idxs) {\n    const blkIdxs = idxs.map(idx => this.getBlockIdxFromCellIdx(idx));\n    if (this.isAllNumbersSame(blkIdxs)) {\n      return blkIdxs[0];\n    }\n    return false;\n  }\n\n  static isNewPairCell(pairCell, exclusiveCandidates) {\n    for (let exCand of exclusiveCandidates) {\n      if (this.isTwoIdxsSame(pairCell, exCand)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static checkTwoIdxsInSameBlock(idx1, idx2) {\n    const blkIdx1 = this.getBlockIdxFromCellIdx(idx1);\n    const blkIdx2 = this.getBlockIdxFromCellIdx(idx2);\n\n    if (blkIdx1 === blkIdx2) {\n      return blkIdx1;\n    }\n    return -1;\n  }\n\n  static checkIdxsInSameBlock(idxs) {\n    const blkIdxs = idxs.map(idx => this.getBlockIdxFromCellIdx(idx));\n\n    if (this.isAllNumbersSame(blkIdxs)) {\n      return blkIdxs[0];\n    }\n    return -1;\n  }\n\n  static removeDuplicatedNumbers(nums) {\n    // console.log(\"inside removeDuplicatedNumbers\");\n\n    const numsArray = nums.reduce((ary, num) => {\n      ary.includes(num) || ary.push(num);\n      return ary;\n    }, []);\n\n    return numsArray;\n  }\n\n  static removeDuplicatedIndices(idxsArray) {\n    const uniqueIndices = idxsArray.reduce((ary, idx) => {\n      this.isInCellInfoArray(ary, idx) || ary.push(idx);\n      return ary;\n    }, []);\n    return uniqueIndices;\n  }\n\n  static isIdxInDuplicates(duplicates, idx) {\n    return duplicates.filter(didx => this.isTwoIdxsSame(didx, idx)).length > 0;\n  }\n\n  static getIsDuplicatedFromBlockNum(duplicates, blockNum) {\n    const cellIndices = this.getBlkIndicesFromNum(blockNum);\n\n    return this.getIsDuplicatedFromIndices(duplicates, cellIndices);\n  }\n\n  static getIsDuplicatedFromIndices(duplicates, cellIndices) {\n    return cellIndices.map(idx => this.isIdxInDuplicates(duplicates, idx));\n  }\n\n  static getAppearanceMatrixFromNumMatrix(numMatrix) {\n    let appearanceMatrix = this.initMatrix(Config.candidateStatus.candidate);\n\n    const allCellIdxs = this.getAllCellIndicies();\n    for (let idx of allCellIdxs) {\n      const num = this.getNumFromNumMatrix(numMatrix, idx);\n      if (num !== null) {\n        const appearance = this.appendNum(Config.candidateStatus.selected, num);\n\n        appearanceMatrix = this.assignAppearance(\n          appearanceMatrix,\n          idx,\n          appearance\n        );\n      }\n    }\n\n    return appearanceMatrix;\n  }\n\n  static getAppearanceMatrixFromCandidates(\n    candidates,\n    // helpMode,\n    multipleNums,\n    candidateLevel\n  ) {\n    // console.log(\"inside getAppearanceMatrixFromCandidates\");\n\n    // console.log(\"multipleNums\");\n    // console.log(multipleNums);\n\n    let appearanceMatrix = this.initMatrix(Config.candidateStatus.candidate);\n    const removeTypes = Config.wideRemovedList;\n    const allCellIdxs = this.getAllCellIndicies();\n\n    let selected = [];\n    let selectable = [];\n\n    selected = multipleNums.map(num =>\n      this.appendNum(Config.candidateStatus.selected, num)\n    );\n\n    selectable = multipleNums.map(num =>\n      this.appendNum(Config.candidateStatus.selectable, num)\n    );\n\n    for (let idx of allCellIdxs) {\n      const targetStatuses = this.getCandidateStatuses(\n        candidates,\n        idx,\n        multipleNums\n      );\n\n      const combinedStatus = this.combineStatuses(targetStatuses);\n      const i = targetStatuses.indexOf(combinedStatus);\n\n      let appearance = Config.candidateStatus.candidate;\n\n      if (this.isSelected(combinedStatus)) {\n        appearance = selected[i];\n      } else if (this.hasSelected(candidates, idx)) {\n        appearance = Config.candidateStatus.shadowed;\n      } else if (candidateLevel > 0) {\n        if (removeTypes.includes(combinedStatus)) {\n          appearance = Config.candidateStatus.inhibited;\n        } else if (candidateLevel > 1 && this.isSelectable(combinedStatus)) {\n          appearance = selectable[i];\n        }\n      }\n\n      appearanceMatrix = this.assignAppearance(\n        appearanceMatrix,\n        idx,\n        appearance\n      );\n    }\n\n    return appearanceMatrix;\n  }\n\n  static setSingleNumExclusiveCandidatesA(dataset, num, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidatesA\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let candidateTrace = [];\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveMultiples4marker.includes(traceItem.status)\n    );\n\n    const idxSequence = this.getIndexSequence();\n    const expectedLength = this.getUnionSizes(Config.sizeB);\n\n    for (let blkIdx of idxSequence) {\n      const cellIndices = this.getBlkIndicesFromIdx(blkIdx);\n\n      let candidateCells = this.getSingleNumCandidateCells(\n        candidates,\n        num,\n        cellIndices,\n        Config.processTypes.singleNum\n      );\n\n      if (!expectedLength.includes(candidateCells.length)) {\n        continue;\n      }\n\n      const rcType = this.isInSameRowCol(candidateCells);\n\n      if (!rcType) {\n        continue;\n      }\n\n      const direction = this.convertRCType2Direction(rcType);\n\n      let targetCellInfo = this.initCellInfo(\n        candidateCells,\n        num,\n        Config.candidateStatus.exclusiveSingle,\n        direction,\n        blkIdx\n      );\n\n      let markerInfo = null;\n      markerInfo = this.convertCellInfo2MarkerInfo(targetCellInfo);\n\n      if (\n        this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) ||\n        !this.isStatusWorth2Store(prevMarkerTrace, markerInfo)\n      ) {\n        continue;\n      }\n\n      let updateCellIdxs = this.getCandidateCellIndices(\n        candidates,\n        targetCellInfo.idxs[0][rcType],\n        direction\n      );\n\n      updateCellIdxs = this.getSingleNumCandidateCells(\n        candidates,\n        num,\n        updateCellIdxs,\n        Config.processTypes.candidates\n      );\n\n      updateCellIdxs = updateCellIdxs.filter(\n        idx => !this.isIdxInDuplicates(targetCellInfo.idxs, idx)\n      );\n\n      if (isSkipIneffective && updateCellIdxs.length === 0) {\n        continue;\n      }\n\n      [candidates, targetCellInfo] = this.assignCandidateStatus4SingleNum(\n        candidates,\n        targetCellInfo,\n        Config.candidateStatus.exclusiveSingle\n      );\n\n      if (targetCellInfo) {\n        candidateTrace.push(targetCellInfo);\n      }\n\n      let updateCellInfo = this.initCellInfo(\n        updateCellIdxs,\n        num,\n        Config.candidateStatus.removable\n      );\n\n      [candidates, updateCellInfo] = this.assignCandidateStatus4SingleNum(\n        candidates,\n        updateCellInfo,\n        Config.candidateStatus.removable\n      );\n\n      if (this.isCellsAllWideRemoved(candidates, updateCellInfo.idxs)) {\n        return null;\n      }\n\n      if (updateCellInfo) {\n        candidateTrace.push(updateCellInfo);\n      }\n\n      exclusiveCandidates.push(targetCellInfo);\n\n      markerNums = this.setMarkerNum(markerNums, markerInfo);\n\n      trace.push(\n        this.initTraceItem(\n          null,\n          candidateTrace,\n          [markerInfo],\n          Config.operationTypes.auto\n        )\n      );\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3)\n      ) {\n        return dataset;\n      }\n    }\n\n    return dataset;\n  }\n\n  static getSingleNumBTargetIdxs(candidates, num, direction, rcIdx) {\n    let candidateIdxs = this.getSingleNumCandidateCells(\n      candidates,\n      num,\n      this.getCellIndices(rcIdx, direction),\n      Config.processTypes.candidates\n    );\n\n    if (candidateIdxs.length > Config.sizeB) {\n      return [null, null];\n    }\n\n    const blkIdx = this.isInSameBlock(candidateIdxs);\n\n    if (typeof blkIdx !== \"number\") {\n      return [null, null];\n    }\n\n    return [candidateIdxs, blkIdx];\n  }\n\n  static getSingleNumBUntargetIdxs(candidates, num, targetIdxs, blkIdx) {\n    let untargetIdxs = this.getBlkIndicesFromIdx(blkIdx);\n    untargetIdxs = untargetIdxs.filter(\n      idx => !this.isIdxInDuplicates(targetIdxs, idx)\n    );\n    untargetIdxs = this.getSingleNumCandidateCells(\n      candidates,\n      num,\n      untargetIdxs,\n      Config.processTypes.candidates\n    );\n\n    return untargetIdxs;\n  }\n\n  static setSingleNumExclusiveCandidatesB(dataset, num, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidatesB\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    const idxSequence = this.getIndexSequence();\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveMultiples4marker.includes(traceItem.status)\n    );\n\n    let candidateTrace = [];\n\n    for (let direction of Config.restrictionTypesStraightArray) {\n      for (let rc of idxSequence) {\n        let targetIdxs = [];\n        let blkIdx = null;\n        [targetIdxs, blkIdx] = this.getSingleNumBTargetIdxs(\n          candidates,\n          num,\n          direction,\n          rc\n        );\n\n        if (targetIdxs === null) {\n          continue;\n        }\n\n        const untargetIdxs = this.getSingleNumBUntargetIdxs(\n          candidates,\n          num,\n          targetIdxs,\n          blkIdx\n        );\n\n        if (isSkipIneffective && untargetIdxs.length === 0) {\n          continue;\n        }\n\n        let targetCellInfo = this.initCellInfo(\n          targetIdxs,\n          num,\n          Config.candidateStatus.exclusiveSingle,\n          direction,\n          blkIdx\n        );\n\n        const markerInfo = this.convertCellInfo2MarkerInfo(targetCellInfo);\n\n        if (\n          this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) ||\n          !this.isStatusWorth2Store(prevMarkerTrace, markerInfo)\n        ) {\n          continue;\n        }\n\n        [candidates, targetCellInfo] = this.assignCandidateStatus4SingleNum(\n          candidates,\n          targetCellInfo,\n          Config.candidateStatus.exclusiveSingle\n        );\n\n        if (targetCellInfo) {\n          candidateTrace.push(targetCellInfo);\n        }\n\n        let untargetCellInfo = this.initCellInfo(\n          untargetIdxs,\n          num,\n          Config.candidateStatus.removable\n        );\n\n        [candidates, untargetCellInfo] = this.assignCandidateStatus4SingleNum(\n          candidates,\n          untargetCellInfo,\n          Config.candidateStatus.removable\n        );\n\n        if (this.isCellsAllWideRemoved(candidates, untargetCellInfo.idxs)) {\n          return null;\n        }\n\n        if (untargetCellInfo) {\n          candidateTrace.push(untargetCellInfo);\n        }\n\n        exclusiveCandidates.push(targetCellInfo);\n\n        markerNums = this.setMarkerNum(markerNums, markerInfo);\n\n        trace.push(\n          this.initTraceItem(\n            null,\n            candidateTrace,\n            [markerInfo],\n            Config.operationTypes.auto\n          )\n        );\n\n        if (\n          isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3)\n        ) {\n          return dataset;\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static traceBackCandidates(candidates, candInfos) {\n    // console.log(\"inside traceBackCandidates\");\n\n    for (let candInfo of candInfos) {\n      if (\"idxs\" in candInfo) {\n        if (\"prevStatuses\" in candInfo) {\n          for (let [i, idx] of candInfo.idxs.entries()) {\n            const cellInfo = this.initCellInfo(idx, candInfo.num);\n            candidates = this.assignStatus2Candidates(\n              candidates,\n              cellInfo,\n              candInfo.prevStatuses[i]\n            );\n          }\n        } else {\n          continue;\n        }\n      } else if (\"nums\" in candInfo) {\n        if (\"prevStatuses\" in candInfo) {\n          for (let [i, num] of candInfo.nums.entries()) {\n            const cellInfo = this.initCellInfo(candInfo.idx, num);\n            candidates = this.assignStatus2Candidates(\n              candidates,\n              cellInfo,\n              candInfo.prevStatuses[i]\n            );\n          }\n        } else {\n          continue;\n        }\n      } else {\n        candidates = this.assignStatus2Candidates(\n          candidates,\n          candInfo,\n          candInfo.prevStatus\n        );\n      }\n    }\n\n    return candidates;\n  }\n\n  static initDataset() {\n    return {\n      candidates: this.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      markerNums: this.initMarkerNums(),\n      trace: []\n    };\n  }\n\n  static initCandidates(numMatrix, conditions) {\n    // console.log(\"inside initCandidates\");\n\n    let dataset = Util.initDataset();\n    dataset.numMatrix = numMatrix;\n    // dataset.gameLevel = 0;\n\n    dataset = this.setCandidates(dataset, conditions);\n\n    return dataset;\n  }\n\n  static setCandidates(dataset, conditions) {\n    // console.log(\"inside setCandidates\");\n\n    dataset.traceItems = [];\n\n    let { numMatrix, candidates, exclusiveCandidates } = dataset;\n\n    const {\n      candidateLevel,\n      helpMode,\n      isStepByStep,\n      isSkipLevel1\n      // isMarkerOff\n    } = conditions;\n\n    const processType = helpMode;\n    const maxLoopNum =\n      helpMode === Config.processTypes.singleNum ? 1 : Config.maxLoopNum;\n\n    let helperLevel = 0;\n\n    if (!isSkipLevel1) {\n      helperLevel = 1;\n\n      candidates = this.setCandidatesLevel1(\n        candidates,\n        numMatrix,\n        candidateLevel\n      );\n\n      if (\n        typeof dataset.gameLevel !== \"undefined\" &&\n        dataset.gameLevel < helperLevel\n      ) {\n        dataset.gameLevel = helperLevel;\n      }\n    }\n\n    // There is a cell full of wide-removed //\n    if (candidates === null) {\n      return null;\n    }\n\n    if (\n      this.isAllWideSelected(candidates) ||\n      candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.singleCandidate)\n    ) {\n      return dataset;\n    }\n\n    for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      let exclusiveCandidateLength = exclusiveCandidates.length;\n      // let exclusiveCandidateLengthLevel6 = exclusiveCandidates.length;\n\n      for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n        let exclusiveCandidateLengthLevel5 = exclusiveCandidates.length;\n\n        for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n          let exclusiveCandidateLengthLevel4 = exclusiveCandidates.length;\n\n          for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n            let exclusiveCandidateLengthLevel3 = exclusiveCandidates.length;\n\n            for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n              let exclusiveCandidateLengthLevel2 = exclusiveCandidates.length;\n              helperLevel = 2;\n\n              dataset = this.setSelectableA(dataset, conditions);\n\n              // There is a cell full of wide-removed //\n              if (dataset === null) {\n                return null;\n              }\n\n              if (\n                exclusiveCandidates.length > exclusiveCandidateLengthLevel2 &&\n                typeof dataset.gameLevel !== \"undefined\" &&\n                dataset.gameLevel < helperLevel\n              ) {\n                dataset.gameLevel = helperLevel;\n              }\n\n              if (\n                this.isAllWideSelected(candidates) ||\n                (isStepByStep &&\n                  Config.stepByStepLevels.includes(\n                    Config.candidateTypes.singleCandidate\n                  ) &&\n                  exclusiveCandidates.length > exclusiveCandidateLength)\n              ) {\n                return dataset;\n              }\n\n              if (processType === Config.processTypes.candidates) {\n                dataset = this.setSelectableB(dataset, conditions);\n\n                // There is a cell full of wide-removed //\n                if (dataset === null) {\n                  return null;\n                }\n\n                if (\n                  exclusiveCandidates.length > exclusiveCandidateLengthLevel2 &&\n                  typeof dataset.gameLevel !== \"undefined\" &&\n                  dataset.gameLevel < helperLevel\n                ) {\n                  dataset.gameLevel = helperLevel;\n                }\n\n                if (\n                  this.isAllWideSelected(candidates) ||\n                  (isStepByStep &&\n                    Config.stepByStepLevels.includes(\n                      Config.candidateTypes.singleCandidate\n                    ) &&\n                    exclusiveCandidates.length > exclusiveCandidateLength)\n                ) {\n                  return dataset;\n                }\n              }\n\n              if (\n                exclusiveCandidates.length === exclusiveCandidateLengthLevel2\n              ) {\n                break;\n              }\n            }\n\n            if (\n              candidateLevel <\n              this.getLevelNumFromFunctionName(\n                Config.candidateTypes.singleExclusive\n              )\n            ) {\n              if (exclusiveCandidates.length === exclusiveCandidateLength) {\n                break;\n              }\n\n              continue;\n            }\n\n            // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n            helperLevel = 3;\n\n            dataset = this.setSingleNumExclusiveCandidates(dataset, conditions);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return null;\n            }\n\n            if (\n              exclusiveCandidates.length > exclusiveCandidateLengthLevel3 &&\n              typeof dataset.gameLevel !== \"undefined\" &&\n              dataset.gameLevel < helperLevel\n            ) {\n              dataset.gameLevel = helperLevel;\n            }\n\n            if (\n              this.isAllWideSelected(candidates) ||\n              (isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateLevelTypes.level3\n                ) &&\n                exclusiveCandidates.length > exclusiveCandidateLength)\n            ) {\n              return dataset;\n            }\n\n            if (exclusiveCandidates.length === exclusiveCandidateLengthLevel3) {\n              break;\n            }\n          }\n\n          if (\n            candidateLevel <\n            this.getLevelNumFromFunctionName(\n              Config.candidateTypes.multipleExclusive\n            )\n          ) {\n            if (exclusiveCandidates.length === exclusiveCandidateLength) {\n              break;\n            }\n            continue;\n          }\n\n          // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n          helperLevel = 4;\n\n          dataset = this.setExclusiveUnionA(dataset, conditions);\n\n          // There is a cell full of wide-removed //\n          if (dataset === null) {\n            return null;\n          }\n\n          if (\n            exclusiveCandidates.length > exclusiveCandidateLengthLevel4 &&\n            typeof dataset.gameLevel !== \"undefined\" &&\n            dataset.gameLevel < helperLevel\n          ) {\n            dataset.gameLevel = helperLevel;\n          }\n\n          if (\n            this.isAllWideSelected(candidates) ||\n            (isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level3\n              ) &&\n              exclusiveCandidates.length > exclusiveCandidateLength)\n          ) {\n            return dataset;\n          }\n\n          dataset = this.setExclusiveUnionB(dataset, conditions);\n\n          // There is a cell full of wide-removed //\n          if (dataset === null) {\n            return null;\n          }\n\n          if (\n            exclusiveCandidates.length > exclusiveCandidateLengthLevel4 &&\n            typeof dataset.gameLevel !== \"undefined\" &&\n            dataset.gameLevel < helperLevel\n          ) {\n            dataset.gameLevel = helperLevel;\n          }\n\n          if (\n            this.isAllWideSelected(candidates) ||\n            (isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              ) &&\n              exclusiveCandidates.length > exclusiveCandidateLength)\n          ) {\n            return dataset;\n          }\n\n          if (exclusiveCandidates.length === exclusiveCandidateLengthLevel4) {\n            break;\n          }\n        }\n\n        if (\n          candidateLevel <\n          this.getLevelNumFromFunctionName(Config.candidateTypes.square)\n        ) {\n          if (exclusiveCandidates.length === exclusiveCandidateLength) {\n            break;\n          }\n          continue;\n        }\n\n        // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n        helperLevel = 5;\n\n        dataset = this.setSquareCandidates(dataset, conditions);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return null;\n        }\n\n        if (\n          exclusiveCandidates.length > exclusiveCandidateLengthLevel5 &&\n          typeof dataset.gameLevel !== \"undefined\" &&\n          dataset.gameLevel < helperLevel\n        ) {\n          dataset.gameLevel = helperLevel;\n        }\n\n        if (\n          this.isAllWideSelected(candidates) ||\n          (isStepByStep &&\n            Config.stepByStepLevels.includes(\n              Config.candidateLevelTypes.level5\n            ) &&\n            exclusiveCandidates.length > exclusiveCandidateLength)\n        ) {\n          return dataset;\n        }\n\n        if (exclusiveCandidates.length === exclusiveCandidateLengthLevel5) {\n          break;\n        }\n      }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.assumptionTest)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      // exclusiveCandidateLengthTmp = exclusiveCandidates.length;\n      helperLevel = 6;\n\n      dataset = this.setAssumptionTest(dataset, conditions);\n\n      if (\n        exclusiveCandidates.length > exclusiveCandidateLength &&\n        typeof dataset.gameLevel !== \"undefined\" &&\n        dataset.gameLevel < helperLevel\n      ) {\n        dataset.gameLevel = helperLevel;\n      }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level6) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (exclusiveCandidates.length === exclusiveCandidateLength) {\n        break;\n      }\n    }\n\n    return dataset;\n  }\n\n  static setCandidatesLevel1(candidates, numMatrix, nLevel = 1) {\n    // console.log(\"inside setCandidatesLevel1\");\n\n    const allCellIdxs = this.getAllCellIndicies();\n\n    for (let idx of allCellIdxs) {\n      const num = this.getNumFromNumMatrix(numMatrix, idx);\n\n      if (num !== null && num > 0 && num <= Config.size) {\n        const targetCellInfo = Util.initCellInfo(idx, num);\n\n        [candidates] = this.updateCandidateOfTheCell(\n          candidates,\n          targetCellInfo\n        );\n\n        if (nLevel > 0) {\n          [candidates] = this.updateRelatedCells(\n            candidates,\n            targetCellInfo,\n            nLevel,\n            Config.processTypes.insertion\n          );\n\n          // There is a cell full of wide-removed //\n          if (candidates === null) {\n            return null;\n          }\n        }\n      }\n    }\n\n    return candidates;\n  }\n\n  static setSelectableA(dataset, conditions) {\n    // console.log(\"inside setSelectableA\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep\n    } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    let candidateTrace = [];\n    let candidateTraceTmp = [];\n\n    const processType = helpMode;\n    const idxSequence = this.getIndexSequence();\n    const numSequence =\n      helpMode === Config.helpMode.singleNum\n        ? [singleNumValue]\n        : this.getNsequence();\n\n    for (let num of numSequence) {\n      for (let type of Config.restrictionTypesArray) {\n        for (let rcbIdx of idxSequence) {\n          const cellIndices = this.getCellIndices(rcbIdx, type);\n\n          let candidateCells = this.getSingleNumCandidateCells(\n            candidates,\n            num,\n            cellIndices,\n            Config.processTypes.singleNum\n          );\n\n          if (candidateCells.length !== 1) {\n            continue;\n          }\n\n          const idx = candidateCells[0];\n\n          const targetCellInfo = this.initCellInfo(\n            idx,\n            num,\n            Config.candidateStatus.selectable\n          );\n\n          if (\n            this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo)\n          ) {\n            continue;\n          }\n\n          // set status of the cell //\n          [candidates, candidateTrace] = this.updateCandidateOfTheCell(\n            candidates,\n            targetCellInfo,\n            processType\n          );\n\n          [candidates, candidateTraceTmp] = this.updateRelatedCells(\n            candidates,\n            targetCellInfo,\n            candidateLevel,\n            processType\n          );\n\n          // There is a cell full of wide-removed //\n          if (candidates === null) {\n            return null;\n          }\n\n          candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n          let markerTrace = [];\n          const markerIdxs = this.getMarkerIdxsFromCellIdx(targetCellInfo.idx);\n\n          for (let markerIdx of markerIdxs) {\n            let markerTraceTmp = null;\n            let targetMarkerInfo = this.initMarkerInfo(\n              markerIdx,\n              targetCellInfo.num\n            );\n\n            [markerNums, markerTraceTmp] = this.updateMarkerStatus2Selectable(\n              markerNums,\n              targetMarkerInfo,\n              prevMarkerTrace\n            );\n\n            if (markerTraceTmp) {\n              markerTrace.push(markerTraceTmp);\n            }\n          }\n\n          if (markerTrace.length === 0) {\n            trace.push(\n              this.initTraceItemCandidate(\n                candidateTrace,\n                Config.operationTypes.auto\n              )\n            );\n          } else {\n            trace.push(\n              this.initTraceItem(\n                null,\n                candidateTrace,\n                markerTrace,\n                Config.operationTypes.auto\n              )\n            );\n          }\n\n          exclusiveCandidates.push(targetCellInfo);\n\n          if (\n            isStepByStep &&\n            Config.stepByStepLevels.includes(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            return dataset;\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static setSelectableB(dataset, conditions) {\n    // console.log(\"inside setSelectableB\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const { candidateLevel, helpMode, isStepByStep } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const processType = Config.processTypes.candidates;\n    let selectableCells = [];\n\n    selectableCells = this.findSingleCandidateCellsB(\n      candidates,\n      exclusiveCandidates,\n      helpMode,\n      isStepByStep\n    );\n\n    for (let cellInfo of selectableCells) {\n      let candidateTrace = [];\n      let candidateTraceTmp = [];\n\n      if (this.isInExclusiveCandidates(exclusiveCandidates, cellInfo)) {\n        continue;\n      }\n\n      [candidates, candidateTraceTmp] = this.updateCandidateOfTheCell(\n        candidates,\n        cellInfo,\n        processType\n      );\n\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n      [candidates, candidateTraceTmp] = this.updateRelatedCells(\n        candidates,\n        cellInfo,\n        candidateLevel,\n        processType\n      );\n\n      // There is a cell full of wide-removed //\n      if (candidates === null) {\n        return null;\n      }\n\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n      let markerTrace = [];\n\n      const markerIdxs = this.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n      for (let markerIdx of markerIdxs) {\n        let markerTraceTmp = null;\n        let targetMarkerInfo = this.initMarkerInfo(markerIdx, cellInfo.num);\n\n        [markerNums, markerTraceTmp] = this.updateMarkerStatus2Selectable(\n          markerNums,\n          targetMarkerInfo,\n          prevMarkerTrace\n        );\n\n        if (markerTraceTmp) {\n          markerTrace.push(markerTraceTmp);\n        }\n      }\n\n      if (markerTrace.length === 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      } else {\n        trace.push(\n          this.initTraceItem(\n            null,\n            candidateTrace,\n            markerTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n\n      exclusiveCandidates.push(cellInfo);\n    }\n\n    return dataset;\n  }\n\n  static setSingleNumExclusiveCandidates(dataset, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidates\");\n\n    let { exclusiveCandidates } = dataset;\n\n    const { singleNumValue, isStepByStep } = conditions;\n\n    const exclusiveCandidateLength = exclusiveCandidates.length;\n\n    let numSequence = this.getNsequence();\n    if (singleNumValue) {\n      numSequence = [singleNumValue];\n    }\n\n    for (let num of numSequence) {\n      dataset = this.setSingleNumExclusiveCandidatesA(dataset, num, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n        exclusiveCandidates.length > exclusiveCandidateLength\n      ) {\n        return dataset;\n      }\n\n      dataset = this.setSingleNumExclusiveCandidatesB(dataset, num, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n        exclusiveCandidates.length > exclusiveCandidateLength\n      ) {\n        return dataset;\n      }\n    }\n\n    return dataset;\n  }\n\n  static setExclusiveUnionA(dataset, conditions) {\n    // console.log(\"inside setExclusiveUnionA\");\n\n    // union size 2 finds 2 cells with the same two candidates //\n    // such as [5, 7] and [5, 7] from cells with 2 remaining candidates //\n    // union size 3 finds 3 cells with three candidates //\n    // such as [1, 4, 8], [1, 4], [4, 8] from cells with 2 or 3 remaining candidates //\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    // const { isStepByStep, isSkipIneffective, isMarkerOff } = conditions;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const idxArray = this.getIndexSequence();\n    const unionSizes = this.getUnionSizes();\n\n    const candNumMatrix = this.getCandidateNumMatrix(candidates);\n\n    let candidateTrace = [];\n\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        const cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        const cellIndicesLength = cellIndices.length;\n\n        for (let unionSize of unionSizes) {\n          const conditions = {\n            type,\n            rcbIdx,\n            unionSize\n          };\n\n          const candLengths = this.getUnionSizes(unionSize);\n\n          // let candidateCellIndices = cellIndices.filter(idx => {\n          //   return candLengths.includes(\n          //     this.countNumsInCandidateNumMatrix(candNumMatrix, idx)\n          //   );\n          // });\n\n          let candidateCellIndices = cellIndices.filter(idx =>\n            candLengths.includes(\n              this.countNumsInCandidateNumMatrix(candNumMatrix, idx)\n            )\n          );\n\n          if (\n            cellIndicesLength < candidateCellIndices.length + 2 ||\n            candidateCellIndices.length < unionSize\n          ) {\n            continue;\n          }\n\n          //   if (\n          //   cellIndicesLength >= candidateCellIndices.length + 2 &&\n          //   candidateCellIndices.length >= unionSize\n          // ) {\n\n          // let cellInfoArray = candidateCellIndices.map(idx => {\n          //   return this.initCellInfo(\n          //     idx,\n          //     this.getNumsFromCandidateNumMatrix(candNumMatrix, idx)\n          //   );\n          // });\n\n          let cellInfoArray = candidateCellIndices.map(idx =>\n            this.initCellInfo(\n              idx,\n              this.getNumsFromCandidateNumMatrix(candNumMatrix, idx)\n            )\n          );\n\n          const unionCells = this.findExclusiveUnionA(\n            cellInfoArray,\n            conditions\n          );\n\n          // unacceptable condition //\n          if (unionCells === null) {\n            console.log(\"findExclusiveUnionA found an illegal condtion.\");\n            return null;\n          }\n\n          for (let unionCell of unionCells) {\n            if (\n              this.isInCellInfoArrayIgnoringRCBInfo(\n                exclusiveCandidates,\n                unionCell\n              )\n            ) {\n              continue;\n            }\n\n            // if (\n            //   !this.isInCellInfoArrayIgnoringRCBInfo(\n            //     exclusiveCandidates,\n            //     unionCell\n            //   )\n            // ) {\n            [candidates, candidateTrace] = this.updateCandidates4UnionA(\n              candidates,\n              unionCell,\n              isSkipIneffective\n            );\n\n            // a cell with no candidates //\n            if (candidates === null) {\n              return null;\n            }\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            exclusiveCandidates.push(unionCell);\n\n            // if (typeof isMarkerOff !== \"undefined\" || !isMarkerOff) {\n            const markerInfos = this.convertCellInfo2MarkerInfo(unionCell);\n\n            let markerTrace = [];\n            if (markerInfos && markerInfos.constructor === Array) {\n              for (let markerInfo of markerInfos) {\n                let targetMarkerInfo = this.findPreviousMarkerInfo(\n                  markerNums,\n                  prevMarkerTrace,\n                  markerInfo\n                );\n\n                if (targetMarkerInfo) {\n                  let markerTraceTmp = null;\n                  [markerNums, markerTraceTmp] = this.updateMarkerStatus(\n                    markerNums,\n                    markerInfo,\n                    prevMarkerTrace,\n                    unionCell.status\n                  );\n\n                  if (markerTraceTmp) {\n                    markerTrace.push(markerTraceTmp);\n                  }\n                } else {\n                  markerNums = this.setMarkerNum(markerNums, markerInfo);\n                  markerTrace.push(markerInfo);\n                }\n              }\n            }\n\n            if (markerTrace.length === 0) {\n              trace.push(\n                this.initTraceItemCandidate(\n                  candidateTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            } else {\n              trace.push(\n                this.initTraceItem(\n                  null,\n                  candidateTrace,\n                  markerTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            }\n            // }\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              )\n            ) {\n              return dataset;\n            }\n            // }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static findExclusiveUnionA(cellInfoArray, conditions) {\n    // console.log(\"inside findExclusiveUnionA\");\n\n    let unionCells = [];\n    const candIdxArray = this.getIndexSequence(cellInfoArray.length);\n\n    for (let unionIdxs of k_combinations(candIdxArray, conditions.unionSize)) {\n      const idxs = unionIdxs.map(i => cellInfoArray[i].idx);\n\n      if (\n        conditions.type === Config.restrictionTypes.blk &&\n        this.isInSameRowCol(idxs)\n      ) {\n        continue;\n      }\n      const numsUnion = this.getUnionNumbers(\n        unionIdxs.map(i => cellInfoArray[i].nums)\n      );\n\n      if (numsUnion.length === conditions.unionSize) {\n        const unionCell = this.initCellInfo(\n          idxs,\n          numsUnion,\n          Config.wideExclusiveStatuses[conditions.unionSize],\n          conditions.type,\n          conditions.rcbIdx,\n          conditions.unionSize\n        );\n\n        unionCells.push(unionCell);\n      } else if (numsUnion.length < conditions.unionSize) {\n        // this should not exist. something wrong //\n        return null;\n      }\n    }\n    return unionCells;\n  }\n\n  static setExclusiveUnionB(dataset, conditions) {\n    // console.log(\"inside setExclusiveUnionB\");\n\n    // pair/triple/quadruple type B //\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    // const { isStepByStep, isSkipIneffective, isMarkerOff } = conditions;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const idxArray = this.getIndexSequence();\n    const numArray = this.getNsequence();\n    const unionSizes = this.getUnionSizes();\n\n    let candidateTrace = [];\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        let cellInfos = [];\n        const cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        // collect cellInfos for candidates //\n        for (let num of numArray) {\n          const cellInfo = this.extractCellInfoFromCandidate(\n            candidates,\n            num,\n            cellIndices\n          );\n\n          if (cellInfo !== null) {\n            cellInfos.push(cellInfo);\n          }\n        }\n\n        const cellLength = cellInfos.length;\n        if (cellLength === 0) {\n          continue;\n        }\n\n        for (let unionSize of unionSizes) {\n          if (cellLength < unionSize + 2) {\n            continue;\n          }\n\n          const conditions = {\n            type,\n            rcbIdx,\n            unionSize\n          };\n\n          let unionCellArrayB = this.findExclusiveUnionB(cellInfos, conditions);\n\n          // console.log(\"unionCellArrayB\");\n          // console.log(unionCellArrayB);\n\n          for (let unionCellB of unionCellArrayB) {\n            if (\n              this.isInCellInfoArrayIgnoringRCBInfo(\n                exclusiveCandidates,\n                unionCellB\n              )\n            ) {\n              continue;\n            }\n\n            // if (\n            //   !this.isInCellInfoArrayIgnoringRCBInfo(\n            //     exclusiveCandidates,\n            //     unionCellB\n            //   )\n            // ) {\n\n            [candidates, candidateTrace] = this.updateCandidates4UnionB(\n              candidates,\n              unionCellB,\n              isSkipIneffective\n            );\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            exclusiveCandidates.push(unionCellB);\n\n            // if (typeof isMarkerOff !== \"undefined\" || !isMarkerOff) {\n            const markerInfos = this.convertCellInfo2MarkerInfo(unionCellB);\n\n            let markerTrace = [];\n            if (markerInfos && markerInfos.constructor === Array) {\n              for (let markerInfo of markerInfos) {\n                let targetMarkerInfo = this.findPreviousMarkerInfo(\n                  markerNums,\n                  prevMarkerTrace,\n                  markerInfo\n                );\n\n                if (targetMarkerInfo) {\n                  let markerTraceTmp = null;\n                  [markerNums, markerTraceTmp] = this.updateMarkerStatus(\n                    markerNums,\n                    markerInfo,\n                    prevMarkerTrace,\n                    unionCellB.status\n                  );\n\n                  if (markerTraceTmp) {\n                    markerTrace.push(markerTraceTmp);\n                  }\n                } else {\n                  markerNums = this.setMarkerNum(markerNums, markerInfo);\n                  markerTrace.push(markerInfo);\n                }\n              }\n            }\n\n            if (markerTrace.length === 0) {\n              trace.push(\n                this.initTraceItemCandidate(\n                  candidateTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            } else {\n              trace.push(\n                this.initTraceItem(\n                  null,\n                  candidateTrace,\n                  markerTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            }\n            // }\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              )\n            ) {\n              return dataset;\n            }\n            // }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static findExclusiveUnionB(cellInfos, conditions) {\n    // console.log(\"inside findExclusiveUnionB\");\n\n    const unionSizes = this.getUnionSizes(conditions.unionSize);\n    let unionCellArrayB = [];\n    let targetCellInfos = cellInfos.filter(cellInfo =>\n      unionSizes.includes(cellInfo.idxs.length)\n    );\n    const candIdxArray = this.getIndexSequence(targetCellInfos.length);\n\n    for (let unionIdxs of k_combinations(candIdxArray, conditions.unionSize)) {\n      const idxsArray = unionIdxs.map(i => targetCellInfos[i].idxs);\n      const idxsUnion = this.getUnionIndices(idxsArray);\n\n      if (idxsUnion.length === conditions.unionSize) {\n        const unionCell = this.initCellInfo(\n          idxsUnion,\n          unionIdxs.map(i => targetCellInfos[i].num),\n          Config.wideExclusiveStatuses[conditions.unionSize],\n          conditions.type,\n          conditions.rcbIdx,\n          conditions.unionSize\n        );\n\n        unionCellArrayB.push(unionCell);\n      }\n    }\n\n    return unionCellArrayB;\n  }\n\n  static setSquareCandidates(dataset, conditions) {\n    // console.log(\"inside setSquareCandidates\");\n\n    let { candidates, exclusiveCandidates, trace } = dataset;\n\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let candidateTrace = [];\n    let squareNums = this.getUnionSizes(Config.maxSquareNum);\n    const numArray = this.getNsequence();\n\n    for (let rowcol of Config.restrictionTypesStraightArray) {\n      // const counterDirection = this.flipRowCol(rowcol);\n      // const counterRC = this.getFirstLetter(counterDirection);\n\n      for (let num of numArray) {\n        const exclusiveSquareCandidates = exclusiveCandidates.filter(\n          exCand => this.isExclusiveSquare(exCand.status) && num === exCand.num\n        );\n\n        for (let squareNum of squareNums) {\n          const targetCellInfos = this.getSquareTargetCells(\n            candidates,\n            rowcol,\n            num,\n            squareNum\n          );\n\n          const squareCellInfoArray = this.findSquareCells(\n            targetCellInfos,\n            rowcol,\n            squareNum\n          );\n\n          for (let squareCellInfo of squareCellInfoArray) {\n            if (\n              this.isInExclusiveSquareCandidates(\n                exclusiveSquareCandidates,\n                squareCellInfo\n              )\n            ) {\n              continue;\n            }\n\n            [candidates, candidateTrace] = this.updateCandidates4Square(\n              candidates,\n              squareCellInfo,\n              rowcol,\n              isSkipIneffective\n            );\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            // if (candidateTrace.length > 0) {\n            exclusiveCandidates.push(squareCellInfo);\n\n            trace.push(\n              this.initTraceItemCandidate(\n                candidateTrace,\n                Config.operationTypes.auto\n              )\n            );\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level5\n              )\n            ) {\n              return dataset;\n            }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static getSquareTargetCells(candidates, rowcol, num, squareNum) {\n    const indexArray = this.getIndexSequence();\n    const squareNums = this.getUnionSizes(squareNum);\n\n    let targetCellInfos = [];\n\n    for (let iRC of indexArray) {\n      let cellIndices = this.getCandidateCellIndices(candidates, iRC, rowcol);\n\n      cellIndices = cellIndices.filter(idx =>\n        this.isNarrowCandidate(\n          this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n        )\n      );\n\n      if (squareNums.includes(cellIndices.length)) {\n        targetCellInfos.push(this.initCellInfo(cellIndices, num));\n      }\n    }\n\n    return targetCellInfos;\n  }\n\n  static findSquareCells(targetCellInfos, rowcol, squareNum) {\n    // console.log(\"inside findSquareCells\");\n\n    if (targetCellInfos.length < squareNum) {\n      return [];\n    }\n\n    let squareCellInfos = [];\n    const counterRC = this.getFirstLetter(this.flipRowCol(rowcol));\n    const num = targetCellInfos[0].num;\n    const candIdxArray = this.getIndexSequence(targetCellInfos.length);\n\n    for (let iSet of k_combinations(candIdxArray, squareNum)) {\n      const candidateRCIdxsArray = iSet.map(i =>\n        targetCellInfos[i].idxs.map(idx => idx[counterRC])\n      );\n\n      const unionRCIdxs = this.getUnionNumbers(candidateRCIdxsArray);\n\n      if (unionRCIdxs.length === squareNum) {\n        const squareCellInfo = {\n          status: Config.candidateStatus.exclusiveSquare,\n          num,\n          idxsArray: iSet.map(i => targetCellInfos[i].idxs),\n          rowcol: rowcol\n        };\n\n        squareCellInfos.push(squareCellInfo);\n      }\n    }\n\n    return squareCellInfos;\n  }\n\n  static setAssumptionTest(dataset, conditions) {\n    // console.log(\"inside setAssaumptionTest\");\n\n    let { candidates, exclusiveCandidates, trace } = dataset;\n\n    const { isStepByStep } = conditions;\n\n    let candidateTrace = [];\n    let targetCellInfoSets = this.findAssumptionTest(dataset);\n\n    for (let targetCellInfoSet of targetCellInfoSets) {\n      if (\n        this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfoSet)\n      ) {\n        continue;\n      }\n\n      // if (\n      //   !this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfoSet)\n      // ) {\n\n      for (let [i, cellInfo] of targetCellInfoSet.cellInfos.entries()) {\n        cellInfo.prevStatuses = [];\n        cellInfo.statuses = [];\n\n        for (let num of cellInfo.nums) {\n          const cInfo = this.initCellInfo(cellInfo.idx, num);\n          cellInfo.prevStatuses.push(\n            this.getCandidateStatus(candidates, cInfo)\n          );\n\n          if (i === 0 && num === targetCellInfoSet.inhibitedNum) {\n            cellInfo.statuses.push(Config.candidateStatus.removable);\n\n            candidates = this.assignRemovable2Candidates(candidates, cInfo);\n          } else {\n            cellInfo.statuses.push(Config.candidateStatus.assumptionTest);\n\n            candidates = this.assignAssumptionTest2Candidates(\n              candidates,\n              cInfo\n            );\n          }\n        }\n\n        candidateTrace.push(cellInfo);\n      }\n\n      exclusiveCandidates.push(targetCellInfoSet);\n\n      if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateTypes.assumptionTest)\n      ) {\n        return dataset;\n      }\n      // }\n    }\n\n    return dataset;\n  }\n\n  static findAssumptionTest(dataset) {\n    // console.log(\"inside findAssumptionTest\");\n\n    let { candidates } = dataset;\n    let idxs = this.getAllCellIndicies();\n    let targetCellInfos = [];\n\n    idxs = idxs.filter(\n      idx =>\n        !this.isWideSelectedInCell(candidates, idx) &&\n        this.countNarrowCandidates(candidates, idx) === 2\n    );\n\n    let cellInfos = idxs.map(idx =>\n      this.initCellInfo(idx, this.getNarrowCandidateNums(candidates, idx))\n    );\n\n    let rectangles = this.getRectangleSet(cellInfos);\n\n    for (let rectangle of rectangles) {\n      const targetCellInfo = this.getAssumptionTestCellInfo(rectangle);\n      if (targetCellInfo) {\n        targetCellInfos.push(targetCellInfo);\n      }\n    }\n\n    return targetCellInfos;\n  }\n\n  static getRectangleSet(cellInfos) {\n    let rectangleSet = [];\n\n    while (cellInfos.length >= 4) {\n      const pivotCellInfo = cellInfos.shift();\n\n      let rowMemberCellInfos = cellInfos.filter(\n        cellInfo => pivotCellInfo.idx.r === cellInfo.idx.r\n      );\n\n      let colMemberCellInfos = cellInfos.filter(\n        cellInfo => pivotCellInfo.idx.c === cellInfo.idx.c\n      );\n\n      for (let rowCell of rowMemberCellInfos) {\n        for (let colCell of colMemberCellInfos) {\n          let oppositeCellInfos = cellInfos.filter(\n            cellInfo =>\n              rowCell.idx.c === cellInfo.idx.c &&\n              colCell.idx.r === cellInfo.idx.r\n          );\n\n          if (oppositeCellInfos.length === 1) {\n            rectangleSet.push([\n              [pivotCellInfo, oppositeCellInfos.pop()],\n              [rowCell, colCell]\n            ]);\n          }\n        }\n      }\n    }\n\n    return rectangleSet;\n  }\n\n  static getAssumptionTestCellInfo(rectangleCellInfos) {\n    for (let [i, aPair] of rectangleCellInfos.entries()) {\n      const counterPair = rectangleCellInfos[i === 0 ? 1 : 0];\n\n      for (let [j, pivotCell] of aPair.entries()) {\n        const oppositeCell = aPair[j === 0 ? 1 : 0];\n\n        for (let pNum of pivotCell.nums) {\n          if (\n            !(\n              counterPair[0].nums.includes(pNum) &&\n              counterPair[1].nums.includes(pNum)\n            )\n          ) {\n            continue;\n          }\n\n          const counterNums = counterPair.map(cell =>\n            cell.nums.filter(num => num !== pNum).pop()\n          );\n\n          if (this.isTwoArraysSame(oppositeCell.nums, counterNums)) {\n            return {\n              cellInfos: [pivotCell, oppositeCell, ...counterPair],\n              inhibitedNum: pNum,\n              status: Config.candidateStatus.assumptionTest\n            };\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  static isStatusWorth2Store(markerTrace, markerInfo) {\n    // console.log(\"inside isStatusWorth2Store\");\n\n    for (let markerTraceItem of markerTrace) {\n      if (this.isMatchTwoMarkers(markerTraceItem, markerInfo)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static isMatchTwoMarkers(markerInfoA, markerInfoB) {\n    return (\n      markerInfoA.num === markerInfoB.num &&\n      markerInfoA.idx.b === markerInfoB.idx.b &&\n      markerInfoA.idx.rcType === markerInfoB.idx.rcType &&\n      markerInfoA.idx.rc === markerInfoB.idx.rc\n    );\n  }\n\n  static selectSelectables(dataset) {\n    // console.log(\"inside selectSelectables\");\n\n    let { numMatrix, candidates, markerNums, trace } = dataset;\n\n    const targetTrace = this.getTraceItemsWithSelectables(trace);\n\n    for (let targetTraceItem of targetTrace) {\n      let numTrace = null;\n      let candidateTrace = [];\n      let markerTrace = [];\n\n      for (let cellInfo of targetTraceItem.candidate) {\n        const newCellInfo = this.deepCopy(cellInfo);\n\n        if (\n          this.isSelectableCellInfo(newCellInfo) &&\n          this.isSelectable(this.getCandidateStatus(candidates, newCellInfo))\n        ) {\n          newCellInfo.prevStatus = Config.candidateStatus.selectable;\n          newCellInfo.status = Config.candidateStatus.selected;\n\n          numMatrix = this.assignNum2NumMatrix(numMatrix, newCellInfo);\n          numTrace = newCellInfo;\n\n          candidates = this.assignSelected2Candidates(candidates, newCellInfo);\n\n          const markerIdxs = Util.getMarkerIdxsFromCellIdx(newCellInfo.idx);\n\n          for (let markerIdx of markerIdxs) {\n            const markerInfo = Util.initMarkerInfo(markerIdx, newCellInfo.num);\n            let markerInfos4Trace = [];\n\n            if (Util.isTheNumInMarker(markerNums, markerInfo)) {\n              [markerNums, markerInfos4Trace] = Util.resetMarker(markerNums, [\n                markerInfo\n              ]);\n            }\n\n            markerTrace = markerTrace.concat(markerInfos4Trace);\n          }\n\n          candidateTrace.push(newCellInfo);\n        } else if (this.isRemovableCellInfo(newCellInfo)) {\n          if (\"idxs\" in newCellInfo) {\n            let idxs = [];\n            for (let idx of newCellInfo.idxs) {\n              const cellInfoSub = this.initCellInfo(idx, newCellInfo.num);\n              const status = this.getCandidateStatus(candidates, cellInfoSub);\n\n              if (this.isRemovable(status)) {\n                candidates = this.assignRemoved2Candidates(\n                  candidates,\n                  cellInfoSub\n                );\n\n                idxs.push(idx);\n                newCellInfo.prevStatuses.push(status);\n              }\n            }\n\n            if (idxs.length === 0) {\n              continue;\n            }\n\n            newCellInfo.idxs = idxs;\n            newCellInfo.status = Config.candidateStatus.removed;\n            candidateTrace.push(newCellInfo);\n          } else if (\n            this.isRemovable(this.getCandidateStatus(candidates, newCellInfo))\n          ) {\n            candidates = this.assignRemoved2Candidates(candidates, newCellInfo);\n\n            newCellInfo.prevStatus = Config.candidateStatus.removable;\n            newCellInfo.status = Config.candidateStatus.removed;\n            candidateTrace.push(newCellInfo);\n          }\n        }\n      }\n\n      if (numTrace !== null) {\n        trace.push(\n          this.initTraceItem(\n            numTrace,\n            candidateTrace,\n            markerTrace,\n            Config.operationTypes.auto\n          )\n        );\n      } else if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n    }\n\n    return dataset;\n  }\n\n  static convertSelectable2Selected(dataset) {\n    let { numMatrix, candidates } = dataset;\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      const i = this.getSelectableIdx(candidates, idx);\n      const cellInfo = this.initCellInfo(idx, this.i2n(i));\n      if (typeof i === \"number\") {\n        numMatrix = this.assignNum2NumMatrix(numMatrix, cellInfo);\n\n        [candidates] = this.updateCandidateOfTheCell(candidates, cellInfo);\n      }\n    }\n\n    return dataset;\n  }\n\n  static eraseRmovalbe(dataset) {\n    // console.log(\"inside eraseRmovalbe\");\n\n    let { candidates, trace } = dataset;\n    const targetTrace = this.getTraceItemsWithRemovableWithoutSelectable(trace);\n\n    for (let targetTraceItem of targetTrace) {\n      let candidateTrace = [];\n      for (let cellInfo of targetTraceItem.candidate) {\n        let newCellInfo = this.deepCopy(cellInfo);\n\n        if (\"idxs\" in newCellInfo) {\n          newCellInfo.prevStatuses = [];\n\n          // const idxs = newCellInfo.idxs.filter(idx => {\n          //   const cellInfoSub = this.initCellInfo(\n          //     idx,\n          //     newCellInfo.num,\n          //     newCellInfo.status\n          //   );\n          //   return (\n          //     this.isRemovableCellInfo(cellInfoSub) &&\n          //     this.isRemovable(this.getCandidateStatus(candidates, cellInfoSub))\n          //   );\n          // });\n\n          // const idxs = newCellInfo.idxs.filter(idx =>\n          //   this.isRemovable4erase(\n          //     candidates,\n          //     this.initCellInfo(idx, newCellInfo.num, newCellInfo.status)\n          //   )\n          // );\n\n          let idxs = [];\n          for (let idx of newCellInfo.idxs) {\n            const cellInfoSub = this.initCellInfo(\n              idx,\n              newCellInfo.num,\n              newCellInfo.status\n            );\n            if (this.isRemovable4erase(candidates, cellInfoSub)) {\n              idxs.push(idx);\n            }\n          }\n          // idxs = idxs.filter(idx =>\n          //   this.isRemovable4erase(\n          //     candidates,\n          //     idx,\n          //     newCellInfo.num,\n          //     newCellInfo.status\n          //   )\n          // );\n\n          if (idxs.length === 0) {\n            continue;\n          }\n\n          for (let idx of idxs) {\n            const cellInfoSub = this.initCellInfo(\n              idx,\n              newCellInfo.num,\n              newCellInfo.status\n            );\n\n            newCellInfo.prevStatuses.push(Config.candidateStatus.removable);\n\n            candidates = this.assignRemoved2Candidates(candidates, cellInfoSub);\n\n            // candidateTrace.push(cellInfo);\n          }\n\n          newCellInfo.status = Config.candidateStatus.removed;\n        } else {\n          if (\n            this.isRemovableCellInfo(newCellInfo) &&\n            this.isRemovable(this.getCandidateStatus(candidates, newCellInfo))\n          ) {\n            newCellInfo.prevStatus = Config.candidateStatus.removable;\n            newCellInfo.status = Config.candidateStatus.removed;\n\n            candidates = this.assignRemoved2Candidates(candidates, newCellInfo);\n\n            // candidateTrace.push(cellInfo);\n          } else {\n            continue;\n          }\n        }\n        candidateTrace.push(newCellInfo);\n      }\n\n      if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n    }\n\n    return dataset;\n  }\n\n  static isRemovable4erase(candidates, cellInfo) {\n    // const cellInfoSub = this.initCellInfo(\n    //   idx,\n    //   newCellInfo.num,\n    //   newCellInfo.status\n    // );\n    return (\n      this.isRemovableCellInfo(cellInfo) &&\n      this.isRemovable(this.getCandidateStatus(candidates, cellInfo))\n    );\n  }\n\n  // static isRemovable4erase(candidates, idx, num, status) {\n  //   const cellInfo = this.initCellInfo(idx, num, status);\n\n  //   return (\n  //     this.isRemovableCellInfo(cellInfo) &&\n  //     this.isRemovable(this.getCandidateStatus(candidates, cellInfo))\n  //   );\n  // }\n\n  static eraseExclusiveColors(candidates, trace) {\n    let candidateTrace = [];\n    const numArray = this.getNsequence();\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let num of numArray) {\n      const cellInfo4num = this.initCellInfo(\n        [],\n        num,\n        Config.candidateStatus.candidate\n      );\n      cellInfo4num.prevStatuses = [];\n\n      for (let idx of allIdxs) {\n        const cellInfo = this.initCellInfo(\n          idx,\n          num,\n          Config.candidateStatus.candidate\n        );\n\n        const status = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isWideExclusiveCandidate(status)) {\n          cellInfo4num.idxs.push(idx);\n          cellInfo4num.prevStatuses.push(status);\n\n          candidates = this.assignCandidate2Candidates(candidates, cellInfo);\n        }\n      }\n\n      if (cellInfo4num.idxs.length > 0) {\n        candidateTrace.push(cellInfo4num);\n      }\n    }\n\n    if (candidateTrace.length > 0) {\n      trace.push(\n        this.initTraceItemCandidate(candidateTrace, Config.operationTypes.auto)\n      );\n    }\n\n    return [candidates, trace];\n  }\n\n  static filterTraceItems(trace, status, excludingStatus = \"dummyStatus\") {\n    const traceCopy = this.deepCopy(trace);\n\n    return traceCopy.filter(\n      traceItem =>\n        traceItem.candidate !== null &&\n        traceItem.candidate.reduce(\n          (hasStatus, cellInfo) => cellInfo.status === status || hasStatus,\n          false\n        ) &&\n        !traceItem.candidate.reduce(\n          (hasStatus, cellInfo) =>\n            cellInfo.status === excludingStatus || hasStatus,\n          false\n        )\n    );\n  }\n\n  static getTraceItemsWithSelectables(trace) {\n    return this.filterTraceItems(trace, Config.candidateStatus.selectable);\n  }\n\n  static getTraceItemsWithRemovable(trace) {\n    return this.filterTraceItems(trace, Config.candidateStatus.removable);\n  }\n\n  static getTraceItemsWithRemovableWithoutSelectable(trace) {\n    return this.filterTraceItems(\n      trace,\n      Config.candidateStatus.removable,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static convertExclusive2Candidates(status) {\n    return Config.narrowCandidateList.includes(status)\n      ? Config.candidateStatus.candidate\n      : status;\n  }\n\n  static setBackCandidates(candidates) {\n    candidates = candidates.map(row =>\n      row.map(cell =>\n        cell.map(\n          status =>\n            Config.wideCandidateList.includes(status)\n              ? Config.candidateStatus.candidate\n              : status\n          // this.convertExclusive2Candidates(status)\n        )\n      )\n    );\n\n    return candidates;\n  }\n\n  static updateCandidates4UnionA(candidates, unionCell, isSkipIneffective) {\n    // console.log(\"inside updateCandidates4UnionA\");\n\n    let status = Config.wideExclusiveStatuses[unionCell.unionSize];\n\n    let candidateTrace = [];\n    let relatedCellInfos = this.getRelatedCellInfo4unionA(\n      candidates,\n      unionCell\n    );\n\n    if (isSkipIneffective && relatedCellInfos.length === 0) {\n      return [candidates, []];\n    }\n\n    for (let idx of unionCell.idxs) {\n      for (let num of unionCell.nums) {\n        const targetCellInfo = this.initCellInfo(idx, num, status);\n        const prevStatus = this.getCandidateStatus(candidates, targetCellInfo);\n\n        if (this.isNarrowCandidate(prevStatus)) {\n          candidates = this.assignStatus2Candidates(\n            candidates,\n            targetCellInfo,\n            status\n          );\n\n          targetCellInfo.prevStatus = prevStatus;\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    for (let cellInfo of relatedCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n        return [null, null];\n      }\n    }\n\n    // console.log(\"relatedCellInfos\");\n    // console.log(relatedCellInfos);\n\n    // if (this.isCellsAllWideRemoved(candidates, relatedCellInfos.idxs)) {\n    //   return [null, null];\n    // }\n\n    candidateTrace = candidateTrace.concat(relatedCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates4UnionB(candidates, unionCell, isSkipIneffective) {\n    let candidateTrace = [];\n    let status = Config.wideExclusiveStatuses[unionCell.unionSize];\n\n    const numArray = this.getNsequence();\n\n    for (let idx of unionCell.idxs) {\n      for (let num of numArray) {\n        const assignStatus = unionCell.nums.includes(num)\n          ? status\n          : Config.candidateStatus.removable;\n        const targetCellInfo = this.initCellInfo(idx, num, assignStatus);\n        targetCellInfo.prevStatus = this.getCandidateStatus(\n          candidates,\n          targetCellInfo\n        );\n\n        if (this.isNarrowCandidate(targetCellInfo.prevStatus)) {\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    let relatedCellInfos = this.getRelatedCellInfo4unionB(\n      candidates,\n      unionCell\n    );\n\n    const removableTargetCellInfos = candidateTrace.filter(\n      cellInfo => cellInfo.status === Config.candidateStatus.removable\n    );\n\n    if (\n      isSkipIneffective &&\n      removableTargetCellInfos.length === 0 &&\n      relatedCellInfos.length === 0\n    ) {\n      return [candidates, []];\n    }\n\n    for (let cellInfo of candidateTrace) {\n      candidates = this.assignStatus2Candidates(\n        candidates,\n        cellInfo,\n        cellInfo.status\n      );\n    }\n\n    for (let cellInfo of relatedCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      // // This problem may never happen //\n      // if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n      //   return [null, null];\n      // }\n    }\n\n    candidateTrace = candidateTrace.concat(relatedCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates4Square(\n    candidates,\n    squareCellInfo,\n    rowcol,\n    isSkipIneffective\n  ) {\n    // console.log(\"inside updateCandidates4Square\");\n\n    const counterDirection = this.flipRowCol(rowcol);\n    const counterRC = this.getFirstLetter(counterDirection);\n\n    // console.log(\"counterDirection: \", counterDirection);\n\n    // const squareIndices = squareCellInfo.idxs1.concat(squareCellInfo.idxs2);\n    const squareIndices = this.flattenMatrix2Array(squareCellInfo.idxsArray);\n    const rawRCIdxs = squareCellInfo.idxsArray.map(idxs =>\n      this.flattenMatrix2Array(idxs.map(idx => idx[counterRC]))\n    );\n    const keyRCIdxs = this.getUnionNumbers(rawRCIdxs);\n\n    // console.log(\"squareIndices\");\n    // console.log(squareIndices);\n\n    // console.log(\"rawRCIdxs\");\n    // console.log(rawRCIdxs);\n\n    // console.log(\"keyRCIdxs\");\n    // console.log(keyRCIdxs);\n\n    let candidateTrace = [];\n\n    let targetCellInfos = [];\n    let unTargetCellInfos = [];\n\n    // for (let keyIdx of squareCellInfo.idxs1) {\n    // for (let keyIdx of squareCellInfo.idxsArray[0]) {\n    for (let keyRCIdx of keyRCIdxs) {\n      const cellIndices = this.getCandidateCellIndices(\n        candidates,\n        // keyIdx[counterRC],\n        keyRCIdx,\n        counterDirection\n      );\n\n      for (let idx of cellIndices) {\n        const cellInfo = this.initCellInfo(idx, squareCellInfo.num);\n        cellInfo.prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isInCellInfoArray(squareIndices, idx)) {\n          cellInfo.status = Config.candidateStatus.exclusiveSquare;\n\n          targetCellInfos.push(cellInfo);\n        } else if (this.isNarrowCandidate(cellInfo.prevStatus)) {\n          cellInfo.status = Config.candidateStatus.removable;\n\n          unTargetCellInfos.push(cellInfo);\n        }\n      }\n    }\n\n    if (isSkipIneffective && unTargetCellInfos.length === 0) {\n      // continue;\n      return [candidates, []];\n    }\n\n    // console.log(\"targetCellInfos\");\n    // console.log(targetCellInfos);\n\n    for (let cellInfo of targetCellInfos) {\n      candidates = this.assignExclusiveSquare2Candidates(candidates, cellInfo);\n    }\n\n    // console.log(\"unTargetCellInfos\");\n    // console.log(unTargetCellInfos);\n\n    for (let cellInfo of unTargetCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n        return null;\n      }\n    }\n\n    candidateTrace = candidateTrace.concat(targetCellInfos);\n    candidateTrace = candidateTrace.concat(unTargetCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static findCandidateSingle(cellInfos) {\n    return cellInfos.filter(cellInfo => cellInfo.idxs.length === 1);\n  }\n\n  static findSingleCandidateCellsB(\n    candidates,\n    exclusiveCandidates,\n    // helpMode,\n    isStepByStep = true\n  ) {\n    // console.log(\"inside findSingleCandidateCells\");\n\n    let singleCandidateCells = [];\n\n    // breakPoint:\n    for (let [r, row] of candidates.entries()) {\n      for (let [c, cell] of row.entries()) {\n        if (\n          cell.filter(cand => Config.wideSelectedList.includes(cand)).length > 0\n        ) {\n          continue;\n        }\n\n        if (\n          cell.filter(cand => Config.narrowCandidateList.includes(cand))\n            .length === 1\n        ) {\n          const idxs = Config.narrowCandidateList\n            .map(status => cell.indexOf(status))\n            .filter(idx => idx >= 0);\n\n          if (idxs.length === 1) {\n            const i = idxs.pop();\n\n            const targetCellInfo = this.initCellInfo(\n              this.initCellIdx(r, c),\n              this.i2n(i),\n              Config.candidateStatus.selectable\n            );\n\n            if (\n              !this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo)\n            ) {\n              singleCandidateCells.push(targetCellInfo);\n              // exclusiveCandidates.push(targetCellInfo);\n\n              if (\n                isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateTypes.singleCandidate\n                )\n              ) {\n                return singleCandidateCells;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return singleCandidateCells;\n  }\n\n  static isInsoluble(candidates) {\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      if (this.isCellAllWideRemoved(candidates, idx)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static findExclusiveCandidateUnionA(\n    candidates,\n    exclusiveCandidates,\n    unionSize = 2,\n    isStepByStep = true\n  ) {\n    // console.log(\"inside findExclusiveCandidateUnionA\");\n    // console.log(\"unionSize: \", unionSize);\n\n    // union size 2 finds 2 cells with the same two candidates //\n    // such as [5, 7] and [5, 7] from cells with 2 remaining candidates //\n    // union size 3 finds 3 cells with three candidates //\n    // such as [1, 4, 8], [1, 4], [4, 8] from cells with 2 or 3 remaining candidates //\n\n    let unionCells = [];\n    const candNumMatrix = this.getCandidateNumMatrix(candidates);\n    const idxArray = this.getIndexSequence();\n\n    // candLengths [2] for unionSize 2, [2,3] for unionSize 3\n    const candLengths = this.getIndexSequence(unionSize - 1).map(i => i + 2);\n\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        let cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        cellIndices = cellIndices.filter(idx =>\n          candLengths.includes(candNumMatrix[idx.r][idx.c].length)\n        );\n\n        if (cellIndices.length >= unionSize) {\n          let cellInfoArray = cellIndices.map(idx => {\n            return {\n              nums: candNumMatrix[idx.r][idx.c],\n              idx: idx\n            };\n          });\n\n          const candIdxArray = this.getIndexSequence(cellInfoArray.length);\n          for (let unionIdxs of k_combinations(candIdxArray, unionSize)) {\n            const idxs = unionIdxs.map(i => cellInfoArray[i].idx);\n            if (type === \"blk\" && this.isInSameRowCol(idxs)) {\n              continue;\n            }\n\n            const numsUnion = this.getUnionNumbers(\n              unionIdxs.map(i => cellInfoArray[i].nums)\n            );\n\n            if (numsUnion.length === unionSize) {\n              const unionCell = {\n                nums: numsUnion,\n                idxs: idxs,\n                type: type,\n                rcbIdx: rcbIdx\n              };\n\n              if (\n                isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateLevelTypes.level4\n                ) &&\n                !this.isInExclusiveCandidates(exclusiveCandidates, unionCell)\n              ) {\n                return [unionCell];\n              }\n\n              unionCells.push(unionCell);\n            }\n          }\n        }\n      }\n    }\n\n    return unionCells;\n  }\n\n  // set status for the very cell //\n  static updateCandidateOfTheCell(\n    candidates,\n    cellInfo,\n    // level = 1,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside updateCandidateOfTheCell\");\n\n    let indexArray = [];\n    let selectStatus = Config.candidateStatus.candidate;\n    let removeStatus = Config.candidateStatus.candidate;\n    let candidateTrace = [];\n\n    // set candidate types depending on the action type //\n    if (processType === Config.processTypes.insertion) {\n      selectStatus = Config.candidateStatus.selected;\n      removeStatus = Config.candidateStatus.removed;\n    } else {\n      selectStatus = Config.candidateStatus.selectable;\n      if (\n        [\n          Config.processTypes.candidates,\n          Config.processTypes.singleNum\n        ].includes(processType)\n      ) {\n        removeStatus = Config.candidateStatus.removable;\n      }\n    }\n\n    if (processType === Config.processTypes.singleNum) {\n      indexArray.push(Util.n2i(cellInfo.num));\n    } else {\n      indexArray = this.getIndexSequence();\n    }\n\n    for (let i of indexArray) {\n      const targetCellInfo = Util.initCellInfo(cellInfo.idx, Util.i2n(i));\n\n      if (cellInfo.num === Util.i2n(i)) {\n        let targetCellInfo = this.initCellInfo(\n          cellInfo.idx,\n          cellInfo.num,\n          selectStatus\n        );\n\n        targetCellInfo.prevStatus = this.getCandidateStatus(\n          candidates,\n          cellInfo\n        );\n        candidates = Util.assignStatus2Candidates(\n          candidates,\n          cellInfo,\n          selectStatus\n        );\n\n        candidateTrace.push(targetCellInfo);\n      } else {\n        const prevStatus = Util.getCandidateStatus(candidates, targetCellInfo);\n\n        if (!Util.isRemoved(prevStatus)) {\n          candidates = Util.assignStatus2Candidates(\n            candidates,\n            targetCellInfo,\n            removeStatus\n          );\n\n          targetCellInfo.status = removeStatus;\n          targetCellInfo.prevStatus = prevStatus;\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateRelatedCells(\n    candidates,\n    cellInfo,\n    level = 1,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside updateRelatedCells\");\n\n    let candidateTrace = [];\n\n    if (level === 0) {\n      return [candidates, candidateTrace];\n    }\n\n    const removeStatus =\n      processType === Config.processTypes.insertion\n        ? Config.candidateStatus.removed\n        : Config.candidateStatus.removable;\n\n    const relatedIndices = this.getSingleNumCandidateCells(\n      candidates,\n      cellInfo.num,\n      this.getRelatedIndicesBesidesItself(cellInfo.idx),\n      processType\n    );\n\n    for (let idx of relatedIndices) {\n      let targetCellInfo = this.initCellInfo(idx, cellInfo.num, removeStatus);\n      targetCellInfo.prevStatus = Util.getCandidateStatus(\n        candidates,\n        targetCellInfo\n      );\n\n      candidates = Util.assignStatus2Candidates(\n        candidates,\n        Util.initCellInfo(idx, cellInfo.num),\n        removeStatus\n      );\n\n      if (this.isCellAllWideRemoved(candidates, idx)) {\n        return [null, null];\n      }\n\n      candidateTrace.push(targetCellInfo);\n    }\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates(dataset, cellInfo, candidateLevel) {\n    let { candidates } = dataset;\n\n    let candidateTrace = [];\n    let candidateTraceTmp = [];\n\n    [candidates, candidateTrace] = this.updateCandidateOfTheCell(\n      candidates,\n      cellInfo\n    );\n\n    [candidates, candidateTraceTmp] = this.updateRelatedCells(\n      candidates,\n      cellInfo,\n      candidateLevel,\n      Config.processTypes.insertion\n    );\n\n    // There is a cell full of wide-removed //\n    if (candidates === null) {\n      return null;\n    }\n\n    if (candidateTraceTmp.length > 0) {\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n    }\n\n    if (candidateTrace.length > 0) {\n      dataset.trace.push(\n        this.initTraceItemCandidate(candidateTrace, Config.operationTypes.auto)\n      );\n    }\n\n    return dataset;\n  }\n\n  static flipCandidateStatus(candidates, cellInfo) {\n    const status = this.getCandidateStatus(candidates, cellInfo);\n\n    cellInfo.prevStatus = status;\n    if (status !== Config.candidateStatus.removed) {\n      cellInfo.status = Config.candidateStatus.removed;\n      candidates = this.assignRemoved2Candidates(candidates, cellInfo);\n    } else {\n      cellInfo.status = Config.candidateStatus.candidate;\n      candidates = this.assignCandidate2Candidates(candidates, cellInfo);\n    }\n\n    return [candidates, cellInfo];\n  }\n\n  static isSelected(candidateStatus) {\n    return Config.selectedList.includes(candidateStatus);\n  }\n\n  static hasSelected(candidates, idx) {\n    return this.getCandidateStatusArray(candidates, idx).reduce(\n      (having, status) => having || this.isSelected(status),\n      false\n    );\n  }\n\n  static isWideSelected(candidateStatus) {\n    return Config.wideSelectedList.includes(candidateStatus);\n  }\n\n  static isWideSelectedInStatuses(statuses) {\n    return statuses.reduce(\n      (isSelected, status) => this.isWideSelected(status) || isSelected,\n      false\n    );\n  }\n\n  static isWideSelectedInCell(candidates, idx) {\n    return this.isWideSelectedInStatuses(\n      this.getCandidateStatusArray(candidates, idx)\n    );\n  }\n\n  static isStatusesAllNarrowCandidates(statuses) {\n    return statuses.reduce(\n      (isCandidates, status) => this.isNarrowCandidate(status) && isCandidates,\n      true\n    );\n  }\n\n  static isStatusesAllWideRemoved(statuses) {\n    return statuses.reduce(\n      (isRemoved, status) => this.isWideRemoved(status) && isRemoved,\n      true\n    );\n  }\n\n  static isCellAllWideRemoved(candidates, idx) {\n    return this.countWideRemoved(candidates, idx) === Config.size;\n  }\n\n  static isCellsAllWideRemoved(candidates, idxs) {\n    return idxs.reduce(\n      (isWrong, idx) => this.isCellAllWideRemoved(candidates, idx) || isWrong,\n      false\n    );\n  }\n\n  static isLastCandidate(candidates, cellInfo) {\n    return (\n      this.countCandidates(candidates, cellInfo.idx) === 1 &&\n      this.isCandidate(this.getCandidateStatus(candidates, cellInfo))\n    );\n  }\n\n  static isWideCandidate(candidateStatus) {\n    return Config.wideCandidateList.includes(candidateStatus);\n  }\n\n  static isNarrowCandidate(candidateStatus) {\n    return Config.narrowCandidateList.includes(candidateStatus);\n  }\n\n  static isCandidate(candidateStatus) {\n    // console.log(\"inside isCandidate\");\n\n    return Config.candidateList.includes(candidateStatus);\n  }\n\n  static isNarrowSelected(status) {\n    return status === Config.candidateStatus.selected;\n  }\n\n  static isSelectable(status) {\n    return status === Config.candidateStatus.selectable;\n  }\n\n  static isSelectableCell(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.includes(Config.candidateStatus.selectable);\n  }\n\n  static isRemovable(status) {\n    return status === Config.candidateStatus.removable;\n  }\n\n  static isRemoved(status) {\n    return status === Config.candidateStatus.removed;\n  }\n\n  static isWideRemoved(status) {\n    return Config.wideRemovedList.includes(status);\n  }\n\n  static isExclusiveSingle(status) {\n    return status === Config.candidateStatus.exclusiveSingle;\n  }\n\n  static isExclusiveDouble(status) {\n    return status === Config.candidateStatus.exclusiveDouble;\n  }\n\n  static isExclusiveTriple(status) {\n    return status === Config.candidateStatus.exclusiveTriple;\n  }\n\n  static isExclusiveQuadruple(status) {\n    return status === Config.candidateStatus.exclusiveQuadruple;\n  }\n\n  static isExclusiveMultiple(status) {\n    return Config.exclusiveMultiples.includes(status);\n  }\n\n  static isExclusiveDoubleOrTriple(status) {\n    return this.isExclusiveDouble(status) || this.isExclusiveTriple(status);\n  }\n\n  static isExclusiveSquare(status) {\n    return status === Config.candidateStatus.exclusiveSquare;\n  }\n\n  static isAssumptionTest(status) {\n    return status === Config.candidateStatus.assumptionTest;\n  }\n\n  static isWideExclusiveCandidate(status) {\n    return Config.wideExclusiveStatuses.includes(status);\n  }\n\n  static isCandidateWithoutRemovable(candidate) {\n    const candidateUpper = candidate.toUpperCase();\n    const statusCandidateUpper = Config.candidateStatus.candidate.toUpperCase();\n    const statusSelectable = Config.candidateStatus.selectable;\n    const statusRemovable = Config.candidateStatus.removable;\n\n    return (\n      (candidateUpper.includes(statusCandidateUpper) &&\n        candidate !== statusRemovable) ||\n      candidate === statusSelectable\n    );\n  }\n\n  static isSelectableCellInfo(cellInfo) {\n    return cellInfo.status === Config.candidateStatus.selectable;\n  }\n\n  static isRemovableCellInfo(cellInfo) {\n    return cellInfo.status === Config.candidateStatus.removable;\n  }\n\n  static getNarrowCandidateNums(candidates, idx) {\n    const nums = this.getNsequence();\n\n    return nums.filter(num =>\n      this.isNarrowCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n  }\n\n  static getCandidateNums(candidates, idx) {\n    const statusArray = this.getCandidateStatusArray(candidates, idx);\n\n    let candNums = [];\n    for (let [i, status] of statusArray.entries()) {\n      if (this.isCandidate(status)) {\n        candNums.push(this.i2n(i));\n      }\n    }\n\n    return candNums;\n  }\n\n  static getWideCandidateNums(candidates, idx) {\n    const nums = this.getNsequence();\n\n    return nums.filter(num =>\n      this.isWideCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n  }\n\n  // not used? //\n  static getCandidateIndicesFromCandidateArray(candidateArray) {\n    const idxArray = this.getIndexSequence();\n    return idxArray.filter(i => this.isCandidate(candidateArray[i]));\n  }\n\n  // not used? //\n  static getCandidateIndicesFromCandidateArrayExcludingRemovable(\n    candidateArray\n  ) {\n    const idxArray = this.getIndexSequence();\n    return idxArray.filter(i =>\n      this.isCandidateWithoutRemovable(candidateArray[i])\n    );\n  }\n\n  static extractCellInfoFromCandidate(candidates, num, cellIndices) {\n    // console.log(\"inside extractCellInfoFromCandidate\");\n\n    const filteredCellIndices = cellIndices.filter(idx =>\n      this.isNarrowCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n\n    if (filteredCellIndices.length === 0) {\n      return null;\n    }\n\n    return this.initCellInfo(filteredCellIndices, num);\n  }\n\n  // not used? //\n  static extractCellInfoFromCandidateExcludingRemovable(\n    candidates,\n    num,\n    cellIndices\n  ) {\n    const filteredCellIndices = cellIndices.filter(idx =>\n      this.isCandidateWithoutRemovable(candidates[idx.r][idx.c][num - 1])\n    );\n\n    if (filteredCellIndices.length === 0) {\n      return null;\n    }\n    return { num: num, idxs: filteredCellIndices };\n  }\n\n  // seems not used //\n  static getSelectableCandidate4Num(candidates, num, cellIndices) {\n    // console.log(\"inside getSelectableCandidate4Num\");\n\n    const cellInfo = this.extractCellInfoFromCandidate(\n      candidates,\n      num,\n      cellIndices\n    );\n\n    if (cellInfo !== null && cellInfo.idxs.length === 1) {\n      return {\n        idx: cellInfo.idxs[0],\n        num: num\n      };\n    }\n    return null;\n  }\n\n  // Seems not used //\n  static updateCandidates4Selectable(candidates, cellInfo) {\n    // console.log(\"updateCandidates4Selectable is called\");\n\n    if (cellInfo !== null) {\n      for (let i of this.getIndexSequence()) {\n        if (i === cellInfo.num - 1) {\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] =\n            Config.candidateStatus.selectable;\n        } else if (\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] !==\n          Config.candidateStatus.removed\n        ) {\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] =\n            Config.candidateStatus.removable;\n        }\n      }\n    }\n\n    return candidates;\n  }\n\n  static getSingleNumCandidateCells(\n    candidates,\n    num,\n    cellIndices,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside getSingleNumCandidateCells\");\n\n    let candidateCells = [];\n\n    for (let idx of cellIndices) {\n      const status = this.getCandidateStatus(\n        candidates,\n        this.initCellInfo(idx, num)\n      );\n\n      if (processType === Config.processTypes.insertion) {\n        if (this.isSelected(status)) {\n          return [];\n        } else if (this.isWideCandidate(status)) {\n          candidateCells.push(idx);\n        }\n      } else {\n        if (this.isWideSelected(status)) {\n          return [];\n        } else if (this.isNarrowCandidate(status)) {\n          candidateCells.push(idx);\n        }\n      }\n    }\n\n    return candidateCells;\n  }\n\n  static setRelatedCandidatesBySingleMark(\n    candidates,\n    markerInfo,\n    markerNums = null\n  ) {\n    // console.log(\"inside setRelatedCandidatesBySingleMark\");\n\n    let candidateTrace = [];\n    let markerTrace = [];\n\n    const num = markerInfo.num;\n\n    let cellIndices = this.getRelatedCellIndicesByMarkerIdx(\n      markerInfo.idx,\n      candidates\n    );\n\n    for (let idx of cellIndices) {\n      const targetCellInfo = this.initCellInfo(idx, num);\n      targetCellInfo.prevStatus = this.getCandidateStatus(\n        candidates,\n        targetCellInfo\n      );\n\n      if (!this.isNarrowCandidate(targetCellInfo.prevStatus)) {\n        continue;\n      }\n\n      // if ( this.isNarrowCandidate( targetCellInfo.prevStatus ) ) {\n\n      candidates = this.assignRemovable2Candidates(candidates, targetCellInfo);\n\n      targetCellInfo.status = Config.candidateStatus.removable;\n\n      candidateTrace.push(targetCellInfo);\n\n      // find selectable type A //\n      if (markerNums !== null) {\n        let markerTraceTmp = null;\n\n        [markerNums, markerTraceTmp] = this.setSelectableA2MarkerNums(\n          markerNums,\n          candidates,\n          this.initCellInfo(idx, num)\n        );\n\n        if (markerTraceTmp) {\n          markerTrace = markerTrace.concat(markerTraceTmp);\n        }\n      }\n\n      // find selectable type B //\n      let markerTraceTmp = null;\n      [markerNums, markerTraceTmp] = this.setSelectableB2MarkerNums(\n        markerNums,\n        candidates,\n        idx\n      );\n\n      if (markerTraceTmp) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      // }\n    }\n\n    return [candidates, markerNums, candidateTrace, markerTrace];\n  }\n\n  static setSelectableA2MarkerNums(markerNums, candidates, cellInfo) {\n    // console.log(\"inside setSelectableA2MarkerNums\");\n\n    let markerTrace = [];\n    const num = cellInfo.num;\n    const relatedMarkerIdxs = this.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    for (let relatedMarkerIdx of relatedMarkerIdxs) {\n      const relatedMarkerInfo = this.initMarkerInfo(relatedMarkerIdx, num);\n\n      if (!this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n        continue;\n      }\n\n      // if (this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n\n      let concerningCellIdxs = this.getTargetCellIndicesByMarkerIdx(\n        relatedMarkerIdx,\n        candidates\n      );\n\n      let concerningCellInfos = concerningCellIdxs.map(idx =>\n        this.initCellInfo(idx, num)\n      );\n\n      if (this.countNumInCandidates(candidates, concerningCellInfos) !== 1) {\n        continue;\n      }\n\n      // if (this.countNumInCandidates(candidates, concerningCellInfos) === 1) {\n\n      relatedMarkerInfo.prevStatus = this.getMarkerStatus(\n        markerNums,\n        relatedMarkerIdx\n      );\n      relatedMarkerInfo.status = Config.candidateStatus.selectable;\n\n      markerNums = this.assignSelectable2MarkerNums(\n        markerNums,\n        relatedMarkerInfo\n      );\n\n      markerTrace.push(relatedMarkerInfo);\n      // }\n      // }\n    }\n\n    return [markerNums, markerTrace];\n  }\n\n  static setSelectableB2MarkerNums(markerNums, candidates, cellIdx) {\n    let markerTrace = [];\n    const selectableNum = this.getSelectableNum(candidates, cellIdx);\n\n    if (markerNums === null || selectableNum === null) {\n      return [markerNums, markerTrace];\n    }\n\n    // if (markerNums !== null && selectableNum !== null) {\n\n    const relatedMarkerIdxs = this.getMarkerIdxsFromCellIdx(cellIdx);\n\n    for (let relatedMarkerIdx of relatedMarkerIdxs) {\n      const relatedMarkerInfo = this.initMarkerInfo(\n        relatedMarkerIdx,\n        selectableNum\n      );\n\n      if (!this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n        continue;\n      }\n\n      // if (this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n\n      relatedMarkerInfo.prevStatus = this.getMarkerStatus(\n        markerNums,\n        relatedMarkerIdx\n      );\n      relatedMarkerInfo.status = Config.candidateStatus.selectable;\n\n      markerNums = this.assignSelectable2MarkerNums(\n        markerNums,\n        relatedMarkerInfo\n      );\n\n      markerTrace.push(relatedMarkerInfo);\n      // }\n    }\n    // }\n\n    return [markerNums, markerTrace];\n  }\n\n  static setRelatedCandidatesByMultipleMarks(\n    candidates,\n    markerNums,\n    markerInfo\n  ) {\n    // console.log(\"inside setRelatedCandidatesByMultipleMarks\");\n\n    let candidateTrace = [];\n    let markerTrace = [];\n\n    const markerIdx = markerInfo.idx;\n    const assignedNums = this.getNumsFromMarkerNums(markerNums, markerIdx);\n\n    if (assignedNums.length < 2) {\n      return [candidates, markerNums];\n    }\n\n    let concernedCellIdxs = this.getTargetCellIndicesByMarkerIdx(\n      markerIdx,\n      candidates\n    );\n    let targetCellIdxs = [];\n\n    if (assignedNums.length === 2 && concernedCellIdxs.length === 3) {\n      targetCellIdxs = concernedCellIdxs.filter(idx =>\n        assignedNums.reduce(\n          (isNumInCell, num) =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            ) || isNumInCell,\n          false\n        )\n      );\n    } else {\n      targetCellIdxs = concernedCellIdxs;\n    }\n\n    if (assignedNums.length === targetCellIdxs.length) {\n      const removableNums = this.getNsequence().filter(\n        num => !assignedNums.includes(num)\n      );\n\n      for (let num of removableNums) {\n        for (let idx of targetCellIdxs) {\n          const cellInfo = this.initCellInfo(idx, num);\n          const status = this.getCandidateStatus(candidates, cellInfo);\n\n          if (!this.isNarrowCandidate(status)) {\n            continue;\n          }\n\n          // if (this.isNarrowCandidate(status)) {\n\n          cellInfo.prevStatus = status;\n          cellInfo.status = Config.candidateStatus.removable;\n\n          candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n          candidateTrace.push(cellInfo);\n          // }\n        }\n      }\n\n      markerInfo.nums = assignedNums;\n\n      markerInfo.prevStatuses = [];\n      for (let num of markerInfo.nums) {\n        const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n        const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n        if (idx) {\n          tmpMarkerInfo.idx = idx;\n          markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n        } else {\n          markerInfo.prevStatuses.push(null);\n        }\n      }\n\n      if (assignedNums.length === 2) {\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n      } else {\n        markerNums = this.assignExclusiveTriple2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveTriple;\n      }\n\n      markerTrace.push(markerInfo);\n    } else {\n      const doubleExclusiveCellIdxs = targetCellIdxs.filter(idx =>\n        this.isTwoArraysSame(\n          assignedNums,\n          this.getWideCandidateNums(candidates, idx)\n        )\n      );\n\n      if (doubleExclusiveCellIdxs.length === 2) {\n        markerInfo.nums = assignedNums;\n\n        markerInfo.prevStatuses = [];\n        for (let num of markerInfo.nums) {\n          const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n          if (idx) {\n            tmpMarkerInfo.idx = idx;\n            markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n          } else {\n            markerInfo.prevStatuses.push(null);\n          }\n        }\n\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n\n        markerTrace.push(markerInfo);\n\n        if (concernedCellIdxs.length === 3) {\n          const unTargetIdxs = concernedCellIdxs.filter(\n            idx => !this.isIdxInDuplicates(doubleExclusiveCellIdxs, idx)\n          );\n\n          if (unTargetIdxs.length === 1) {\n            for (let num of assignedNums) {\n              const cellInfo = this.initCellInfo(unTargetIdxs[0], num);\n              const status = this.getCandidateStatus(candidates, cellInfo);\n              if (this.isNarrowCandidate(status)) {\n                cellInfo.prevStatus = status;\n                cellInfo.status = Config.candidateStatus.removable;\n\n                candidates = this.assignRemovable2Candidates(\n                  candidates,\n                  cellInfo\n                );\n\n                candidateTrace.push(cellInfo);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // a case that two nums form double exclusive //\n    if (assignedNums.length === 3) {\n      let targetCellInfos4nums = assignedNums.map(num => {\n        return {\n          idxs: targetCellIdxs.filter(idx =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            )\n          ),\n          num: num\n        };\n      });\n\n      const targetCellInfos4nums2 = targetCellInfos4nums.filter(\n        cellInfo => cellInfo.idxs.length === 2\n      );\n\n      if (\n        targetCellInfos4nums2.length === 2 &&\n        this.isTwoIdxSetsSame(\n          targetCellInfos4nums2[0].idxs,\n          targetCellInfos4nums2[1].idxs\n        )\n      ) {\n        markerInfo.nums = targetCellInfos4nums2.map(cellInfo => cellInfo.num);\n\n        markerInfo.prevStatuses = [];\n        for (let num of markerInfo.nums) {\n          const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n          if (idx) {\n            tmpMarkerInfo.idx = idx;\n            markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n          } else {\n            markerInfo.prevStatuses.push(null);\n          }\n        }\n\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n\n        markerTrace.push(markerInfo);\n      }\n\n      const targetCellInfos = targetCellIdxs.map(idx => {\n        return {\n          idx: idx,\n          nums: assignedNums.filter(num =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            )\n          )\n        };\n      });\n\n      const selectableCellInfos = targetCellInfos.filter(\n        cellInfo => cellInfo.nums.length === 1\n      );\n\n      for (let selectableCellInfo of selectableCellInfos) {\n        markerInfo.nums = selectableCellInfo.nums;\n\n        markerNums = this.assignSelectable2MarkerNums(markerNums, markerInfo);\n\n        const removableCellIdxs = targetCellIdxs.filter(\n          idx => !this.isTwoIdxsSame(selectableCellInfo.idx, idx)\n        );\n\n        for (let idx of removableCellIdxs) {\n          const cellInfo = this.initCellInfo(idx, selectableCellInfo.nums[0]);\n          const status = this.getCandidateStatus(candidates, cellInfo);\n\n          if (!this.isNarrowCandidate(status)) {\n            continue;\n          }\n\n          // if (this.isNarrowCandidate(status)) {\n          cellInfo.prevStatus = status;\n          cellInfo.status = Config.candidateStatus.removable;\n\n          candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n          candidateTrace.push(cellInfo);\n          // }\n        }\n      }\n    }\n\n    return [candidates, markerNums, candidateTrace, markerTrace];\n  }\n\n  static isNewStatusHigher(oldStatus, newStatus) {\n    return (\n      Config.narrowCandidateList.indexOf(oldStatus) <\n      Config.narrowCandidateList.indexOf(newStatus)\n    );\n  }\n\n  static isSingleNumCandidateCell(appearanceMatrix, idx) {\n    return [\n      Config.candidateStatus.candidate,\n      Config.candidateStatus.exclusive\n    ].includes(appearanceMatrix[idx.r][idx.c]);\n  }\n\n  static isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) {\n    return this.isInCellInfoArray(exclusiveCandidates, targetCellInfo);\n  }\n\n  static isInCellInfoArray(cellInfoArray, targetCellInfo) {\n    for (let cellInfo of cellInfoArray) {\n      if (this.isTwoIdxsSame(cellInfo, targetCellInfo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isInCellInfoArrayIgnoringRCBInfo(cellInfoArray, targetCellInfo) {\n    let ary = [];\n    let target = {};\n    const removingKeys = [\"rcbIdx\", \"type\"];\n    if (Object.keys(targetCellInfo).includes(\"rcbIdx\")) {\n      target = this.deepCopy(targetCellInfo);\n      removingKeys.forEach(keyName => delete target[keyName]);\n\n      ary = this.deepCopy(cellInfoArray);\n      ary.forEach(item =>\n        removingKeys.forEach(keyName => delete item[keyName])\n      );\n    } else {\n      target = targetCellInfo;\n      ary = cellInfoArray;\n    }\n\n    for (let cellInfo of ary) {\n      if (this.isTwoIdxsSame(cellInfo, target)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isInExclusiveSquareCandidates(exSquares, cellInfo) {\n    const targetIdxs = this.flattenMatrix2Array(cellInfo.idxsArray);\n\n    for (let exSquare of exSquares) {\n      const idxs = this.flattenMatrix2Array(exSquare.idxsArray);\n\n      if (\n        targetIdxs.reduce(\n          (isSame, tIdx) => this.isInCellInfoArray(idxs, tIdx) && isSame,\n          true\n        )\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static convertRemovable2Removed(candidates) {\n    // console.log(\"inside: convertRemovable2Removed\");\n\n    return candidates.map(row =>\n      row.map(cell =>\n        cell.map(status =>\n          status === Config.candidateStatus.removable\n            ? Config.candidateStatus.removed\n            : status\n        )\n      )\n    );\n  }\n\n  static removeNullsFromArray(ary) {\n    return ary.filter(x => x !== null);\n  }\n\n  static removeNullsFromNumbersWithIndex(ary) {\n    return ary.filter(x => x.num !== null);\n  }\n\n  static removeNullsFromCellInfo(cellInfoArray) {\n    return cellInfoArray.filter(x => x.num !== null);\n  }\n\n  static convertShortBRC(type) {\n    return Config.restrictionTypesShort[type];\n  }\n\n  static convertLingBRC(rcType) {\n    return Config.invBRC[rcType];\n  }\n\n  static flipRowCol(rc) {\n    return rc === \"row\" ? \"col\" : \"row\";\n  }\n\n  static flipRCType(rcType) {\n    return rcType === \"r\" ? \"c\" : \"r\";\n  }\n\n  static getUnionSizes(max = Config.maxUnionSize) {\n    return this.getIndexSequence(max - 1).map(i => i + 2);\n  }\n\n  static getRCTypeFromCellInfo(cellInfo) {\n    for (let rcType of Config.restrictionTypesStraightShortArray) {\n      if (cellInfo.rcbTypes[rcType]) {\n        return rcType;\n      }\n    }\n\n    return null;\n  }\n\n  static convertRCType2Direction(rcType) {\n    return Config.invBRC[rcType];\n  }\n\n  static getFirstLetter(s) {\n    return s.slice(0, 1);\n  }\n\n  static getLastLetter(s) {\n    return s.slice(-1);\n  }\n\n  static removeLastLetter(s) {\n    return s.slice(0, s.length - 1);\n  }\n\n  static getCellNumClass(num, appearance = null, isSubCell = false) {\n    let clsName = \"\";\n    if (num !== null) {\n      if (isSubCell) {\n        clsName = Config.panelClassNames.cellNum + num;\n      } else {\n        clsName = Config.candidateStatus.selected + num;\n      }\n    }\n\n    if (appearance !== null) {\n      if (appearance.includes(Config.candidateStatus.inhibited)) {\n        clsName = appearance;\n      } else {\n        clsName += this.capitalize(appearance);\n      }\n    }\n\n    return clsName;\n  }\n\n  static getCandidateLevelTitle(level) {\n    return this.capitalize(level.slice(0, 1) + level.slice(-1));\n  }\n\n  static getLevelNum(level) {\n    if (Config.candidateControlArray.includes(level)) {\n      return level;\n    }\n    return parseInt(level.slice(-1));\n  }\n\n  static getLevelNumFromFunctionName(functionName) {\n    return Config.candidateLevelTypesArray.indexOf(functionName);\n  }\n\n  static getSingleNumBtnId(level) {\n    return Config.buttonIds.singleNumButton + Util.capitalize(level);\n  }\n\n  // warned not use eval //\n  // static fillBlockIdTemplate = function(templateString, n) {\n  //   // return new Function(\"return `\" + templateString + \"`;\").call(n);\n  //   return eval(\"`\" + templateString + \"`\");\n  // };\n\n  // not work nicely as I expected\n  // static interpolate = function(template, ...expressions) {\n  //   return template.reduce((accumulator, part, i) => {\n  //     return accumulator + expressions[i - 1] + part;\n  //   });\n  // };\n\n  static appendNum(str, num) {\n    return str + num;\n  }\n\n  static getUnionNumbers(numSet) {\n    const numsArray = this.flattenMatrix2Array(numSet);\n    return this.removeDuplicatedNumbers(numsArray).sort();\n  }\n\n  static getUnionIndices(idxSet) {\n    const idxsArray = idxSet.reduce((ary, idxs) => ary.concat(idxs), []);\n    return this.removeDuplicatedIndices(idxsArray);\n  }\n\n  static getCandidateLevelId(level) {\n    return Config.buttonIds.candidateLevels + this.capitalize(level);\n  }\n\n  static getControlId(type) {\n    return Config.buttonIds.controls + this.capitalize(type);\n  }\n\n  static capitalize(str) {\n    if (str !== null && str.length > 0) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    return null;\n  }\n\n  static decapitalize(str) {\n    if (str !== null && str.length > 0) {\n      return str.charAt(0).toLowerCase() + str.slice(1);\n    }\n    return null;\n  }\n\n  static flattenMatrix2Array(m) {\n    return Array.prototype.concat.apply([], m);\n  }\n\n  static convNumMatrix2CSV(numMatrix) {\n    const numMatrix0 = this.convNull2Zero(numMatrix);\n    const lines = numMatrix0.map(row => row.join(\",\"));\n    let data = \"\";\n\n    for (let line of lines) {\n      data += line + \"\\n\";\n    }\n\n    return data;\n  }\n\n  static deepCopy(org) {\n    return JSON.parse(JSON.stringify(org));\n  }\n\n  // Function to download data to a file\n  static download(data, filename, type) {\n    var file = new Blob([data], { type: type });\n    if (window.navigator.msSaveOrOpenBlob)\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    else {\n      // Others\n      var a = document.createElement(\"a\"),\n        url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function() {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  // static saveFile(text, filename) {\n  //   // var text = $(\"#textarea\").val();\n  //   // var filename = $(\"#input-fileName\").val()\n  //   var blob = new Blob( [text], { type: \"text/plain;charset=utf-8\" } );\n  //   saveAs(blob, filename + \".txt\");\n  // }\n}\n\nexport default Util;\n","import React, { Component } from \"react\";\n\nimport Cell from \"./Cell\";\n\nimport Util from \"../Util\";\nimport Config from \"../Config\";\n\nclass NumPanelBlock extends Component {\n  render() {\n    const {\n      blockId,\n      candidateLevel,\n      blockClass,\n      cellIdBase,\n      cellClass,\n      inhibitedClass,\n      appearanceArray,\n      onClickFunc\n    } = this.props;\n\n    const numArray = Util.getNsequence(Config.size);\n    let cellLabels = [];\n    let clsNames = [];\n\n    for (const [i, num] of numArray.entries()) {\n      cellLabels.push(cellIdBase + num);\n\n      let clsName = [cellClass, Util.getCellNumClass(num, null, true)].join(\n        \" \"\n      );\n\n      if (appearanceArray && appearanceArray[i] !== null) {\n        if (\n          candidateLevel ===\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.displayCandidates\n          )\n        ) {\n          let appearance = appearanceArray[i];\n          if (Config.wideExclusiveStatuses.includes(appearanceArray[i])) {\n            appearance = Config.candidateStatus.candidate;\n          }\n          clsName = [clsName, appearance].join(\" \");\n        } else {\n          clsName = [clsName, appearanceArray[i]].join(\" \");\n        }\n      }\n\n      if (inhibitedClass) {\n        clsName = [clsName, inhibitedClass].join(\" \");\n      }\n\n      clsNames.push(clsName);\n    }\n\n    const cells = numArray.map((num, i) => {\n      return (\n        <Cell\n          key={cellLabels[i]}\n          cellId={cellLabels[i]}\n          num={num}\n          onClick={onClickFunc}\n          clsName={clsNames[i]}\n        />\n      );\n    });\n\n    return (\n      <div id={blockId} className={blockClass}>\n        {cells}\n      </div>\n    );\n  }\n}\n\nexport default NumPanelBlock;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\nimport NumPanelBlock from \"../NumPanelBlock\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cell.css\";\n\nclass CellContainer extends Component {\n  render() {\n    const {\n      candidateLevel,\n      cellId,\n      lastCandidate,\n      appearanceSubCellArray,\n      appearanceSmallCell,\n      inhibitedClass,\n      onCellClick,\n      handleCandidateCell\n    } = this.props;\n\n    // console.log(\"inside CellContainer\");\n\n    const blockId = cellId + Util.capitalize(Config.panelIds.block);\n\n    let clsName = [Config.panelClassNames.smallCell, appearanceSmallCell].join(\n      \" \"\n    );\n    if (inhibitedClass) {\n      clsName = [clsName, inhibitedClass].join(\" \");\n    }\n\n    return (\n      <div\n        id={cellId + Config.panelIds.cellContainerSuffix}\n        className={Config.panelClassNames.cellContainer}\n      >\n        <NumPanelBlock\n          blockId={blockId}\n          candidateLevel={candidateLevel}\n          blockClass={Config.panelClassNames.subBlock}\n          cellIdBase={cellId + Config.panelIds.numPanelCell}\n          cellClass={Config.panelClassNames.subCell}\n          inhibitedClass={inhibitedClass}\n          appearanceArray={appearanceSubCellArray}\n          onClickFunc={handleCandidateCell}\n        />\n        <Cell\n          key={cellId}\n          cellId={cellId}\n          lastCandidate={lastCandidate}\n          onClick={inhibitedClass ? null : onCellClick}\n          clsName={clsName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CellContainer;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cellColor.css\";\n\nclass Marker extends Component {\n  getCells = (cellIdBase, markerInfos) => {\n    const { markerStatus, onClickFunc, candidateLevel } = this.props;\n\n    const onClick =\n      markerStatus === Config.buttonStatus.active ? onClickFunc : null;\n    const cellClass = \"markCell\";\n\n    const numArray = Util.getNsequence(Config.sizeB);\n\n    let nums = markerInfos.nums;\n    if (!nums || nums.length !== Config.sizeB) {\n      nums = Util.initArray(null, Config.sizeB);\n    }\n\n    let clsNames = nums.map((n, i) =>\n      [cellClass, markerStatus, Util.getCellNumClass(n, null, true)].join(\" \")\n    );\n\n    if (\n      candidateLevel >\n      Util.getLevelNumFromFunctionName(Config.candidateTypes.displayCandidates)\n    ) {\n      clsNames = clsNames.map((clsName, i) =>\n        markerStatus === Config.buttonStatus.waiting ||\n        markerInfos.statuses[i] === null ||\n        markerInfos.statuses[i] === Config.candidateStatus.exclusiveSingle\n          ? clsName\n          : [clsName, markerInfos.statuses[i]].join(\" \")\n      );\n    }\n\n    let cellLabels = numArray.map(n => cellIdBase + \"I\" + n);\n    const cells = cellLabels.map((cellLabel, i) => {\n      return (\n        <Cell\n          key={cellLabel}\n          cellId={cellLabel}\n          num={markerStatus === Config.buttonStatus.active ? nums[i] : null}\n          onClick={onClick}\n          clsName={clsNames[i]}\n        />\n      );\n    });\n    return cells;\n  };\n\n  render() {\n    const { rowColType, blockId, markerNums } = this.props;\n\n    const rcType = Util.getFirstLetter(rowColType);\n    const wrapperBase = \"markWrapper\";\n    const rowColClass = \"mark\" + Util.capitalize(rowColType);\n    const idBase = rowColType;\n    const idBaseShort = Util.capitalize(Util.getFirstLetter(idBase));\n    const rowColIdBase = Util.abbreviateBlockId(blockId) + idBaseShort;\n    const wrapperId =\n      wrapperBase + Util.capitalize(blockId) + Util.capitalize(idBase);\n    const wrapperClass = wrapperBase + Util.capitalize(idBase);\n    const blockIdx = Util.getBlockIdxFromBlockId(blockId);\n    const rowColIndices = Util.getBlkRowColIndicesFromIdx(blockIdx, rowColType);\n    const rowColNIndices = rowColIndices.map(i => i + 1);\n    const cellIdBases = rowColNIndices.map(rc => rowColIdBase + rc);\n\n    const rowCols = rowColNIndices.map((nRC, i) => {\n      const markerIdx = Util.initMarkerIdx(blockIdx, rcType, nRC - 1);\n      const markerInfos = Util.getInfoArrayFromMarkerNums(\n        markerNums,\n        markerIdx\n      );\n      const cells = this.getCells(cellIdBases[i], markerInfos);\n\n      return (\n        <div\n          key={rowColIdBase + nRC}\n          id={rowColIdBase + nRC}\n          className={rowColClass}\n        >\n          {cells}\n        </div>\n      );\n    });\n\n    return (\n      <div id={wrapperId} className={wrapperClass}>\n        {rowCols}\n      </div>\n    );\n  }\n}\n\nexport default Marker;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\nimport CellContainer from \"./CellContainer\";\nimport Marker from \"./Marker\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass BoardBlock extends Component {\n  render() {\n    const {\n      mode,\n      helpMode,\n      blockId,\n      singleNumValue,\n      multipleNums,\n      candidates,\n      candidateLevel,\n      markerStatus,\n\n      numArray,\n      appearanceArray,\n      markerNums,\n      cellLabels,\n      clsNames,\n\n      showFloating,\n      handleNumInsert,\n      handleCandidateCell,\n      handleMarkerCell\n    } = this.props;\n\n    // console.log(\"inside BoardBlock\");\n\n    const displayNums =\n      helpMode === Config.helpMode.multipleNums\n        ? multipleNums\n        : [singleNumValue];\n    const blockWrapperId = blockId + \"wrapper\";\n    const blockWrapperClass = \"blockWrapper\";\n    let inhibitedClass = null;\n\n    const cells = numArray.map((num, i) => {\n      let cell = null;\n\n      if (\n        [\n          Config.helpMode.candidates,\n          Config.helpMode.both,\n          Config.helpMode.multipleNums\n        ].includes(helpMode) &&\n        num === null\n      ) {\n        const cellIdx = Util.R1C12Index(cellLabels[i]);\n        let candidateArray = Util.getCandidateStatusArray(candidates, cellIdx);\n\n        if (\n          [Config.helpMode.both, Config.helpMode.multipleNums].includes(\n            helpMode\n          ) &&\n          candidateLevel >\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.displayCandidates\n            )\n        ) {\n          candidateArray = candidateArray.map((status, j) =>\n            displayNums.includes(Util.i2n(j)) || Util.isWideRemoved(status)\n              ? status\n              : Config.candidateStatus.weaklyShadowed\n          );\n        }\n\n        let appearanceSmallCell = null;\n        let onClickFunc = showFloating;\n\n        if (\n          helpMode !== Config.helpMode.multipleNums &&\n          0 < singleNumValue &&\n          singleNumValue <= Config.size\n        ) {\n          onClickFunc = handleNumInsert;\n        }\n\n        inhibitedClass = null;\n        if (\n          [Config.helpMode.both, Config.helpMode.multipleNums].includes(\n            helpMode\n          ) &&\n          appearanceArray[i].includes(Config.candidateStatus.inhibited)\n        ) {\n          inhibitedClass = appearanceArray[i];\n        }\n\n        const singleCandidate = Util.getSingleCandidate(candidates, cellIdx);\n        const isSelectable = Util.isSelectableCell(candidates, cellIdx);\n\n        if (singleCandidate || isSelectable) {\n          onClickFunc = handleNumInsert;\n        }\n\n        if (Util.isSelectableCell(candidates, cellIdx)) {\n          appearanceSmallCell = Config.candidateStatus.selectable;\n        }\n\n        cell = (\n          <CellContainer\n            key={cellLabels[i]}\n            cellId={cellLabels[i]}\n            candidateLevel={candidateLevel}\n            lastCandidate={singleCandidate}\n            appearanceSubCellArray={candidateArray}\n            appearanceSmallCell={appearanceSmallCell}\n            inhibitedClass={inhibitedClass}\n            onCellClick={onClickFunc}\n            handleCandidateCell={handleCandidateCell}\n            clsName={clsNames[i]}\n          />\n        );\n      } else {\n        let onClickFunc = showFloating;\n        if (helpMode !== Config.helpMode.multipleNums && singleNumValue) {\n          onClickFunc =\n            mode === Config.mode.set ||\n            !appearanceArray[i].includes(Config.candidateStatus.shadowed)\n              ? handleNumInsert\n              : null;\n        }\n\n        cell = (\n          <Cell\n            key={cellLabels[i]}\n            cellId={cellLabels[i]}\n            num={num}\n            onClick={onClickFunc}\n            clsName={clsNames[i]}\n          />\n        );\n      }\n      return cell;\n    });\n\n    const markOnClickFunc =\n      helpMode !== Config.helpMode.multipleNums && singleNumValue\n        ? handleMarkerCell\n        : showFloating;\n\n    return (\n      <div\n        key={blockWrapperId}\n        id={blockWrapperId}\n        className={blockWrapperClass}\n      >\n        <Marker\n          key={blockId + \"markRow\"}\n          markerStatus={markerStatus}\n          blockId={blockId}\n          rowColType=\"row\"\n          markerNums={markerNums}\n          candidateLevel={candidateLevel}\n          onClickFunc={markOnClickFunc}\n        />\n\n        <div id={blockId} className={Config.panelClassNames.block}>\n          {cells}\n        </div>\n\n        <div />\n        <Marker\n          key={blockId + \"markCol\"}\n          markerStatus={markerStatus}\n          blockId={blockId}\n          rowColType=\"col\"\n          markerNums={markerNums}\n          candidateLevel={candidateLevel}\n          onClickFunc={markOnClickFunc}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BoardBlock;\n","import React, { Component } from \"react\";\n\nimport BoardBlock from \"./BoardBlock\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/SudokuBoard.css\";\n\nclass SudokuBoard extends Component {\n  render() {\n    const {\n      mode,\n      helpMode,\n      checkMode,\n      numMatrix,\n      candidates,\n      isRegisteredMatrix,\n      duplicates,\n      singleNumValue,\n      multipleNums,\n      candidateLevel\n    } = this.props;\n\n    // console.log(\"inside SudokuBoard\");\n    // console.log(\"helpMode: \", helpMode);\n    // console.log(\"singleNumValue: \", singleNumValue);\n    // console.log(\"multipleNums\");\n    // console.log(multipleNums);\n\n    const numbers = Util.getNsequence(Config.size);\n\n    let appearanceMatrix = [];\n    if (\n      mode === Config.mode.play &&\n      [Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode)\n    ) {\n      // console.log(\"I want to see this\");\n\n      appearanceMatrix = Util.getAppearanceMatrixFromCandidates(\n        candidates,\n        // helpMode,\n        [singleNumValue],\n        candidateLevel\n      );\n    } else if (\n      helpMode === Config.helpMode.multipleNums &&\n      multipleNums &&\n      multipleNums.length > 0\n    ) {\n      appearanceMatrix = Util.getAppearanceMatrixFromCandidates(\n        candidates,\n        // helpMode,\n        multipleNums,\n        candidateLevel\n      );\n    } else if (singleNumValue !== null && singleNumValue !== 0) {\n      appearanceMatrix = Util.getAppearanceMatrixFromNumMatrix(numMatrix);\n    }\n\n    // console.log(\"inside render of SudokuBoard\");\n\n    const blocks = numbers.map(blockNum => {\n      const blockId = Util.getBlockIdByNum(blockNum);\n      const cellIndices = Util.getBlkIndicesFromNum(blockNum);\n      const numArray = Util.getNumbersFromIndices(numMatrix, cellIndices);\n      const isRegisteredArray = Util.getNumbersFromIndices(\n        isRegisteredMatrix,\n        cellIndices\n      );\n\n      let isDuplicatedArray = [];\n      if (checkMode !== Config.checkMode.none && duplicates) {\n        isDuplicatedArray = Util.getIsDuplicatedFromIndices(\n          duplicates,\n          cellIndices\n        );\n      }\n\n      const appearanceArray =\n        appearanceMatrix && appearanceMatrix.length === Config.size\n          ? Util.getNumbersFromIndices(appearanceMatrix, cellIndices)\n          : Util.initArray(null);\n\n      const cellLabels = cellIndices.map(idx => Util.index2R1C1(idx));\n\n      const clsNames = numArray.map((num, i) => {\n        let clsName = Config.panelClassNames.cell;\n        const appearanceClass =\n          appearanceArray[i] === null || appearanceArray[i] === \"\"\n            ? Util.getCellNumClass(num, appearanceArray[i])\n            : appearanceArray[i];\n        clsName = [clsName, appearanceClass].join(\" \");\n\n        if (isRegisteredArray[i]) {\n          clsName = [clsName, Config.registered].join(\" \");\n        }\n        if (isDuplicatedArray[i]) {\n          clsName = [clsName, Config.duplicated].join(\" \");\n        }\n        return clsName;\n      });\n\n      return (\n        <BoardBlock\n          key={blockId}\n          blockId={blockId}\n          numArray={numArray}\n          appearanceArray={appearanceArray}\n          cellLabels={cellLabels}\n          clsNames={clsNames}\n          {...this.props}\n        />\n      );\n    });\n\n    return <div id={Config.panelIds.sudokuBoard}>{blocks}</div>;\n  }\n}\n\nexport default SudokuBoard;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass NewGame extends Component {\n  render() {\n    const { lang, handleNewGame } = this.props;\n\n    return (\n      <div\n        id={Config.buttonIds.newGame}\n        className={Config.buttonClassNames.newGame}\n        onClick={handleNewGame}\n      >\n        {Config.buttonTitles.newGame[lang]}\n      </div>\n    );\n  }\n}\n\nexport default NewGame;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass SampleGames extends Component {\n  render() {\n    const { lang, sampleGameID, handleSampleGames } = this.props;\n\n    // console.log(\"inside SampleGames\");\n\n    const buttonSet = Util.getSampleGameList().map(level => {\n      const innerWrapperId =\n        Config.buttonIds.sampleGameInnerWrapper + Util.capitalize(level);\n      const innerWrapperClass = Config.buttonClassNames.sampleGameInnerWrapper;\n\n      const buttons = Config.sampleGames[level].map((_, i) => {\n        const buttonId = Util.getSampleGameButtonId(level, i);\n\n        let btnClsName = Config.buttonClassNames.sampleGameButton;\n\n        const buttonTitle = Util.getSampleGameButtonLabel(level, i);\n\n        if (sampleGameID === buttonId) {\n          btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n        }\n\n        let title = Util.getSampleGameButtonTitle(level, i, lang);\n\n        return (\n          <button\n            key={buttonId}\n            id={Config.buttonIds.sampleGame + Util.capitalize(buttonId)}\n            className={btnClsName}\n            title={title}\n            onClick={() => handleSampleGames(buttonId)}\n          >\n            {buttonTitle}\n          </button>\n        );\n      });\n\n      return (\n        <div\n          key={innerWrapperId}\n          id={innerWrapperId}\n          className={innerWrapperClass}\n        >\n          {buttons}\n        </div>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.sampleGameWrapper}\n        className={Config.buttonClassNames.sampleGameFrame}\n      >\n        <div>\n          <h3>{Config.buttonTitles.sampleGames[lang]}</h3>\n        </div>\n        <div className={Config.buttonClassNames.sampleGameWrapper}>\n          {buttonSet}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SampleGames;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass Restart extends Component {\n  render() {\n    const { lang, mode, trace, handleRestart } = this.props;\n\n    return (\n      <button\n        id={Config.buttonIds.restart}\n        className={Config.buttonClassNames.restart}\n        onClick={handleRestart}\n        disabled={mode === Config.mode.set || trace.length === 0 ? true : null}\n      >\n        {Config.buttonTitles.restart[lang]}\n      </button>\n    );\n  }\n}\n\nexport default Restart;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass SetUp extends Component {\n  render() {\n    const { lang, mode, handleSetUp } = this.props;\n\n    let buttonTitle = Config.buttonTitles.setup[lang];\n    if (mode === Config.mode.play) {\n      buttonTitle = Config.buttonTitles.edit[lang];\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.setup}\n        className={Config.buttonClassNames.setup}\n        onClick={handleSetUp}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default SetUp;\n","import React, { Component } from \"react\";\n\nimport NewGame from \"./NewGame\";\nimport SampleGames from \"./SampleGames\";\nimport Restart from \"./Restart\";\nimport SetUp from \"./SetUp\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ControlPanel.css\";\n\nclass ControlPanel extends Component {\n  render() {\n    const { lang } = this.props;\n\n    return (\n      <div\n        id={Config.panelIds.control}\n        className={Config.panelClassNames.control}\n      >\n        <h2>{Config.panelTitles.control[lang]}</h2>\n        <NewGame {...this.props} />\n        <SetUp {...this.props} />\n        <SampleGames {...this.props} />\n        <Restart {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport Util from \"../../Util\";\n\nclass Check extends Component {\n  getButton = level => {\n    const { lang, mode, checkMode, handleCheck } = this.props;\n\n    const myself = this.constructor.name.toLowerCase();\n    const label = Config.checkButtonLabels[level][lang];\n    const titleCaption = Config.checkTitleCaptions[level][lang];\n    let disabled = true;\n    let btnClsName = Config.buttonClassNames.checkButton;\n\n    if (level !== Config.checkMode.none && level === checkMode) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      [Config.checkMode.none, Config.checkMode.duplicates].includes(level) ||\n      mode === Config.mode.play\n    ) {\n      disabled = null;\n    }\n\n    return (\n      <button\n        key={level}\n        id={Config.buttonIds[myself] + Util.capitalize(level)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleCheck(level)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  render() {\n    const { lang, checkMode } = this.props;\n\n    // console.log(\"inside Check\");\n\n    let clsName = Config.buttonClassNames.candidateContainer;\n\n    let titleClassName = Config.buttonClassNames.checkTitle;\n    if (checkMode !== Config.checkMode.none) {\n      titleClassName = [titleClassName, Config.buttonStatus.active].join(\" \");\n    }\n\n    const buttons = Config.checkModeArray.map(type => this.getButton(type));\n\n    return (\n      <div id={Config.buttonIds.check} className={clsName}>\n        <div>\n          <h3 className={titleClassName}>\n            {Config.checkButtonLabels.title[lang]}\n          </h3>\n        </div>\n        <div\n          id={Config.buttonIds.checkWrapper}\n          className={Config.buttonClassNames.candidateButtonWrapper}\n        >\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Check;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nclass HelpModeButtons extends Component {\n  getButton = type => {\n    const { lang, mode, helpMode, handleHelpMode } = this.props;\n\n    // const myself = this.constructor.name.toLowerCase();\n    let disabled = true;\n\n    let btnClsName = Config.helpModeButtonClassNames[type];\n    if (\n      helpMode !== Config.helpMode.none &&\n      (helpMode === type ||\n        helpMode === Config.helpMode.both ||\n        helpMode === Config.helpMode.multipleNums)\n    ) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      mode === Config.mode.play &&\n      !(type === Config.helpMode.none && helpMode === Config.helpMode.none)\n    ) {\n      disabled = null;\n    }\n\n    const buttonType =\n      type === Config.helpMode.multipleNums ? Config.helpMode.singleNum : type;\n    const id = Config.helpModeButtonIds[buttonType];\n    let title = Config.helpModeCaptions[buttonType][lang];\n\n    if (type === Config.helpMode.singleNum) {\n      if (helpMode === Config.helpMode.singleNum) {\n        title = Config.helpModeCaptions[Config.helpMode.none][lang];\n      } else if (helpMode === Config.helpMode.candidates) {\n        title = Config.helpModeCaptions[Config.helpMode.both][lang];\n      } else if (helpMode === Config.helpMode.both) {\n        title = Config.helpModeCaptions[Config.helpMode.multipleNums][lang];\n      }\n    } else if (type === Config.helpMode.multipleNums) {\n      title = Config.helpModeCaptions[Config.helpMode.none][lang];\n    } else if (type === Config.helpMode.candidates) {\n      if (helpMode === Config.helpMode.candidates) {\n        title = Config.helpModeCaptions[Config.helpMode.none][lang];\n      } else if (helpMode === Config.helpMode.singleNum) {\n        title = Config.helpModeCaptions[Config.helpMode.both][lang];\n      }\n    }\n\n    return (\n      <button\n        key={id}\n        id={id}\n        className={btnClsName}\n        title={title}\n        onClick={() => handleHelpMode(type)}\n        disabled={disabled}\n      >\n        {Config.helpModeButtonLabels[type][lang]}\n      </button>\n    );\n  };\n\n  render() {\n    const { helpMode } = this.props;\n\n    const buttonTypes =\n      helpMode === Config.helpMode.multipleNums\n        ? Config.helpModeArray4displayOnMultipleNums\n        : Config.helpModeArray4display;\n    // let clsName = Config.helpModeButtonClassNames.container;\n\n    // if (mode !== Config.mode.play) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    const buttons = buttonTypes.map(type => this.getButton(type));\n\n    return (\n      <div\n        id={Config.helpModeButtonIds.wrapper}\n        className={Config.helpModeButtonClassNames.wrapper}\n      >\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default HelpModeButtons;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass SingleNum extends Component {\n  render() {\n    const { helpMode, singleNumValue, numCounts, handleSingleNum } = this.props;\n\n    const radios = Util.getIndexSequence(Config.size + 1).map(num => {\n      const id = Config.buttonIds.singleNumRadio + num;\n\n      let labelDivClassName = Config.panelClassNames.cellNum + num;\n      if (numCounts[num] === Config.size) {\n        labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 0);\n      }\n\n      let disabled = null;\n      if (\n        [Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode) &&\n        num === 0\n      ) {\n        disabled = true;\n      }\n\n      let labelClassName = null;\n      if (\n        numCounts[num] === Config.size ||\n        ([Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode) &&\n          num === 0)\n      ) {\n        labelClassName = Config.buttonClassNames.singleNumDone;\n      } else if (numCounts[num] > Config.size) {\n        labelClassName = Config.buttonClassNames.singleNumExceeding;\n      }\n\n      return (\n        <label key={id} id={id} className={labelClassName}>\n          <div className={labelDivClassName}>{num > 0 ? num : \"-\"}</div>\n\n          <input\n            type=\"radio\"\n            name={Config.helpMode.singleNum}\n            value={num.toString()}\n            onChange={() => handleSingleNum(num)}\n            checked={singleNumValue === num}\n            disabled={disabled}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.singleNum}\n        className={Config.buttonClassNames.singleNumRadioWrapper}\n      >\n        {radios}\n      </div>\n    );\n  }\n}\n\nexport default SingleNum;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass MultipleNums extends Component {\n  handleChange = event => {\n    const { handleMultipleNums } = this.props;\n\n    const num = parseInt(event.target.value);\n    // const checked = event.target.checked;\n\n    handleMultipleNums(num);\n  };\n\n  render() {\n    const { multipleNums, numCounts } = this.props;\n\n    const checkboxs = Util.getNsequence(Config.size).map(num => {\n      const id = Util.appendNum(Config.buttonIds.multipleNums, num);\n      const labelId = Util.appendNum(Config.buttonIds.multipleNumsLabel, num);\n      const checkboxId = Util.appendNum(\n        Config.buttonIds.multipleNumsCheckbox,\n        num\n      );\n\n      let labelDivClassName = Config.panelClassNames.cellNum + num;\n      if (numCounts[num] === Config.size) {\n        labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 0);\n      }\n\n      let labelClassName = null;\n      if (numCounts[num] === Config.size) {\n        labelClassName = Config.buttonClassNames.multipleNumsDone;\n      } else if (numCounts[num] > Config.size) {\n        labelClassName = Config.buttonClassNames.multipleNumsExceeding;\n      }\n\n      const checked = multipleNums.includes(num);\n      const name = Util.appendNum(\"num\", num);\n\n      return (\n        <label key={id} id={id} className={labelClassName}>\n          <div key={labelId} className={labelDivClassName}>\n            {num > 0 ? num : \"-\"}\n          </div>\n\n          <input\n            type=\"checkbox\"\n            key={checkboxId}\n            name={name}\n            value={num.toString()}\n            onChange={this.handleChange}\n            checked={checked}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.multipleNums}\n        className={Config.buttonClassNames.multipleNumsCheckBoxWrapper}\n      >\n        {checkboxs}\n      </div>\n    );\n  }\n}\n\nexport default MultipleNums;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nclass CandidateLevels extends Component {\n  getButton = level => {\n    const {\n      lang,\n      mode,\n      helpMode,\n      candidateLevel,\n      handleCandidates: handleCandidateLevels\n    } = this.props;\n\n    const nLevel = Util.getLevelNum(level);\n    let disabled = true;\n    let label = \"\";\n    let titleCaption = \"\";\n    let btnClsName = Config.buttonClassNames.candidateButton;\n\n    label = Util.getCandidateLevelTitle(level);\n\n    if (helpMode === Config.helpMode.singleNum) {\n      if (Object.keys(Config.singleNumCaptions).includes(level)) {\n        titleCaption = Config.singleNumCaptions[level][lang];\n      }\n    } else {\n      titleCaption = Config.candidateLevelCaptions[level][lang];\n    }\n\n    if (Util.getLevelNum(level) === candidateLevel) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      mode === Config.mode.play &&\n      (helpMode === Config.helpMode.candidates ||\n        (helpMode === Config.helpMode.singleNum &&\n          nLevel <=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleExclusive\n            )) ||\n        ([\n          Config.helpMode.candidates,\n          Config.helpMode.both,\n          Config.helpMode.multipleNums\n        ].includes(helpMode) &&\n          nLevel <\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )))\n    ) {\n      disabled = null;\n    }\n\n    return (\n      <button\n        key={level}\n        id={Util.getCandidateLevelId(level)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleCandidateLevels(level)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  render() {\n    // const { mode, helpMode } = this.props;\n\n    // let clsName = Config.buttonClassNames.candidateContainer;\n\n    // if (\n    //   mode !== Config.mode.play ||\n    //   ![Config.helpMode.none, Config.helpMode.candidates].includes(helpMode)\n    // ) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    const buttons = Config.candidateLevels.map(candidateLevel =>\n      this.getButton(candidateLevel)\n    );\n\n    return (\n      <div\n        id={Config.buttonIds.candidates}\n        className={Config.buttonClassNames.candidateButtonWrapper}\n      >\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default CandidateLevels;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport forwardLogo from \"../../../images/forward.svg\";\nimport forwardDisabledLogo from \"../../../images/forwardDisabled.svg\";\nimport fastForwardLogo from \"../../../images/fastForward.svg\";\nimport fastForwardDisabledLogo from \"../../../images/fastForwardDisabled.svg\";\nimport backwardLogo from \"../../../images/backward.svg\";\nimport backwardDisabledLogo from \"../../../images/backwardDisabled.svg\";\nimport rewindLogo from \"../../../images/rewind.svg\";\nimport rewindDisabledLogo from \"../../../images/rewindDisabled.svg\";\nimport selectLogo from \"../../../images/select.svg\";\nimport selectDisabledLogo from \"../../../images/selectDisabled.svg\";\nimport eraseLogo from \"../../../images/erase.svg\";\nimport eraseDisabledLogo from \"../../../images/eraseDisabled.svg\";\n\nclass Controls extends Component {\n  constructor() {\n    super();\n    this.state = { isSkipIneffective: true };\n  }\n\n  checkboxIsSkip = React.createRef();\n\n  getButton = controlType => {\n    const {\n      lang,\n      helpMode,\n      markerStatus,\n      trace,\n      candidateLevel,\n      handleControls\n    } = this.props;\n\n    let disabled = true;\n    let label = \"\";\n    let titleCaption = \"\";\n\n    const activeSymbols = {\n      [Config.candidateControls.forward]: forwardLogo,\n      [Config.candidateControls.fastForward]: fastForwardLogo,\n      [Config.candidateControls.backward]: backwardLogo,\n      [Config.candidateControls.reset]: rewindLogo,\n      [Config.candidateControls.select]: selectLogo,\n      [Config.candidateControls.erase]: eraseLogo\n    };\n\n    const disabledSymbols = {\n      [Config.candidateControls.forward]: forwardDisabledLogo,\n      [Config.candidateControls.fastForward]: fastForwardDisabledLogo,\n      [Config.candidateControls.backward]: backwardDisabledLogo,\n      [Config.candidateControls.reset]: rewindDisabledLogo,\n      [Config.candidateControls.select]: selectDisabledLogo,\n      [Config.candidateControls.erase]: eraseDisabledLogo\n    };\n\n    const iconSizeSmall = Config.candidateControlIconSizes.small;\n    const iconSizeLarge = Config.candidateControlIconSizes.large;\n    const iconStyleSmall = { width: iconSizeSmall, height: iconSizeSmall };\n    const iconStyleLarge = { width: iconSizeLarge, height: iconSizeLarge };\n\n    const iconStyles = {\n      [Config.candidateControls.forward]: iconStyleSmall,\n      [Config.candidateControls.fastForward]: iconStyleSmall,\n      [Config.candidateControls.backward]: iconStyleSmall,\n      [Config.candidateControls.reset]: iconStyleSmall,\n      [Config.candidateControls.select]: iconStyleLarge,\n      [Config.candidateControls.erase]: iconStyleLarge\n    };\n\n    let btnClsName = Config.buttonClassNames.candidateButton;\n\n    let symbol = disabledSymbols[controlType];\n\n    if (\n      ([\n        Config.candidateControls.backward,\n        Config.candidateControls.reset\n      ].includes(controlType) &&\n        trace.length > 0) ||\n      (controlType === Config.candidateControls.select &&\n        helpMode === Config.helpMode.candidates &&\n        markerStatus === Config.buttonStatus.active &&\n        candidateLevel >=\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.displayCandidates\n          )) ||\n      ([\n        Config.helpMode.candidates,\n        Config.helpMode.singleNum,\n        Config.helpMode.both,\n        Config.helpMode.multipleNums\n      ].includes(helpMode) &&\n        candidateLevel >=\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.singleCandidate\n          ))\n    ) {\n      symbol = activeSymbols[controlType];\n      disabled = null;\n    }\n\n    label = (\n      <img\n        src={symbol}\n        style={iconStyles[controlType]}\n        alt={Config.constrolIconCaptions[controlType][lang]}\n        title={Config.constrolIconCaptions[controlType][lang]}\n      />\n    );\n\n    return (\n      <button\n        key={controlType}\n        id={Util.getControlId(controlType)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleControls(controlType)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  handleCheckbox = e => {\n    const { handleSkipIneffectiveStatus } = this.props;\n\n    const isSkipIneffective = e.currentTarget.checked;\n\n    this.setState({ isSkipIneffective });\n\n    handleSkipIneffectiveStatus(isSkipIneffective);\n  };\n\n  render() {\n    const { lang, mode, helpMode, candidateLevel } = this.props;\n\n    let disabled = true;\n    // let clsName = Config.buttonClassNames.candidateContainer;\n\n    // if (\n    //   mode !== Config.mode.play ||\n    //   ![Config.helpMode.none, Config.helpMode.candidates].includes(helpMode)\n    // ) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    if (\n      mode === Config.mode.play &&\n      helpMode === Config.helpMode.candidates &&\n      candidateLevel >\n        Util.getLevelNumFromFunctionName(\n          Config.candidateTypes.displayCandidates\n        )\n    ) {\n      disabled = null;\n    }\n\n    const buttons = Config.candidateControlArray.map(controlType =>\n      this.getButton(controlType)\n    );\n\n    return (\n      <div>\n        <div\n          id={Config.buttonIds.controls}\n          className={Config.buttonClassNames.candidateButtonWrapper}\n        >\n          {buttons}\n        </div>\n        <label\n          key={Config.buttonIds.controlLabelSkipIneffective}\n          id={Config.buttonIds.controlLabelSkipIneffective}\n          className={Config.buttonClassNames.controlSkipIneffective}\n        >\n          <input\n            type=\"checkbox\"\n            ref={this.checkboxIsSkip}\n            name={Config.formNames.skipIneffective}\n            onChange={this.handleCheckbox}\n            checked={this.state.isSkipIneffective}\n            disabled={disabled}\n          />\n          {Config.helpModeButtonLabels.skipIneffective[lang]}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport HelpModeButtons from \"./HelpModeButtons\";\nimport SingleNum from \"./SingleNum\";\nimport MultipleNums from \"./MultipleNums\";\nimport CandidateLevels from \"./CandidatesLevels\";\nimport Controls from \"./Controls\";\n\nclass HelpModePane extends Component {\n  render() {\n    const { lang, mode, helpMode } = this.props;\n\n    let clsName = Config.helpModeButtonClassNames.container;\n\n    if (mode !== Config.mode.play) {\n      clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    }\n\n    let titleClassName = Config.buttonClassNames.candidateTitle;\n\n    const numPanel =\n      helpMode === Config.helpMode.multipleNums ? (\n        <MultipleNums {...this.props} />\n      ) : (\n        <SingleNum {...this.props} />\n      );\n\n    return (\n      <div id={Config.helpModeButtonIds.container} className={clsName}>\n        <div>\n          <h3 className={titleClassName}>\n            {Config.helpModeButtonLabels.title[lang]}\n          </h3>\n        </div>\n        <HelpModeButtons {...this.props} />\n        {numPanel}\n        <CandidateLevels {...this.props} />\n        <Controls {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default HelpModePane;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass MarkerButton extends Component {\n  render() {\n    const { lang, mode, markerStatus, handleMarker } = this.props;\n\n    let clsName = Config.buttonClassNames.marker;\n    if (markerStatus === Config.buttonStatus.active) {\n      clsName = [clsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.marker}\n        className={clsName}\n        onClick={handleMarker}\n        disabled={mode === Config.mode.play ? null : true}\n      >\n        {Config.buttonTitles.marker[lang]}\n      </button>\n    );\n  }\n}\n\nexport default MarkerButton;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass LangButton extends Component {\n  render() {\n    const { lang, handleLang } = this.props;\n\n    // console.log(\"inside LangButton\");\n\n    let clsName = Config.buttonClassNames.lang;\n    const theOtherLang = Util.flipLang(lang);\n    const buttonTitle = Config.langButtonTitles[theOtherLang];\n\n    return (\n      <button\n        id={Config.buttonIds.lang}\n        className={clsName}\n        onClick={handleLang}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default LangButton;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass HelpButton extends Component {\n  handleHelp = () => {\n    const { handleHelpButton, lang } = this.props;\n\n    const fileName = Config.helpFiles[lang];\n    const path = Config.helpPath + fileName;\n\n    // window.open(\"./help/help_ja.html\", \"_blank\");\n    window.open(path, \"_blank\");\n    handleHelpButton();\n  };\n\n  render() {\n    const { lang } = this.props;\n\n    // console.log(\"inside HelpButton\");\n\n    let clsName = Config.buttonClassNames.help;\n\n    const buttonTitle = Config.buttonTitles.help[lang];\n\n    return (\n      <button\n        id={Config.buttonIds.help}\n        className={clsName}\n        onClick={this.handleHelp}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default HelpButton;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cellColor.css\";\n\nclass Indicator extends Component {\n  render() {\n    const { gameLevel } = this.props;\n\n    // console.log(\"inside Indicator\");\n\n    const clsName = Util.appendNum(Config.buttonIds.indicator, gameLevel);\n\n    return (\n      <div id={Config.buttonIds.indicatorWrapper}>\n        <span id={Config.buttonIds.indicator} className={clsName} />\n      </div>\n    );\n  }\n}\n\nexport default Indicator;\n","import React, { Component } from \"react\";\n\nimport Check from \"./Check\";\nimport HelpModePane from \"./helpMode/HelpModePane\";\n// import HelpModeButtons from \"./helpMode/HelpModeButtons\";\n// import SingleNum from \"./helpMode/SingleNum\";\n// import CandidateLevels from \"./helpMode/CandidatesLevels\";\n// import Controls from \"./helpMode/Controls\";\nimport MarkerButton from \"./MarkerButton\";\nimport LangButton from \"./LangButton\";\nimport HelpButton from \"./HelpButton\";\nimport Indicator from \"./Indicator\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ControlPanel.css\";\n\nclass HelperlPanel extends Component {\n  render() {\n    const { lang } = this.props;\n\n    return (\n      <div\n        id={Config.panelIds.helper}\n        className={Config.panelClassNames.helper}\n      >\n        <div id={Config.buttonIds.helperLableWrapper}>\n          <h2>{Config.panelTitles.helper[lang]}</h2>\n          <Indicator {...this.props} />\n        </div>\n\n        <Check {...this.props} />\n        <HelpModePane {...this.props} />\n        <MarkerButton {...this.props} />\n        <HelpButton {...this.props} />\n        <LangButton {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default HelperlPanel;\n","import React, { Component } from \"react\";\n\nimport Config from \"../Config\";\nimport Util from \"../Util\";\n\nimport \"../css/cell.css\";\nimport \"../css/cellColor.css\";\nimport \"../App.css\";\n\nclass Footer extends Component {\n  render() {\n    const { lang, sampleGameID } = this.props;\n\n    const gameInfo = Util.getSampleGameInfo(sampleGameID);\n\n    let credit = \"\";\n    if (gameInfo) {\n      credit = Util.getCredit(\n        Config.sampleGames[gameInfo.gameClass][gameInfo.idx].credit[lang],\n        lang\n      );\n    }\n\n    return (\n      <div\n        id={Config.panelIds.footer}\n        className={Config.panelClassNames.footer}\n      >\n        <span\n          id={Config.panelIds.footerCredit}\n          className={Config.panelClassNames.footerCredit}\n        >\n          {credit}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass Delete extends Component {\n  render() {\n    const { numMatrix, markerNums, activeCellIndex, handleDelete } = this.props;\n\n    let disabled = true;\n    if (activeCellIndex) {\n      if (typeof activeCellIndex.b !== \"undefined\") {\n        if (Util.isNumInMarker(markerNums, activeCellIndex)) {\n          disabled = null;\n        }\n      } else {\n        if (Util.isNumInCell(numMatrix, activeCellIndex)) {\n          disabled = null;\n        }\n      }\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.delete}\n        onClick={handleDelete}\n        disabled={disabled}\n      >\n        {Config.buttonTitles.delete}\n      </button>\n    );\n  }\n}\n\nexport default Delete;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass Cancel extends Component {\n  render() {\n    return (\n      <button id={Config.buttonIds.cancel} onClick={this.props.handleCancel}>\n        {Config.buttonTitles.cancel}\n      </button>\n    );\n  }\n}\n\nexport default Cancel;\n","import React, { Component } from \"react\";\n\nimport Delete from \"./Delete\";\nimport Cancel from \"./Cancel\";\n\nimport Config from \"../../Config\";\n\nclass NumPanelControl extends Component {\n  render() {\n    return (\n      <div id={Config.panelIds.numPanelControl}>\n        <Delete {...this.props} />\n        <Cancel {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default NumPanelControl;\n","import React, { Component } from \"react\";\n\nimport NumPanelBlock from \"../NumPanelBlock\";\nimport NumPanelControl from \"./NumPanelControl\";\n\nimport Config from \"../../Config\";\n\nclass NumPanel extends Component {\n  render() {\n    const { handleNumPanelClick } = this.props;\n\n    return (\n      <div id={Config.panelIds.numPanelContainer}>\n        <NumPanelBlock\n          key={Config.panelIds.numPanel}\n          blockId={Config.panelIds.numPanel}\n          blockClass={Config.panelClassNames.block}\n          cellIdBase={Config.panelIds.numPanelCell}\n          cellClass={Config.panelClassNames.cell}\n          onClickFunc={handleNumPanelClick}\n        />\n        <NumPanelControl {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default NumPanel;\n","import React, { Component } from \"react\";\n// Required to use React portals\n// import ReactDOM from \"react-dom\";\n\nimport NumPanel from \"./NumPanel\";\nimport Config from \"../../Config\";\n\nimport \"../../css/Floating.css\";\n\nclass Floating extends Component {\n  state = {\n    showNumPanel: !!this.props.showNumPanel\n  };\n\n  componentWillReceiveProps({ showNumPanel }) {\n    this.setState({ showNumPanel });\n  }\n\n  handleModalClick = () => {\n    this.setState({\n      showNumPanel: false\n    });\n  };\n\n  render() {\n    const { modal, closeOnModalClick, mousePosition } = this.props;\n    const { showNumPanel } = this.state;\n    const isModal = modal ? \" modal\" : \"\";\n    const doShow = showNumPanel ? \" show\" : \"\";\n    const id = Config.panelIds.numPanelWrapper;\n    const clsName = [\n      Config.panelClassNames.numPanelWrapper,\n      isModal,\n      doShow\n    ].join(\" \");\n\n    const props = {\n      onClick: closeOnModalClick ? this.handleModalClick : null\n    };\n\n    // const float = (\n    return (\n      <div\n        id={id}\n        {...props}\n        className={clsName}\n        style={{\n          position: \"absolute\",\n          left: mousePosition.x,\n          top: mousePosition.y,\n          display: showNumPanel ? \"flex\" : \"none\"\n        }}\n      >\n        <NumPanel {...this.props} />\n      </div>\n    );\n    // );\n\n    // return viewport ? ReactDOM.createPortal(float, document.body) : float;\n  }\n}\n\nexport default Floating;\n","import React, { Component } from \"react\";\n// Required to use React portals\n// import ReactDOM from \"react-dom\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ShowMessage.css\";\n\nimport closeLogo from \"../../images/close.svg\";\n\nclass ShowMessage extends Component {\n  state = {\n    show: !!this.props.isShowMessage\n  };\n\n  componentWillReceiveProps({ isShowMessage }) {\n    this.setState({ isShowMessage });\n  }\n\n  render() {\n    const {\n      modal,\n      // viewport,\n      closeOnModalClick,\n      message,\n      handleMessageModalClick\n    } = this.props;\n    const { isShowMessage } = this.state;\n    const isModal = modal ? \" modal\" : \"\";\n    const doShow = isShowMessage ? \" show\" : \"\";\n    // const isViewport = viewport ? \" viewport\" : \"\";\n    const id = Config.panelIds.messageWrapper;\n    const clsName = [\n      Config.panelClassNames.messageWrapper,\n      isModal,\n      doShow\n    ].join(\" \");\n\n    const props = {\n      onClick: closeOnModalClick ? handleMessageModalClick : null\n    };\n\n    // const float = (\n    return (\n      <div\n        id={id}\n        {...props}\n        className={clsName}\n        style={{\n          position: \"absolute\",\n          display: isShowMessage ? \"flex\" : \"none\"\n        }}\n      >\n        {/* {this.props.children} */}\n        <h1>{message}</h1>\n        <img src={closeLogo} alt=\"close\" title=\"close\" />\n      </div>\n    );\n\n    // return viewport ? ReactDOM.createPortal(float, document.body) : float;\n  }\n}\n\nexport default ShowMessage;\n","import React, { Component } from \"react\";\n\nimport SudokuBoard from \"./components/sudokuBoard/SudokuBoard\";\nimport ControlPanel from \"./components/control/ControlPanel\";\nimport HelperPanel from \"./components/helper/HelperPanel\";\nimport Footer from \"./components/Footer\";\n\nimport Floating from \"./components/floating/Floating\";\nimport ShowMessage from \"./components/floating/ShowMessage\";\n\nimport Util from \"./Util\";\nimport Config from \"./Config\";\n\nimport { getRandomInt } from \"./util/Random\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  getInitialState() {\n    const numMatrix = Util.initMatrix();\n\n    return {\n      lang: Config.lang.en,\n      mode: Config.mode.set, // set, play\n      helpMode: Config.helpMode.none, // none, check, singleNum, candidates\n      checkMode: Config.checkMode.duplicates,\n\n      numMatrix: numMatrix,\n      ansMatrix: Util.initMatrix(),\n      isRegisteredMatrix: Util.getRegisteredFlags(numMatrix),\n      numCounts: Util.countNumbers(numMatrix),\n      candidates: Util.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      trace: [],\n      markerStatus: Config.buttonStatus.waiting,\n      markerNums: Util.initMarkerNums(),\n\n      // gameLevel: 10,\n      gameLevel: 0,\n      sampleGameID: null,\n\n      singleNumValue: 0,\n      multipleNums: [],\n\n      candidateLevel: null,\n      isStepByStep: true,\n      isSkipIneffective: true,\n      duplicates: [],\n\n      activeCellIndex: null,\n\n      mousePosition: {\n        x: 0,\n        y: 0\n      },\n\n      showNumPanel: false,\n      isShowMessage: false,\n      message: \"\",\n\n      isFilled: false,\n      isComplete: false,\n      isGameDone: false,\n      didUpdate: false\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = this.getInitialState();\n  }\n\n  componentDidUpdate() {\n    const { isFilled, isComplete, numMatrix, trace } = this.state;\n    // console.log(\"inside componentDidUpdate\");\n\n    if (!isComplete && !isFilled && Util.isAllFilled(numMatrix)) {\n      const successMessages = Config.messages.success;\n\n      this.setState({ isFilled: true });\n\n      if (this.doCheckDuplicates() === Config.result.passed) {\n        let isShowMessage = true;\n        let message = successMessages[getRandomInt(0, successMessages.length)];\n\n        if (Util.countManualInputs(trace) === 0) {\n          isShowMessage = false;\n        }\n\n        this.setState({\n          helpMode: Config.helpMode.none,\n          candidateLevel: null,\n          isComplete: true,\n          isShowMessage,\n          message\n        });\n      } else {\n        this.setState({\n          isShowMessage: true,\n          message: Config.messages.failure\n        });\n      }\n    }\n  }\n\n  calcAnswer = numMatrix => {\n    // const { gameLevel, isSkipIneffective } = this.state;\n    const { isSkipIneffective } = this.state;\n\n    // console.log(\"inside calcAnswer\");\n\n    const candidateLevel = Config.candidateLevelTypesArray.length - 1;\n    const helpMode = Config.helpMode.candidates;\n    const isStepByStep = false;\n    const isSkipLevel1 = false;\n    const singleNumValue = null;\n    const isMarkerOff = true;\n\n    let dataset = {\n      numMatrix: Util.deepCopy(numMatrix),\n      candidates: Util.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      markerNums: Util.initMarkerNums(),\n      trace: [],\n      // gameLevel: gameLevel === 10 ? 0 : gameLevel\n      gameLevel: 0\n    };\n\n    let conditions = {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep,\n      isSkipLevel1,\n      isSkipIneffective,\n      isMarkerOff\n    };\n\n    // console.log(\"game level: \", dataset.gameLevel);\n\n    dataset = Util.setCandidates(dataset, conditions);\n\n    // console.log(\"game level: \", dataset.gameLevel);\n\n    // There is a cell full of wide-removed //\n    if (dataset === null) {\n      return null;\n    }\n\n    dataset = Util.convertSelectable2Selected(dataset);\n\n    // console.log(\"game level: \", dataset.gameLevel);\n\n    // return dataset.numMatrix;\n    return dataset;\n  };\n\n  addNumNStore = cellInfo => {\n    const { checkMode, ansMatrix } = this.state;\n\n    // console.log(\"inside addNumNStore\");\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n      let helpMode = prevState.helpMode;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: prevState.isRegisteredMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      dataset = this.addNum(dataset, cellInfo);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      if (!duplicates) {\n        duplicates = [];\n      }\n\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      } else if (checkMode === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, dataset.numMatrix);\n      }\n\n      return {\n        helpMode: helpMode,\n        numMatrix: dataset.numMatrix,\n        isRegisteredMatrix: dataset.isRegisteredMatrix,\n        numCounts: Util.countNumbers(dataset.numMatrix),\n        trace: dataset.trace,\n        duplicates: duplicates,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  addNum = (dataset, cellInfo) => {\n    const { mode, helpMode, ansMatrix, candidateLevel } = this.state;\n\n    let { numMatrix, isRegisteredMatrix, trace } = dataset;\n\n    // console.log(\"inside addNum\");\n\n    const num = Util.getNumFromNumMatrix(numMatrix, cellInfo.idx);\n    if (num) {\n      cellInfo.prevNum = num;\n    }\n\n    numMatrix = Util.assignNum2NumMatrix(numMatrix, cellInfo);\n\n    if (!Util.isNumCorrect(ansMatrix, cellInfo)) {\n      cellInfo.isWrong = true;\n    }\n\n    // // process either game setting or playing\n    const traceLength = trace.length;\n    if (Config.updateHelpModes.includes(helpMode) && candidateLevel !== null) {\n      dataset = Util.updateCandidates(dataset, cellInfo, candidateLevel);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n    }\n\n    // process either game setting or playing\n    if (mode === Config.mode.set) {\n      isRegisteredMatrix = Util.assignTruth2regMatrix(\n        isRegisteredMatrix,\n        Util.initRegInfo(cellInfo.idx)\n      );\n    } else if (mode === Config.mode.play && !cellInfo.isBackward) {\n      if (trace.length > traceLength) {\n        const traceItem = trace[trace.length - 1];\n        traceItem.numMatrix = cellInfo;\n        traceItem.operation = Config.operationTypes.manual;\n      } else {\n        trace.push(\n          Util.initTraceItemNum(cellInfo, Config.operationTypes.manual)\n        );\n      }\n    }\n\n    dataset.isRegisteredMatrix = isRegisteredMatrix;\n\n    return dataset;\n  };\n\n  deleteNumNStore = idx => {\n    const { checkMode } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: prevState.isRegisteredMatrix,\n        trace: prevState.trace\n      };\n\n      dataset = this.deleteNum(dataset, idx);\n\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      }\n\n      return {\n        numMatrix: dataset.numMatrix,\n        isRegisteredMatrix: dataset.isRegisteredMatrix,\n        numCounts: Util.countNumbers(dataset.numMatrix),\n        trace: dataset.trace,\n\n        duplicates,\n\n        isFilled: false,\n        isComplete: false,\n        isGameDone: false\n      };\n    });\n  };\n\n  deleteNum = (dataset, idx, isBackward = false) => {\n    const { mode } = this.state;\n\n    // console.log(\"inside deleteNum\");\n\n    let { numMatrix, isRegisteredMatrix, trace } = dataset;\n\n    // save the num to be deleted for trace //\n    const num = Util.getNumFromNumMatrix(numMatrix, idx);\n\n    numMatrix = Util.assignNum2NumMatrix(\n      numMatrix,\n      Util.initCellInfo(idx, null)\n    );\n\n    if (mode === Config.mode.set) {\n      isRegisteredMatrix = Util.assignTruth2regMatrix(\n        isRegisteredMatrix,\n        Util.initRegInfo(idx, false)\n      );\n    }\n\n    if (mode === Config.mode.play && !isBackward) {\n      trace.push(Util.initTraceItem(Util.initCellInfo(idx, -num)));\n    }\n\n    dataset.isRegisteredMatrix = isRegisteredMatrix;\n\n    return dataset;\n  };\n\n  addMarkerNStore = markerInfo => {\n    // console.log(\"inside addMarker\");\n\n    this.setState(prevState => {\n      let dataset = {\n        markerNums: prevState.markerNums,\n        candidates: prevState.candidates,\n        trace: prevState.trace\n      };\n\n      dataset = this.addMarker(dataset, markerInfo);\n\n      return {\n        markerNums: dataset.markerNums,\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  addMarker = (dataset, markerInfo) => {\n    // console.log(\"inside addMarker\");\n\n    const { candidateLevel } = this.state;\n\n    let { markerNums, candidates, trace } = dataset;\n    let markerTrace = [];\n    let candidateTrace = [];\n\n    const duplicatedIdx = Util.findNumInMarker(markerNums, markerInfo);\n\n    if (duplicatedIdx !== null) {\n      return {};\n    }\n\n    markerInfo.status = Config.candidateStatus.exclusiveSingle;\n\n    markerNums = Util.setMarkerNum(markerNums, markerInfo);\n\n    if (candidateLevel !== null && candidateLevel > 0) {\n      let candidateTraceTmp = [];\n      let markerTraceTmp = [];\n\n      [\n        candidates,\n        markerNums,\n        candidateTraceTmp,\n        markerTraceTmp\n      ] = Util.setRelatedCandidatesBySingleMark(\n        candidates,\n        markerInfo,\n        markerNums\n      );\n\n      if (markerTraceTmp && markerTraceTmp.length > 0) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      if (candidateTraceTmp && candidateTraceTmp.length > 0) {\n        candidateTrace = candidateTrace.concat(candidateTraceTmp);\n      }\n\n      [\n        candidates,\n        markerNums,\n        candidateTraceTmp,\n        markerTraceTmp\n      ] = Util.setRelatedCandidatesByMultipleMarks(\n        candidates,\n        markerNums,\n        markerInfo\n      );\n\n      if (markerTraceTmp && markerTraceTmp.length > 0) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      if (candidateTraceTmp && candidateTraceTmp.length > 0) {\n        candidateTrace = candidateTrace.concat(candidateTraceTmp);\n      }\n    }\n\n    if (\n      markerTrace.length === 0 ||\n      !Util.findPreviousMarkerInfo(markerNums, markerTrace, markerInfo)\n    ) {\n      markerTrace.push(markerInfo);\n    }\n\n    const traceItem = Util.initTraceItem(\n      null,\n      candidateTrace,\n      markerTrace,\n      Config.operationTypes.manual\n    );\n\n    trace.push(traceItem);\n\n    return dataset;\n  };\n\n  delMarker = markerInfos => {\n    // console.log(\"inside delMarker\");\n\n    this.setState(prevState => {\n      let trace = prevState.trace;\n\n      const [markerNums, newMarkerInfos] = Util.resetMarker(\n        prevState.markerNums,\n        markerInfos\n      );\n\n      trace.push(Util.initTraceItemMarker(newMarkerInfos));\n\n      return { markerNums, trace };\n    });\n  };\n\n  updateMarkerStatusNStore = cellInfo => {\n    // console.log(\"inside updateMarkerStatus\");\n\n    this.setState(prevState => {\n      let dataset = {\n        candidates: prevState.candidates,\n        markerNums: prevState.markerNums\n      };\n\n      dataset = this.updateMarkerStatus(dataset, cellInfo);\n\n      return {\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  updateMarkerStatus = (dataset, cellInfo) => {\n    // console.log(\"inside updateMarkerStatus\");\n\n    const { candidateLevel } = this.state;\n\n    let { candidates, markerNums } = dataset;\n\n    // update marker status of the cells added num //\n    let markerIdxs = Util.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    // convert exclusive type from triple to double //\n    for (let markerIdx of markerIdxs) {\n      let infos = Util.getInfosFromMarkerNums(markerNums, markerIdx);\n\n      if (\n        infos.nums.length === 2 &&\n        infos.statuses[0] === Config.candidateStatus.exclusiveTriple\n      ) {\n        for (let [i, num] of infos.nums.entries()) {\n          markerIdx.i = i;\n          const markerInfo = Util.initMarkerInfo(\n            markerIdx,\n            num,\n            Config.candidateStatus.exclusiveDouble\n          );\n          markerNums = Util.assignMarkerStatus(markerNums, markerInfo);\n        }\n      }\n    }\n\n    // update marker statuses remote from the cell added num //\n    markerIdxs = Util.getRelatedMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    // set selectable type A to markerNums //\n    for (let markerIdx of markerIdxs) {\n      const nums = Util.getNumsFromMarkerNums(markerNums, markerIdx);\n\n      if (nums.length > 0) {\n        const cellIdxs = Util.getCorrespondingCellIdxs2MarkerIdx(markerIdx);\n\n        // find selectable type A //\n        for (let num of nums) {\n          let concerningCellInfos = cellIdxs.map(idx =>\n            Util.initCellInfo(idx, num)\n          );\n\n          if (\n            Util.countNumInCandidates(candidates, concerningCellInfos) === 1 &&\n            candidateLevel >\n              Util.getLevelNumFromFunctionName(\n                Config.candidateTypes.displayCandidates\n              )\n          ) {\n            const targetMarkerInfo = Util.initMarkerInfo(markerIdx, num);\n\n            markerNums = Util.assignSelectable2MarkerNums(\n              markerNums,\n              targetMarkerInfo\n            );\n          }\n        }\n      }\n    }\n\n    // set selectable type B to markerNums //\n    let relatedCellIdxs = Util.getRelatedIndicesBesidesItself(cellInfo.idx);\n    relatedCellIdxs = Util.removeWideSelectedCellIdxs(\n      candidates,\n      relatedCellIdxs\n    );\n\n    for (let cellIdx of relatedCellIdxs) {\n      markerNums = Util.setSelectableB2MarkerNums(\n        markerNums,\n        candidates,\n        cellIdx\n      );\n    }\n\n    return dataset;\n  };\n\n  // Pop up panel to input a number to a cell //\n  handleNumPanelClick = event => {\n    const { activeCellIndex } = this.state;\n\n    // console.log(\"inside handleNumPanelClick\");\n\n    const num = parseInt(event.target.id.slice(1, 2));\n    if (activeCellIndex && 0 < num && num < 10) {\n      if (Util.isMarkerIndex(activeCellIndex)) {\n        this.addMarkerNStore(Util.initMarkerInfo(activeCellIndex, num));\n      } else {\n        this.addNumNStore(Util.initCellInfo(activeCellIndex, num));\n      }\n    }\n\n    this.setState({\n      showNumPanel: false,\n      activeCellIndex: null\n    });\n  };\n\n  // To delete a number from a cell //\n  handleDelete = () => {\n    const { activeCellIndex } = this.state;\n\n    // console.log(\"inside handleDelete\");\n\n    if (activeCellIndex) {\n      if (Util.isMarkerIndex(activeCellIndex)) {\n        const markerInfo = Util.initCellInfo(activeCellIndex, null);\n\n        this.delMarker([markerInfo]);\n      } else {\n        this.deleteNumNStore(activeCellIndex);\n      }\n    }\n\n    this.setState({\n      showNumPanel: false,\n      activeCellIndex: null\n    });\n  };\n\n  // To cancel number insertion thru popup number panel //\n  handleCancel = () => {\n    // console.log(\"inside handleCancel\");\n\n    this.setState({\n      showNumPanel: false\n    });\n  };\n\n  // To check whether duplcates exist or matach to the answer //\n  handleCheck = level => {\n    // console.log(\"inside handleCheck\");\n\n    const id = Config.buttonIds.check + Util.capitalize(level);\n    const { numMatrix, ansMatrix } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplcates;\n\n      if (level === Config.checkMode.none || level === prevState.checkMode) {\n        duplicates = [];\n        level = Config.checkMode.none;\n      } else if (level === Config.checkMode.duplicates) {\n        duplicates = Util.checkDuplicate(numMatrix);\n      } else if (level === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, numMatrix);\n      }\n\n      return {\n        checkMode: level,\n        duplicates\n      };\n    });\n\n    document.getElementById(id).blur();\n  };\n\n  handleHelpMode = type => {\n    // console.log(\"inside handleHelpMode\");\n\n    let singleNumValue = 0;\n    let candidateLevel = null;\n    let candidates = Util.initCube(Config.candidateStatus.candidate);\n    let exclusiveCandidates = [];\n\n    this.setState(prevState => {\n      const prevHelpMode = prevState.helpMode;\n      const prevSingleNumValue = prevState.singleNumValue;\n      let prevMultipleNums = prevState.multipleNums;\n      let numMatrix = prevState.numMatrix;\n      let markerNums = prevState.markerNums;\n      let trace = prevState.trace;\n\n      let dataset = {\n        numMatrix,\n        candidates,\n        exclusiveCandidates,\n        markerNums,\n        trace\n      };\n\n      const stopCondition = Config.backwardStopCondition.numInsertion;\n\n      // kind of cancel //\n      if (prevHelpMode === type) {\n        dataset = this.doBackward(dataset, stopCondition);\n\n        return {\n          helpMode: Config.helpMode.none,\n          candidateLevel: null,\n          candidates: dataset.candidates,\n          exclusiveCandidates: dataset.exclusiveCandidates,\n          markerNums: dataset.markerNums,\n          trace: dataset.trace\n        };\n      } else if (\n        prevHelpMode === Config.helpMode.both ||\n        prevHelpMode === Config.helpMode.multipleNums\n      ) {\n        // return to candidates mode //\n        if (type === Config.helpMode.candidates) {\n          return {\n            helpMode: Config.helpMode.candidates,\n            singleNumValue: 0,\n            multipleNums: []\n          };\n\n          // change from both to multipleNums by pressing singleNum //\n        } else if (prevHelpMode === Config.helpMode.both) {\n          let candidateLevel = prevState.candidateLevel;\n          if (\n            candidateLevel >=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            candidateLevel = Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.removeByInsertedNum\n            );\n          }\n          return {\n            helpMode: Config.helpMode.multipleNums,\n            candidateLevel,\n            multipleNums: prevSingleNumValue ? [prevSingleNumValue] : [1]\n          };\n        } else if (prevHelpMode === Config.helpMode.multipleNums) {\n          dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n\n          // There is a cell full of wide-removed //\n          if (dataset === null) {\n            return {\n              helpMode: Config.helpMode.none,\n\n              candidates: Util.initCube,\n              exclusiveCandidates: [],\n              markerNums: this.initMarkerNums,\n              trace: [],\n              multipleNums: [],\n\n              isShowMessage: true,\n              message: Config.alertMessages.deadEnd\n            };\n          }\n\n          return {\n            helpMode: Config.helpMode.singleNum,\n            candidates: dataset.candidates,\n            exclusiveCandidates: dataset.exclusiveCandidates,\n            markerNums: dataset.markerNums,\n            trace: dataset.trace,\n            multipleNums: [],\n            singleNumValue:\n              prevMultipleNums.length > 0 ? prevMultipleNums.shift() : 1\n          };\n        }\n      } else {\n        if (Config.helpModeArray4display.includes(prevHelpMode)) {\n          let candidateLevel = prevState.candidateLevel;\n          if (\n            candidateLevel >=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            candidateLevel = Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.removeByInsertedNum\n            );\n          }\n\n          return {\n            helpMode: Config.helpMode.both,\n            candidateLevel,\n            singleNumValue: prevState.singleNumValue\n              ? prevState.singleNumValue\n              : 1\n          };\n        } else {\n          candidateLevel = 0;\n\n          if (type === Config.helpMode.singleNum) {\n            singleNumValue = prevState.singleNumValue\n              ? prevState.singleNumValue\n              : 1;\n\n            dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return {\n                isShowMessage: true,\n                message: Config.alertMessages.deadEnd\n              };\n            }\n          } else if (type === Config.helpMode.candidates) {\n            dataset.trace = [];\n\n            dataset = this.doInitCandidates(candidateLevel);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return {\n                isShowMessage: true,\n                message: Config.alertMessages.deadEnd\n              };\n            }\n\n            trace = trace.concat(dataset.trace);\n          }\n        }\n      }\n\n      return {\n        helpMode: type,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace,\n        singleNumValue,\n        candidateLevel\n      };\n    });\n\n    const id = Config.helpModeButtonIds[type];\n    document.getElementById(id).blur();\n  };\n\n  doCheckDuplicates = () => {\n    const { checkMode, numMatrix, ansMatrix } = this.state;\n\n    let duplicates = Util.checkDuplicate(numMatrix);\n\n    if (checkMode === Config.checkMode.correctness) {\n      const wrongIdxs = Util.checkCorrectness(ansMatrix, numMatrix);\n      duplicates = duplicates.concat(wrongIdxs);\n    }\n\n    this.setState({\n      duplicates\n    });\n\n    if (duplicates.length === 0) {\n      return Config.result.passed;\n    }\n    return Config.result.failed;\n  };\n\n  handleSingleNum = (num, nLevel = null) => {\n    // console.log(\"inside handleSingleNum\");\n\n    const { mode, helpMode, candidateLevel, isSkipIneffective } = this.state;\n    const singleNumValue = parseInt(num);\n\n    if (singleNumValue === 0) {\n      if (helpMode === Config.helpMode.singleNum) {\n        this.setState({\n          helpMode: Config.helpMode.none,\n          singleNumValue\n        });\n      } else {\n        this.setState({\n          singleNumValue\n        });\n      }\n      return;\n    } else if (\n      mode === Config.mode.set ||\n      (helpMode === Config.helpMode.candidates && nLevel === null)\n    ) {\n      this.setState({\n        singleNumValue\n      });\n      return;\n    }\n\n    this.setState(prevState => {\n      if (prevState.mode === Config.mode.play) {\n        if (nLevel === null) {\n          if (candidateLevel === null) {\n            nLevel = 0;\n          } else {\n            nLevel = candidateLevel;\n          }\n        }\n      }\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n        // gameLevel: 0\n      };\n\n      if (helpMode === Config.helpMode.both) {\n        const conditions = {\n          candidateLevel,\n          helpMode,\n          singleNumValue,\n          isStepByStep: true,\n          isSkipLevel1: true,\n          isSkipIneffective\n        };\n\n        dataset = Util.setCandidates(dataset, conditions);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return {\n            isShowMessage: true,\n            message: Config.alertMessages.deadEnd\n          };\n        }\n      } else {\n        dataset = this.doInitSingleNum(singleNumValue, nLevel);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return {\n            isShowMessage: true,\n            message: Config.alertMessages.deadEnd\n          };\n        }\n      }\n\n      return {\n        helpMode:\n          helpMode === Config.helpMode.both\n            ? helpMode\n            : Config.helpMode.singleNum,\n        singleNumValue,\n        candidateLevel: nLevel,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  handleSingleNumLevel = level => {\n    // console.log(\"inside handleSingleNumLevel\");\n\n    // const { helpMode } = this.state;\n\n    let nLevel = Util.getLevelNum(level);\n    let { singleNumValue } = this.state;\n    const id = Util.getSingleNumBtnId(level);\n\n    document.getElementById(id).blur();\n\n    this.setState(() => {\n      const isSkipLevel1 = false;\n      const dataset = this.doCandidates(nLevel, singleNumValue, isSkipLevel1);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidateLevel: nLevel,\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  doInitSingleNum = (singleNumValue, candidateLevel = 0) => {\n    // console.log(\"inside doInitSingleNum\");\n\n    const { numMatrix, isSkipIneffective } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode: Config.helpMode.singleNum,\n      singleNumValue,\n      isStepByStep: true,\n      isSkipLevel1: false,\n      isSkipIneffective\n    };\n\n    return Util.initCandidates(numMatrix, conditions);\n  };\n\n  doInitCandidates = (candidateLevel = 0) => {\n    // console.log(\"inside doInitCandidates\");\n\n    const { numMatrix, isSkipIneffective } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode: Config.helpMode.candidates,\n      singleNumValue: 0,\n      isStepByStep: true,\n      isSkipLevel1: false,\n      isSkipIneffective\n    };\n\n    return Util.initCandidates(numMatrix, conditions);\n  };\n\n  doCandidates = (\n    candidateLevel = 0,\n    singleNumValue = 0,\n    isSkipLevel1 = false\n  ) => {\n    const {\n      helpMode,\n      numMatrix,\n      candidates,\n      exclusiveCandidates,\n      markerNums,\n      trace,\n      isSkipIneffective\n    } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep: true,\n      isSkipLevel1,\n      isSkipIneffective\n    };\n\n    let dataset = {\n      numMatrix: Util.deepCopy(numMatrix),\n      candidates: Util.deepCopy(candidates),\n      exclusiveCandidates: Util.deepCopy(exclusiveCandidates),\n      markerNums: Util.deepCopy(markerNums),\n      trace: Util.deepCopy(trace)\n      // gameLevel: 0\n    };\n\n    return Util.setCandidates(dataset, conditions);\n  };\n\n  handleMultipleNums = num => {\n    this.setState(prevState => {\n      let multipleNums = prevState.multipleNums;\n\n      if (multipleNums.includes(num)) {\n        const index = multipleNums.indexOf(num);\n        if (index > -1) {\n          multipleNums.splice(index, 1);\n        }\n      } else {\n        multipleNums.push(num);\n        multipleNums.sort();\n      }\n\n      return { multipleNums };\n    });\n  };\n\n  handleNumInsert = event => {\n    const { singleNumValue, numMatrix } = this.state;\n\n    // console.log(\"inside handleNumInsert\");\n\n    const cellAddress = event.target.id;\n    const idx = Util.R1C12Index(cellAddress);\n\n    let num = parseInt(event.target.getAttribute(\"data-num\"));\n\n    if (isNaN(num)) {\n      if (singleNumValue !== null && singleNumValue !== 0) {\n        num = singleNumValue;\n      } else {\n        return;\n      }\n    }\n\n    if (0 < num && num < 10) {\n      if (Util.getNumFromNumMatrix(numMatrix, idx) === num) {\n        this.deleteNumNStore(idx);\n      } else {\n        this.addNumNStore(Util.initCellInfo(idx, num));\n      }\n    }\n\n    this.setState({\n      activeCellIndex: null\n    });\n  };\n\n  handleMarkerCell = event => {\n    const { singleNumValue, markerNums } = this.state;\n\n    // console.log(\"inside handleMarkerCell\");\n\n    const cellAddress = event.target.id;\n    let idx = null;\n    let num = null;\n\n    if (Util.isMarkerAddress(cellAddress)) {\n      idx = Util.markerId2Idx(cellAddress);\n\n      if (singleNumValue !== null && singleNumValue !== 0) {\n        num = singleNumValue;\n      } else {\n        return;\n      }\n\n      const markerInfo = Util.initMarkerInfo(idx, num);\n      const oldNum = Util.getNumFromMarkerNums(markerNums, idx);\n\n      if (oldNum === num) {\n        this.delMarker([markerInfo]);\n      } else {\n        this.addMarkerNStore(markerInfo);\n      }\n    }\n\n    this.setState({\n      activeCellIndex: null\n    });\n  };\n\n  handleCandidateLevels = level => {\n    // console.log(\"inside handleCandidates\");\n\n    const id = Util.getCandidateLevelId(level);\n    const { helpMode } = this.state;\n\n    this.setState(prevState => {\n      let candidateLevel = Util.getLevelNum(level);\n      let singleNumValue = prevState.singleNumValue;\n      let isSkipLevel1 = true;\n      let dataset = {};\n\n      if (prevState.candidateLevel === 0) {\n        isSkipLevel1 = false;\n      }\n\n      if (helpMode === Config.helpMode.singleNum) {\n        if (\n          !prevState.candidateLevel ||\n          prevState.candidateLevel > candidateLevel\n        ) {\n          dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n        } else {\n          dataset = this.doCandidates(\n            candidateLevel,\n            singleNumValue,\n            isSkipLevel1\n          );\n        }\n      } else {\n        singleNumValue = 0;\n\n        dataset = this.doCandidates(\n          candidateLevel,\n          singleNumValue,\n          isSkipLevel1\n        );\n      }\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidateLevel,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace\n      };\n    });\n\n    document.getElementById(id).blur();\n  };\n\n  handleControls = controlType => {\n    // console.log(\"inside handleControls\");\n\n    const id = Util.getControlId(controlType);\n\n    const { candidateLevel } = this.state;\n\n    if (controlType === Config.candidateControls.backward) {\n      this.doBackwardNStore();\n\n      return;\n    } else if (controlType === Config.candidateControls.reset) {\n      const isAll = true;\n      this.doBackwardNStore(isAll);\n\n      return;\n    } else if (\n      controlType === Config.candidateControls.select &&\n      candidateLevel >\n        Util.getLevelNumFromFunctionName(\n          Config.candidateTypes.displayCandidates\n        )\n    ) {\n      this.doSelectSelectableCandidates();\n    } else if (\n      candidateLevel >=\n      Util.getLevelNumFromFunctionName(Config.candidateTypes.singleCandidate)\n    ) {\n      if (\n        [\n          Config.candidateControls.forward,\n          Config.candidateControls.fastForward\n        ].includes(controlType)\n      ) {\n        this.doForward(controlType);\n        // } else if (controlType === Config.candidateControls.select) {\n        //   this.doSelectSelectableCandidates();\n      } else if (controlType === Config.candidateControls.erase) {\n        this.doEraseExclusiveColors();\n      }\n    }\n\n    document.getElementById(id).blur();\n  };\n\n  handleSkipIneffectiveStatus = isSkipIneffective => {\n    this.setState({ isSkipIneffective });\n  };\n\n  doEraseExclusiveColors = () => {\n    this.setState(prevState => {\n      let candidates = prevState.candidates;\n      let trace = prevState.trace;\n\n      [candidates, trace] = Util.eraseExclusiveColors(candidates, trace);\n\n      return {\n        candidates,\n        trace\n      };\n    });\n  };\n\n  doSelectSelectableCandidates = () => {\n    // console.log(\"inside doSelectSelectableCandidates\");\n\n    this.setState(prevState => {\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      dataset = Util.selectSelectables(dataset);\n\n      dataset = Util.eraseRmovalbe(dataset);\n\n      return {\n        numMatrix: dataset.numMatrix,\n        candidates: dataset.candidates,\n        markerNums: dataset.markerNums,\n        trace: prevState.trace,\n        numCounts: Util.countNumbers(dataset.numMatrix)\n      };\n    });\n  };\n\n  doForward = controlType => {\n    const {\n      helpMode,\n      singleNumValue,\n      candidateLevel,\n      isSkipIneffective\n    } = this.state;\n\n    // console.log(\"inside doForward\");\n\n    this.setState(prevState => {\n      const isSkipLevel1 = true;\n      const isStepByStep =\n        controlType === Config.candidateControls.forward ? true : false;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n        // gameLevel: 0\n      };\n\n      let conditions = {\n        candidateLevel,\n        helpMode:\n          helpMode === Config.helpMode.both\n            ? Config.helpMode.candidates\n            : helpMode,\n        singleNumValue,\n        isStepByStep,\n        isSkipLevel1,\n        isSkipIneffective\n      };\n\n      dataset = Util.setCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        trace: dataset.trace,\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  doEraseCandidates = () => {\n    this.setState(prevState => {\n      let dataset = {\n        candidates: prevState.candidates,\n        trace: prevState.trace\n      };\n\n      dataset = Util.eraseRmovalbe(dataset);\n\n      return {\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  doBackwardNStore = (isAll = false) => {\n    // console.log(\"inside doBackwardNStore\");\n\n    const { ansMatrix } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n      let checkMode = prevState.checkMode;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: null,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      let stopCondtion = null;\n      if (isAll) {\n        stopCondtion = Config.backwardStopCondition.wrongInsertion;\n      }\n\n      dataset = this.doBackward(dataset, stopCondtion);\n\n      if (isAll) {\n        checkMode = Config.checkMode.correctness;\n      }\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      } else if (checkMode === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, dataset.numMatrix);\n      }\n\n      // if (duplicates.length === 0) {\n      //   checkMode = Config.checkMode.none;\n      // }\n\n      return {\n        checkMode,\n        numMatrix: dataset.numMatrix,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace,\n        duplicates\n      };\n    });\n  };\n\n  doBackward = (dataset, stopCondition = null) => {\n    // console.log(\"inside doBackward\");\n\n    let { candidates, markerNums, trace } = dataset;\n\n    if (trace.length === 0) {\n      return dataset;\n    }\n\n    let loopMax = 1;\n    if (stopCondition) {\n      loopMax = trace.length;\n    }\n\n    let datasetTmp = {\n      numMatrix: Util.deepCopy(dataset.numMatrix),\n      isRegisteredMatrix: null,\n      candidates: Util.deepCopy(dataset.candidates),\n      exclusiveCandidates: Util.deepCopy(dataset.exclusiveCandidates),\n      markerNums: Util.deepCopy(dataset.markerNums),\n      trace: []\n    };\n\n    for (let i = 0; i < loopMax; i++) {\n      const lastEvent = trace.pop();\n\n      const numInfo = Util.getNumInfoFromTraceItem(lastEvent);\n\n      if (numInfo) {\n        if (\n          stopCondition === Config.backwardStopCondition.numInsertion &&\n          \"isWrong\" in numInfo &&\n          numInfo.isWrong\n        ) {\n          trace.push(lastEvent);\n          break;\n        }\n\n        const num = numInfo.num;\n        const idx = numInfo.idx;\n\n        if (num > 0) {\n          if (\"prevNum\" in numInfo && typeof numInfo.prevNum === \"number\") {\n            let tmpCellInfo = Util.initCellInfo(numInfo.idx, numInfo.prevNum);\n            datasetTmp.numMatrix = Util.assignNum2NumMatrix(\n              datasetTmp.numMatrix,\n              tmpCellInfo\n            );\n          } else {\n            const isBackward = true;\n            datasetTmp = this.deleteNum(datasetTmp, idx, isBackward);\n          }\n        } else {\n          let cellInfo = Util.initCellInfo(idx, Math.abs(num));\n\n          cellInfo.isBackward = true;\n          datasetTmp = this.addNum(datasetTmp, cellInfo);\n        }\n\n        dataset.numMatrix = datasetTmp.numMatrix;\n      }\n\n      const candInfos = Util.getCandidateInfoFromTraceItem(lastEvent);\n\n      if (candInfos && candInfos.length > 0) {\n        dataset.candidates = Util.traceBackCandidates(candidates, candInfos);\n\n        if (lastEvent.operation === Config.operationTypes.auto) {\n          dataset.exclusiveCandidates.pop();\n        }\n      }\n\n      const markerInfos = Util.getMarkerInfoFromTraceItem(lastEvent);\n\n      if (markerInfos && markerInfos.length > 0) {\n        [dataset.markerNums] = Util.resetMarker(markerNums, markerInfos);\n      }\n    }\n\n    return dataset;\n  };\n\n  handleCandidateCell = event => {\n    // console.log( \"inside handleCandidateCell\" );\n\n    let cellInfo = Util.R1C1N12CellInfo(event.target.id);\n\n    this.setState(prevState => {\n      let candidates = prevState.candidates;\n      let markerNums = prevState.markerNums;\n      let trace = prevState.trace;\n\n      const prevStatus = Util.getCandidateStatus(candidates, cellInfo);\n\n      if (Util.isLastCandidate(candidates, cellInfo)) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      [candidates, cellInfo] = Util.flipCandidateStatus(candidates, cellInfo);\n\n      const traceItem = Util.initTraceItemCandidate(\n        [cellInfo],\n        Config.operationTypes.manual\n      );\n\n      if (Util.isNarrowCandidate(prevStatus)) {\n        let markerIdxs = Util.getMarkerIdxsFromCellIdx(cellInfo.idx);\n        let markerTrace = [];\n\n        for (let markerIdx of markerIdxs) {\n          const markerInfo = Util.initMarkerInfo(markerIdx, cellInfo.num);\n          const targetMarkerIdx = Util.findNumInMarker(markerNums, markerInfo);\n\n          if (targetMarkerIdx !== null) {\n            let concerningCellIdxs = Util.getTargetCellIndicesByMarkerIdx(\n              targetMarkerIdx,\n              candidates\n            );\n\n            concerningCellIdxs = concerningCellIdxs.filter(idx =>\n              Util.isNarrowCandidate(\n                Util.getCandidateStatus(\n                  candidates,\n                  Util.initCellInfo(idx, markerInfo.num)\n                )\n              )\n            );\n\n            if (concerningCellIdxs.length === 1) {\n              const markerInfo = Util.initMarkerInfo(\n                targetMarkerIdx,\n                cellInfo.num\n              );\n              markerNums = Util.assignSelectable2MarkerNums(\n                markerNums,\n                markerInfo\n              );\n\n              markerTrace.push(markerInfo);\n            }\n          }\n        }\n\n        if (markerTrace.length > 0) {\n          traceItem.marker = markerTrace;\n        }\n      }\n      trace.push(traceItem);\n\n      return { candidates, markerNums, trace };\n    });\n  };\n\n  handleMarker = () => {\n    // console.log(\"inside handleMarker\");\n\n    this.setState(prevState => {\n      const markerStatus = Util.flipMarkerStatus(prevState.markerStatus);\n\n      return { markerStatus };\n    });\n\n    document.getElementById(Config.buttonIds.marker).blur();\n  };\n\n  handleStepBack = () => {\n    const { trace } = this.state;\n\n    // console.log(\"hangleStepBack\");\n\n    if (!!trace.length) {\n      const lastEvent = trace.pop();\n      const num = lastEvent.numMatrix.num;\n      const idx = lastEvent.numMatrix.idx;\n\n      if (num > 0) {\n        this.deleteNumNStore(idx, false);\n      } else {\n        this.addNumNStore(Util.initCellInfo(idx, Math.abs(num)));\n      }\n    }\n\n    document.getElementById(Config.buttonIds.stepBack).blur();\n  };\n\n  handleClear = () => {\n    // console.log(\"inside handleClear\");\n\n    this.setState({\n      helpMode: Config.helpMode.none,\n      exclusiveCandidates: [],\n      duplicates: [],\n      singleNumValue: 0,\n      showNumPanel: false,\n      isShowMessage: false\n    });\n    document.getElementById(Config.buttonIds.clear).blur();\n  };\n\n  handleNewGame = () => {\n    // console.log(\"inside handleNewGame\");\n\n    const { lang } = this.state;\n    let origState = this.getInitialState();\n    origState.lang = lang;\n\n    this.setState(origState);\n\n    document.getElementById(Config.buttonIds.newGame).blur();\n  };\n\n  handleSampleGames = sampleLevel => {\n    // console.log(\"inside handleSampleGames\");\n\n    const { lang } = this.state;\n    const origState = this.getInitialState();\n\n    const sampleMatrix = Util.getSampleMatrix(sampleLevel);\n    const id = Config.buttonIds.sampleGame + Util.capitalize(sampleLevel);\n\n    origState.numMatrix = sampleMatrix;\n    origState.sampleGameID = sampleLevel;\n\n    origState.lang = lang;\n\n    // origState.ansMatrix = this.calcAnswer(sampleMatrix);\n    const dataset = this.calcAnswer(sampleMatrix);\n\n    // There is a cell full of wide-removed //\n    // if (origState.ansMatrix === null) {\n    if (dataset.ansMatrix === null) {\n      this.setState({\n        isShowMessage: true,\n        message: Config.alertMessages.deadEnd\n      });\n    } else {\n      origState.ansMatrix = dataset.numMatrix;\n      // const gameLevel = dataset.gameLevel;\n\n      // if (origState.ansMatrix) {\n      origState.mode = Config.mode.play;\n      origState.checkMode = Config.checkMode.none;\n      origState.isRegisteredMatrix = Util.getRegisteredFlags(sampleMatrix);\n\n      // if (Util.isAllFilled(origState.ansMatrix)) {\n      //   origState.gameLevel = 6;\n      // } else {\n      //   origState.gameLevel = Config.candidateLevels.length;\n      // }\n      origState.gameLevel = Util.isAllFilled(origState.ansMatrix)\n        ? dataset.gameLevel\n        : Config.candidateLevels.length;\n    }\n\n    this.setState(origState);\n\n    document.getElementById(id).blur();\n  };\n\n  handleSetUp = () => {\n    // console.log(\"inside handleSetUp\");\n\n    const { mode } = this.state;\n\n    if (mode === Config.mode.set) {\n      if (this.doCheckDuplicates() === Config.result.passed) {\n        this.setState(prevState => {\n          // const ansMatrix = this.calcAnswer(prevState.numMatrix);\n          const dataset = this.calcAnswer(prevState.numMatrix);\n          const ansMatrix = dataset.numMatrix;\n          let gameLevel = dataset.gameLevel;\n\n          if (ansMatrix) {\n            // const gameLevel = Util.isAllFilled(ansMatrix)\n            //   ? 6\n            //   : Config.candidateLevels.length;\n            gameLevel = Util.isAllFilled(ansMatrix)\n              ? gameLevel\n              : Config.candidateLevels.length;\n\n            return {\n              mode: Config.mode.play,\n              helpMode: Config.helpMode.none,\n              checkMode: Config.checkMode.none,\n              singleNumValue: 0,\n              ansMatrix,\n              gameLevel\n            };\n          } else {\n            return {\n              isShowMessage: true,\n              message: Config.alertMessages.wrongQuestion\n            };\n          }\n        });\n      } else {\n        this.setState({\n          checkMode: Config.checkMode.duplicates,\n          isShowMessage: true,\n          message: Config.alertMessages.duplicates\n        });\n      }\n    } else {\n      this.setState(prevState => {\n        let numMatrix = prevState.numMatrix;\n        const isRegisteredMatrix = prevState.isRegisteredMatrix;\n\n        return {\n          mode: Config.mode.set,\n          helpMode: Config.helpMode.none,\n          checkMode: Config.checkMode.duplicates,\n          numMatrix: Util.resetNumMatrix(numMatrix, isRegisteredMatrix),\n          candidates: Util.initCube(),\n          exclusiveCandidates: [],\n          markerNums: Util.initMarkerNums(),\n          trace: [],\n          singleNumValue: 0\n        };\n      });\n    }\n\n    document.getElementById(Config.buttonIds.setup).blur();\n  };\n\n  handleRestart = () => {\n    const { lang, numMatrix, isRegisteredMatrix, sampleGameID } = this.state;\n    const origState = this.getInitialState();\n\n    // console.log(\"inside handleRestart\");\n\n    origState.lang = lang;\n    origState.mode = Config.mode.play;\n    origState.checkMode = Config.checkMode.none;\n\n    origState.numMatrix = Util.resetNumMatrix(numMatrix, isRegisteredMatrix);\n    origState.isRegisteredMatrix = isRegisteredMatrix;\n    origState.sampleGameID = sampleGameID;\n\n    this.setState(origState);\n\n    document.getElementById(Config.buttonIds.restart).blur();\n  };\n\n  handleHelpButton = () => {\n    document.getElementById(Config.buttonIds.help).blur();\n  };\n\n  handleLang = () => {\n    this.setState(prevState => {\n      return { lang: Util.flipLang(prevState.lang) };\n    });\n\n    document.getElementById(Config.buttonIds.lang).blur();\n  };\n\n  showFloating = event => {\n    const { mode, isRegisteredMatrix } = this.state;\n\n    // console.log(\"insdie showFloating\");\n\n    let idx = null;\n    const cellAddress = event.target.id;\n\n    if (Util.isMarkerAddress(cellAddress)) {\n      idx = Util.markerId2Idx(cellAddress);\n    } else {\n      idx = Util.R1C12Index(cellAddress);\n    }\n\n    if (\n      !idx ||\n      (!Util.isMarkerIndex(idx) &&\n        (mode === Config.mode.play && isRegisteredMatrix[idx.r][idx.c]))\n    ) {\n      return;\n    }\n\n    this.setState({\n      activeCellIndex: idx,\n      mousePosition: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      showNumPanel: true\n    });\n  };\n\n  handleMessageModalClick = () => {\n    // console.log(\"inside handleMessageModalClick\");\n\n    this.setState({\n      isShowMessage: false\n    });\n  };\n\n  render() {\n    const { lang } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>{Config.panelTitles.header[lang]}</h1>\n        </header>\n        <main className=\"App-main\">\n          <ControlPanel\n            {...this.state}\n            handleRestart={this.handleRestart}\n            handleSetUp={this.handleSetUp}\n            handleNewGame={this.handleNewGame}\n            handleSampleGames={this.handleSampleGames}\n            handleSave={this.handleSave}\n          />\n          <SudokuBoard\n            {...this.state}\n            showFloating={this.showFloating}\n            handleNumInsert={this.handleNumInsert}\n            handleCandidateCell={this.handleCandidateCell}\n            handleMarkerCell={this.handleMarkerCell}\n          />\n          <HelperPanel\n            {...this.state}\n            handleCheck={this.handleCheck}\n            handleHelpMode={this.handleHelpMode}\n            handleSingleNum={this.handleSingleNum}\n            handleSingleNumLevel={this.handleSingleNumLevel}\n            handleMultipleNums={this.handleMultipleNums}\n            handleCandidates={this.handleCandidateLevels}\n            handleControls={this.handleControls}\n            handleSkipIneffectiveStatus={this.handleSkipIneffectiveStatus}\n            handleMarker={this.handleMarker}\n            handleHelpButton={this.handleHelpButton}\n            handleLang={this.handleLang}\n            handleClear={this.handleClear}\n          />\n        </main>\n        <Footer {...this.state} />\n        {/* Popup panels (invisible at start) */}\n        <Floating\n          {...this.state}\n          modal\n          // viewport\n          closeOnModalClick\n          handleNumPanelClick={this.handleNumPanelClick}\n          handleDelete={this.handleDelete}\n          handleCancel={this.handleCancel}\n        />\n        <ShowMessage\n          {...this.state}\n          modal\n          closeOnModalClick\n          handleMessageModalClick={this.handleMessageModalClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport { getRandomArbitrary, getRandomInt, getRandomIntInclusive };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}