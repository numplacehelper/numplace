{"version":3,"sources":["images/forward.svg","images/forwardDisabled.svg","images/fastForward.svg","images/fastForwardDisabled.svg","images/backward.svg","images/backwardDisabled.svg","images/rewind.svg","images/rewindDisabled.svg","images/select.svg","images/selectDisabled.svg","images/erase.svg","images/eraseDisabled.svg","images/close.svg","components/Cell.js","Config.js","util/combinations.js","Util.js","components/NumPanelBlock.js","components/sudokuBoard/CellContainer.js","components/sudokuBoard/Marker.js","components/sudokuBoard/BoardBlock.js","components/sudokuBoard/SudokuBoard.js","components/control/NewGame.js","components/control/SampleGames.js","components/control/Restart.js","components/control/SetUp.js","components/control/ControlPanel.js","components/helper/Check.js","components/helper/helpMode/HelpModeButtons.js","components/helper/helpMode/SingleNum.js","components/helper/helpMode/MultipleNums.js","components/helper/helpMode/CandidatesLevels.js","components/helper/helpMode/Controls.js","components/helper/helpMode/HelpModePane.js","components/helper/MarkerButton.js","components/helper/LangButton.js","components/helper/HelpButton.js","components/helper/HelperPanel.js","components/Footer.js","components/floating/Delete.js","components/floating/Cancel.js","components/floating/NumPanelControl.js","components/floating/NumPanel.js","components/floating/Floating.js","components/floating/ShowMessage.js","App.js","util/Random.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","_this$props","this","props","cellId","num","lastCandidate","clsName","onClick","react_default","a","createElement","id","className","data-num","Component","Config","lang","en","ja","size","sizeB","numCells","Math","pow","maxLoopNum","maxUnionSize","maxSquareNum","traceTypes","numMatrix","candidate","marker","traceElementTypes","Object","assign","operation","operationTypes","manual","auto","candidateLevelTypes","level0","candidateTypes","displayCandidates","removeByInsertedNum","singleCandidate","singleExclusive","multipleExclusive","square","assumptionTest","level1","level2","level3","level4","level5","level6","candidateLevelTypesArray","stepByStepLevels","candidateLevels","restrictionTypes","row","column","col","block","blk","restrictionTypesShort","r","c","b","restrictionTypesStraightArray","restrictionTypesStraightShortArray","restrictionTypesArray","invBRC","mode","set","play","helpModeArray4display","helpMode","none","singleNum","candidates","both","multipleNums","helpModeArray4displayOnMultipleNums","helpModeArray","updateHelpModes","checkModeArray","checkMode","duplicates","correctness","processTypes","insertion","panelIds","sudokuBoard","cellContainerSuffix","control","helper","numPanelContainer","numPanelWrapper","numPanel","numPanelCell","numPanelControl","messageWrapper","footer","footerCredit","textForm","panelClassNames","subBlock","cell","cellContainer","smallCell","subCell","cellNum","panelTitles","header","buttonIds","newGame","sampleGameWrapper","sampleGameInnerWrapper","sampleGame","setup","save","restart","check","checkWrapper","singleNumRadio","singleNumButton","multipleNumsLabel","multipleNumsCheckbox","candidateWrapper","controlButtonWrapper","controls","controlLabelSkipIneffective","help","delete","cancel","buttonClassNames","sampleGameFrame","sampleGameButton","checkTitle","checkButton","singleNumTitle","singleNumContainer","singleNumRadioWrapper","singleNumButtonWrapper","singleNumDisabled","singleNumDone","singleNumExceeding","multipleNumsContainer","multipleNumsCheckBoxWrapper","multipleNumsDisabled","multipleNumsDone","multipleNumsExceeding","candidateTitle","candidateContainer","candidateButtonWrapper","candidateDisabled","candidateButton","controlSkipIneffective","buttonStatus","waiting","active","disabled","buttonTitles","edit","sampleGames","langButtonTitles","helpModeButtonIds","container","wrapper","title","helpModeButtonClassNames","formNames","skipIneffective","candidateActiveControls","candidateControls","reset","backward","forward","fastForward","select","erase","keys","candidateControlArray","candidateButtonGroupNames","candidateButtons","exclusiveMultiples4marker","candidateStatus","assigned","selected","selectable","exclusiveSingle","exclusiveDouble","exclusiveTriple","exclusiveQuadruple","exclusiveSquare","removable","removed","shadowed","weaklyShadowed","inhibited","exclusiveTypes4marker","exclusiveMultiples","narrowExclusiveStatuses","exclusiveStatuses","wideExclusiveStatuses","selectedList","wideSelectedList","wideRemovedList","narrowCandidateList","markerRelatedExclusiveTypes","candidateList","wideCandidateList","registered","duplicated","checkButtonLabels","checkTitleCaptions","helpModeButtonLabels","helpModeCaptions","singleNumLevels","singleNumCaptions","candidateLevelCaptions","constrolIconCaptions","candidateControlIconSizes","small","large","backwardStopCondition","wrongInsertion","numInsertion","result","passed","failed","messages","success","failure","alertMessages","deadEnd","wrongQuestion","helpPath","helpFiles","dummyMatrix","sampleGameClassList","sampleGameClasses","beginner","easy","medium","hard","xtreme","sampleGameTitles","credit","publisher","author","book","question","matrix","creditTemplate","k_combinations","k","i","j","combs","head","tailcombs","length","push","slice","concat","Util","N","arguments","undefined","Array","from","idxSequence","getIndexSequence","redundant","reverse","map","blockId","parseInt","getBlockNumFromBlockId","toUpperCase","val","len","fill","_this","initArray","_this2","initMatrix","arr","getNsequence","numPanelMatrix","splice","idxs","nums","status","type","rcbIdx","unionSize","isBackward","constructor","idx","truth","rcType","rc","checkedArray","forEach","getContentFromMatrix","cellInfo","_this3","getCandidateStatusArray","n2i","_this4","statusArray","targetStatuses","_this5","convertExclusive2Candidates","includes","candidateNums","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","isNarrowCandidate","i2n","err","return","statuses","getNarrowCandidateNumsFromStatusArray","_this6","candidateNumMatrix","getNumsFromCandidateNumMatrix","idxArray","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","initCellIdx","_this7","markerIdx","isExclusiveSingle","getFirstLetter","initMarkerIdx","isExclusiveDoubleOrTriple","isInSameRowCol","blkIdx","isInSameBlock","initMarkerInfo","_ref4","numInfo","candInfoArray","markerInfoArray","defineProperty","initTraceItem","candInfos","markerInfos","_this8","reduce","getRowColIndicesFromBlockIdx","dic","regMatrix","appMatrix","appearance","isRegisteredMatrix","regRow","isRegistered","assignStatus2Candidates","prevStatuses","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","cellInfoSub","initCellInfo","getCandidateStatus","_this9","traceItem","trace","infoType","particularTrace","filter","particularTraceItem","flattenMatrix2Array","getAllParticularInfosFromTrace","numCounts","allIdxs","getAllCellIndicies","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getNumFromNumMatrix","countWideSelectedCellsInCandidates","_this10","count","candCell","isWideSelectedInStatuses","cellInfos","_this11","_this12","_this13","isCandidate","countCandidates","candNums","getCandidateNums","pop","_this14","isWideRemoved","countNarrowCandidates","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_ref7","_ref6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_ref10","_ref9","isSelectable","address","markerNums","getNumsFromMarkerNums","isMarkerIndex","getNumFromMarkerNums","markerInfo","getNumArrayFromMarkerNums","ary","n","m","level","classTitle","capitalize","getSampleGameButtonId","levelId","gameInfo","getSampleGameInfo","gameNumMatrix","deepCopy","gameClass","convZero2Null","_levelId$split","split","_levelId$split2","langs","values","indexOf","crediteInfo","_arr","_i","_ref13","_ref12","key","replace","blkIndex","blockCellIndices","getBlkIndicesFromIdx","getNumbersFromIndices","getNumbersFromBlockIndex","blkNum","getNumbersFromBlockIdx","indices","_this15","cellIndices","_this16","colNums","_this17","_this18","rowBase","floor","colBase","getRowIndicesFromBlockIdx","getColIndicesFromBlockIdx","_this19","flipRCType","counterRC","shortIdxArray","_this20","rowIdxs","colIdxs","getCellIdxsFromMarkerIdx","removeWideSelectedCellIdxs","cellIdxs","_this21","isWideSelectedInCell","_this22","targetCellIndices","getCellIndices","isIdxInDuplicates","getRowIndicesFromIdx","getColIndicesFromIdx","blockIdx","getBlockIdxFromCellIdx","getBlkRowIndicesFromIdx","getBlkColIndicesFromIdx","removeSelectCells","_this23","rows2","getRowIndicesWithoutTheIdx","cols2","getColIndicesWithoutTheIdx","blks2","getBlockOnlyIndicesFromCellIdx","rows","cols","bIdx","nBlock","getBlkIndicesFromNum","rcbType","_this24","getCandidateCellIndices","cellIndicesTmp","removeDuplicatedIndices","unionCell","getRelatedIndices4union","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","prevStatus","_this25","relatedCellInfos","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop","counterRCType","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iterator10","blkIdxs","_arr2","_i2","blkSequence","getRowColWiseBlockIdxSequence","r1c1","r1c1n1","R1C12Index","_this26","getCellIndicesFromBlockId","index2R1C1","markerId","toLowerCase","_this27","cellIdx","blockSeq","getRelatedBlockIdxsFromCellIdx","markerIdxs","_arr3","_i3","blockIdxs","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_ref16","_ref15","infoArray","getInfoArrayFromMarkerNums","infos","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_ref19","_ref18","isReset","abs","isTheNumInMarker","findNumInMarker","getFirstNullIdx","sortMarkerNums","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_ref22","_ref21","targetMarkerInfo","_i4","mInfo","setMarkerNum","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","assignMarkerStatusSub","assignMarkerStatus","getMarkerStatus","rcInfo","sorted","shift","newNum","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_ref25","_ref24","markerStatus","markerTrace","findPreviousMarkerInfo","updateMarkerStatus","revMarkerTrace","matchedMarkerInfo","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","prevMInfo","isMatchTwoMarkers","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_ref28","_ref27","countNonZeroCells","_this28","rowInfo","_this29","colInfo","_this30","blkInfo","dupCellIndices","cellInfoArray","getCellInfoArrayFromIndices","nulllessCellInfoArray","removeNullsFromCellInfo","sort","isTwoIdxsSame","_this31","dup","findDuplicatedIndices","dupidx","ansMatrix","wrongIdxs","isMatrixAllNull","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","isNumCorrect","ans","isAllNull","elem","ary1","ary2","isSame","e1","removeDuplicatedNumbers","statusList","toConsumableArray","idx1","idx2","JSON","stringify","idxs1","idxs2","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_ref31","_ref30","_this32","directions","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_loop2","rcIdxs","isAllNumbersSame","v","_iterator24","_ret2","_this33","pairCell","exclusiveCandidates","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","exCand","blkIdx1","_this34","idxsArray","_this35","isInCellInfoArray","_this36","didx","blockNum","getIsDuplicatedFromIndices","_this37","appearanceMatrix","allCellIdxs","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","appendNum","assignAppearance","candidateLevel","_this38","removeTypes","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","getCandidateStatuses","combinedStatus","combineStatuses","isSelected","hasSelected","dataset","conditions","_this39","isStepByStep","isSkipIneffective","candidateTrace","prevMarkerTrace","getAllMarkerInfosFromTrace","expectedLength","getUnionSizes","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_loop3","candidateCells","getSingleNumCandidateCells","direction","convertRCType2Direction","targetCellInfo","convertCellInfo2MarkerInfo","isInExclusiveCandidates","isStatusWorth2Store","updateCellIdxs","_this39$assignCandida","assignCandidateStatus4SingleNum","_this39$assignCandida2","updateCellInfo","_this39$assignCandida3","_this39$assignCandida4","isCellsAllWideRemoved","_iterator28","_ret3","rcIdx","candidateIdxs","targetIdxs","_this40","untargetIdxs","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","_this$getSingleNumBTa","getSingleNumBTargetIdxs","_this$getSingleNumBTa2","getSingleNumBUntargetIdxs","_this$assignCandidate","_this$assignCandidate2","untargetCellInfo","_this$assignCandidate3","_this$assignCandidate4","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","candInfo","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","_ref34","_ref33","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","_ref37","_ref36","initCube","initMarkerNums","initDataset","setCandidates","traceItems","_dataset","isSkipLevel1","processType","setCandidatesLevel1","isAllWideSelected","getLevelNumFromFunctionName","loopNum","exclusiveCandidateLength","setSelectableA","setSelectableB","setSingleNumExclusiveCandidates","setExclusiveUnionA","setExclusiveUnionB","setSquareCandidates","setAssumptionTest","nLevel","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","_this$updateCandidate","updateCandidateOfTheCell","_this$updateRelatedCe","updateRelatedCells","singleNumValue","candidateTraceTmp","numSequence","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","_iteratorNormalCompletion37","_didIteratorError37","_iteratorError37","_step37","_iterator37","_this$updateCandidate3","_this$updateCandidate4","_this$updateRelatedCe3","_this$updateRelatedCe4","getMarkerIdxsFromCellIdx","_iteratorNormalCompletion38","_didIteratorError38","_iteratorError38","_step38","_iterator38","markerTraceTmp","_this$updateMarkerSta","updateMarkerStatus2Selectable","_this$updateMarkerSta2","initTraceItemCandidate","selectableCells","findSingleCandidateCellsB","_iteratorNormalCompletion39","_didIteratorError39","_iteratorError39","_step39","_iterator39","_this$updateCandidate5","_this$updateCandidate6","_this$updateRelatedCe5","_this$updateRelatedCe6","_iteratorNormalCompletion40","_didIteratorError40","_iteratorError40","_step40","_iterator40","_this$updateMarkerSta3","_this$updateMarkerSta4","_iteratorNormalCompletion41","_didIteratorError41","_iteratorError41","_step41","_iterator41","setSingleNumExclusiveCandidatesA","setSingleNumExclusiveCandidatesB","_this41","unionSizes","candNumMatrix","getCandidateNumMatrix","_iteratorNormalCompletion42","_didIteratorError42","_iteratorError42","_step42","_iterator42","_iteratorNormalCompletion43","_didIteratorError43","_iteratorError43","_step43","_iterator43","cellIndicesLength","_iteratorNormalCompletion44","_didIteratorError44","_iteratorError44","_step44","_loop4","candLengths","candidateCellIndices","countNumsInCandidateNumMatrix","unionCells","findExclusiveUnionA","console","log","_iteratorNormalCompletion45","_didIteratorError45","_iteratorError45","_step45","_iterator45","isInCellInfoArrayIgnoringRCBInfo","_this41$updateCandida","updateCandidates4UnionA","_this41$updateCandida2","_iteratorNormalCompletion46","_didIteratorError46","_iteratorError46","_step46","_iterator46","_this41$updateMarkerS","_this41$updateMarkerS2","_iterator44","_ret4","candIdxArray","_iteratorNormalCompletion47","_didIteratorError47","_iteratorError47","_step47","_iterator47","unionIdxs","numsUnion","getUnionNumbers","numArray","_iteratorNormalCompletion48","_didIteratorError48","_iteratorError48","_step48","_iterator48","_iteratorNormalCompletion49","_didIteratorError49","_iteratorError49","_step49","_iterator49","_iteratorNormalCompletion50","_didIteratorError50","_iteratorError50","_step50","_iterator50","extractCellInfoFromCandidate","cellLength","_iteratorNormalCompletion51","_didIteratorError51","_iteratorError51","_step51","_iterator51","unionCellArrayB","findExclusiveUnionB","_iteratorNormalCompletion52","_didIteratorError52","_iteratorError52","_step52","_iterator52","unionCellB","_this$updateCandidate7","updateCandidates4UnionB","_this$updateCandidate8","_iteratorNormalCompletion53","_didIteratorError53","_iteratorError53","_step53","_iterator53","_this$updateMarkerSta5","_this$updateMarkerSta6","targetCellInfos","_iteratorNormalCompletion54","_didIteratorError54","_iteratorError54","_step54","_iterator54","idxsUnion","getUnionIndices","_this42","squareNums","_iteratorNormalCompletion55","_didIteratorError55","_iteratorError55","_step55","_iterator55","rowcol","_iteratorNormalCompletion56","_didIteratorError56","_iteratorError56","_step56","_loop5","exclusiveSquareCandidates","isExclusiveSquare","_iteratorNormalCompletion57","_didIteratorError57","_iteratorError57","_step57","_iterator57","squareNum","getSquareTargetCells","squareCellInfoArray","findSquareCells","_iteratorNormalCompletion58","_didIteratorError58","_iteratorError58","_step58","_iterator58","squareCellInfo","isInExclusiveSquareCandidates","_this42$updateCandida","updateCandidates4Square","_this42$updateCandida2","_iterator56","_ret5","_this43","indexArray","_iteratorNormalCompletion59","_didIteratorError59","_iteratorError59","_step59","_iterator59","iRC","squareCellInfos","flipRowCol","_iteratorNormalCompletion60","_didIteratorError60","_iteratorError60","_step60","_iterator60","iSet","candidateRCIdxsArray","targetCellInfoSets","findAssumptionTest","_iteratorNormalCompletion61","_didIteratorError61","_iteratorError61","_step61","_iterator61","targetCellInfoSet","_iteratorNormalCompletion62","_didIteratorError62","_iteratorError62","_step62","_iterator62","_ref40","_ref39","_iteratorNormalCompletion63","_didIteratorError63","_iteratorError63","_step63","_iterator63","cInfo","inhibitedNum","assignRemovable2Candidates","assignAssumptionTest2Candidates","_this44","getNarrowCandidateNums","rectangles","getRectangleSet","_iteratorNormalCompletion64","_didIteratorError64","_iteratorError64","_step64","_iterator64","rectangle","getAssumptionTestCellInfo","rectangleSet","_loop6","pivotCellInfo","rowMemberCellInfos","colMemberCellInfos","_iteratorNormalCompletion65","_didIteratorError65","_iteratorError65","_step65","_loop7","rowCell","_iteratorNormalCompletion66","_didIteratorError66","_iteratorError66","_step66","_loop8","colCell","oppositeCellInfos","_iterator66","_iterator65","rectangleCellInfos","_this45","_iteratorNormalCompletion67","_didIteratorError67","_iteratorError67","_step67","_iterator67","_ref43","_ref42","aPair","counterPair","_iteratorNormalCompletion68","_didIteratorError68","_iteratorError68","_step68","_iterator68","_ref46","_ref45","pivotCell","oppositeCell","_iteratorNormalCompletion69","_didIteratorError69","_iteratorError69","_step69","_loop9","pNum","counterNums","isTwoArraysSame","_iterator69","_ret6","_iteratorNormalCompletion70","_didIteratorError70","_iteratorError70","_step70","_iterator70","markerTraceItem","markerInfoA","markerInfoB","targetTrace","getTraceItemsWithSelectables","_iteratorNormalCompletion71","_didIteratorError71","_iteratorError71","_step71","_iterator71","targetTraceItem","numTrace","_iteratorNormalCompletion72","_didIteratorError72","_iteratorError72","_step72","_iterator72","newCellInfo","isSelectableCellInfo","assignNum2NumMatrix","assignSelected2Candidates","_iteratorNormalCompletion73","_didIteratorError73","_iteratorError73","_step73","_iterator73","markerInfos4Trace","_Util$resetMarker","resetMarker","_Util$resetMarker2","isRemovableCellInfo","_iteratorNormalCompletion74","_didIteratorError74","_iteratorError74","_step74","_iterator74","isRemovable","assignRemoved2Candidates","_iteratorNormalCompletion75","_didIteratorError75","_iteratorError75","_step75","_iterator75","getSelectableIdx","_this$updateCandidate9","getTraceItemsWithRemovableWithoutSelectable","_iteratorNormalCompletion76","_didIteratorError76","_iteratorError76","_step76","_iterator76","_iteratorNormalCompletion77","_didIteratorError77","_iteratorError77","_step77","_iterator77","_iteratorNormalCompletion78","_didIteratorError78","_iteratorError78","_step78","_iterator78","isRemovable4erase","_i6","_iteratorNormalCompletion79","_didIteratorError79","_iteratorError79","_step79","_iterator79","cellInfo4num","_iteratorNormalCompletion80","_didIteratorError80","_iteratorError80","_step80","_iterator80","isWideExclusiveCandidate","assignCandidate2Candidates","excludingStatus","hasStatus","filterTraceItems","getRelatedCellInfo4unionA","_iteratorNormalCompletion81","_didIteratorError81","_iteratorError81","_step81","_iterator81","_iteratorNormalCompletion83","_didIteratorError83","_iteratorError83","_step83","_iterator83","_iteratorNormalCompletion82","_didIteratorError82","_iteratorError82","_step82","_iterator82","isCellAllWideRemoved","_iteratorNormalCompletion84","_didIteratorError84","_iteratorError84","_step84","_iterator84","_iteratorNormalCompletion86","_didIteratorError86","_iteratorError86","_step86","_iterator86","assignStatus","getRelatedCellInfo4unionB","removableTargetCellInfos","_i7","_iteratorNormalCompletion85","_didIteratorError85","_iteratorError85","_step85","_iterator85","_this46","counterDirection","squareIndices","rawRCIdxs","keyRCIdxs","unTargetCellInfos","_iteratorNormalCompletion87","_didIteratorError87","_iteratorError87","_step87","_iterator87","keyRCIdx","_iteratorNormalCompletion88","_didIteratorError88","_iteratorError88","_step88","_iterator88","_i8","assignExclusiveSquare2Candidates","_i9","_this47","singleCandidateCells","_iteratorNormalCompletion89","_didIteratorError89","_iteratorError89","_step89","_iterator89","_ref49","_ref48","_iteratorNormalCompletion90","_didIteratorError90","_iteratorError90","_step90","_loop10","_ref50","_ref51","cand","_iterator90","_ret7","_iteratorNormalCompletion91","_didIteratorError91","_iteratorError91","_step91","_iterator91","_this48","_iteratorNormalCompletion92","_didIteratorError92","_iteratorError92","_step92","_iterator92","_iteratorNormalCompletion93","_didIteratorError93","_iteratorError93","_step93","_iterator93","_ret8","_iteratorNormalCompletion94","_didIteratorError94","_iteratorError94","_step94","_iterator94","selectStatus","removeStatus","_iteratorNormalCompletion95","_didIteratorError95","_iteratorError95","_step95","_iterator95","isRemoved","relatedIndices","getRelatedIndicesBesidesItself","_iteratorNormalCompletion96","_didIteratorError96","_iteratorError96","_step96","_iterator96","_this$updateCandidate11","_this$updateCandidate12","_this$updateRelatedCe7","_this$updateRelatedCe8","_this49","having","_this50","isWideSelected","_this51","isCandidates","_this52","countWideRemoved","_this53","isWrong","isExclusiveDouble","isExclusiveTriple","candidateUpper","statusCandidateUpper","statusSelectable","statusRemovable","_this54","_iteratorNormalCompletion97","_didIteratorError97","_iteratorError97","_step97","_iterator97","_ref54","_ref53","_this55","isWideCandidate","candidateArray","_this56","_this57","isCandidateWithoutRemovable","_this58","filteredCellIndices","_this59","_iteratorNormalCompletion98","_didIteratorError98","_iteratorError98","_step98","_iterator98","_iteratorNormalCompletion99","_didIteratorError99","_iteratorError99","_step99","_iterator99","getRelatedCellIndicesByMarkerIdx","_iteratorNormalCompletion100","_didIteratorError100","_iteratorError100","_step100","_iterator100","_this$setSelectableA","setSelectableA2MarkerNums","_this$setSelectableA2","_this$setSelectableB","setSelectableB2MarkerNums","_this$setSelectableB2","_this60","relatedMarkerIdxs","_iteratorNormalCompletion101","_didIteratorError101","_iteratorError101","_step101","_iterator101","relatedMarkerIdx","relatedMarkerInfo","concerningCellInfos","getTargetCellIndicesByMarkerIdx","countNumInCandidates","assignSelectable2MarkerNums","selectableNum","getSelectableNum","_iteratorNormalCompletion102","_didIteratorError102","_iteratorError102","_step102","_iterator102","_this61","assignedNums","concernedCellIdxs","targetCellIdxs","isNumInCell","removableNums","_iteratorNormalCompletion103","_didIteratorError103","_iteratorError103","_step103","_iterator103","_iteratorNormalCompletion105","_didIteratorError105","_iteratorError105","_step105","_iterator105","_iteratorNormalCompletion104","_didIteratorError104","_iteratorError104","_step104","_iterator104","tmpMarkerInfo","assignExclusiveDouble2MarkerNums","assignExclusiveTriple2MarkerNums","doubleExclusiveCellIdxs","getWideCandidateNums","_iteratorNormalCompletion106","_didIteratorError106","_iteratorError106","_step106","_iterator106","unTargetIdxs","_iteratorNormalCompletion107","_didIteratorError107","_iteratorError107","_step107","_iterator107","targetCellInfos4nums2","isTwoIdxSetsSame","_iteratorNormalCompletion108","_didIteratorError108","_iteratorError108","_step108","_iterator108","selectableCellInfos","_iteratorNormalCompletion109","_didIteratorError109","_iteratorError109","_step109","_loop11","selectableCellInfo","removableCellIdxs","_iteratorNormalCompletion110","_didIteratorError110","_iteratorError110","_step110","_iterator110","_iterator109","oldStatus","newStatus","exclusive","_iteratorNormalCompletion111","_didIteratorError111","_iteratorError111","_step111","_iterator111","target","removingKeys","keyName","item","_iteratorNormalCompletion112","_didIteratorError112","_iteratorError112","_step112","_iterator112","exSquares","_this62","_iteratorNormalCompletion113","_didIteratorError113","_iteratorError113","_step113","_loop12","exSquare","tIdx","_iterator113","_ret9","x","max","_iteratorNormalCompletion114","_didIteratorError114","_iteratorError114","_step114","_iterator114","rcbTypes","s","isSubCell","functionName","str","numSet","numsArray","idxSet","charAt","prototype","apply","lines","convNull2Zero","join","data","_iteratorNormalCompletion115","_didIteratorError115","_iteratorError115","_step115","_iterator115","org","parse","filename","file","Blob","window","navigator","msSaveOrOpenBlob","document","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","NumPanelBlock","blockClass","cellIdBase","cellClass","inhibitedClass","appearanceArray","onClickFunc","cellLabels","clsNames","getCellNumClass","cells","components_Cell","CellContainer","appearanceSubCellArray","appearanceSmallCell","onCellClick","handleCandidateCell","components_NumPanelBlock","Marker","getCells","cellLabel","_this$props2","rowColType","rowColClass","idBase","idBaseShort","rowColIdBase","abbreviateBlockId","wrapperId","wrapperClass","getBlockIdxFromBlockId","rowColNIndices","getBlkRowColIndicesFromIdx","cellIdBases","rowCols","nRC","BoardBlock","showFloating","handleNumInsert","handleMarkerCell","displayNums","blockWrapperId","getSingleCandidate","isSelectableCell","sudokuBoard_CellContainer","markOnClickFunc","sudokuBoard_Marker","SudokuBoard","numbers","getAppearanceMatrixFromCandidates","getAppearanceMatrixFromNumMatrix","blocks","getBlockIdByNum","isRegisteredArray","isDuplicatedArray","sudokuBoard_BoardBlock","NewGame","handleNewGame","SampleGames","gameLevel","handleSampleGames","buttonSet","getSampleGameList","innerWrapperId","innerWrapperClass","buttons","_","buttonId","btnClsName","buttonTitle","getSampleGameButtonLabel","getSampleGameButtonTitle","Restart","handleRestart","SetUp","handleSetUp","ControlPanel","control_NewGame","control_SetUp","control_SampleGames","control_Restart","Check","getButton","handleCheck","myself","name","label","titleCaption","titleClassName","HelpModeButtons","handleHelpMode","buttonType","SingleNum","handleSingleNum","radios","labelDivClassName","labelClassName","toString","onChange","checked","MultipleNums","handleChange","event","handleMultipleNums","checkboxs","labelId","checkboxId","CandidateLevels","handleCandidateLevels","handleCandidates","getLevelNum","getCandidateLevelTitle","getCandidateLevelId","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkboxIsSkip","React","createRef","controlType","_activeSymbols","_disabledSymbols","_iconStyles","handleControls","activeSymbols","forwardLogo","fastForwardLogo","backwardLogo","rewindLogo","selectLogo","eraseLogo","disabledSymbols","forwardDisabledLogo","fastForwardDisabledLogo","backwardDisabledLogo","rewindDisabledLogo","selectDisabledLogo","eraseDisabledLogo","iconSizeSmall","iconSizeLarge","iconStyleSmall","width","height","iconStyleLarge","iconStyles","symbol","src","style","alt","getControlId","handleCheckbox","e","handleSkipIneffectiveStatus","currentTarget","setState","state","ref","HelpModePane","helpMode_MultipleNums","helpMode_SingleNum","helpMode_HelpModeButtons","CandidatesLevels","helpMode_Controls","MarkerButton","handleMarker","LangButton","handleLang","theOtherLang","flipLang","HelpButton","handleHelp","fileName","path","open","HelperlPanel","helper_Check","helpMode_HelpModePane","helper_MarkerButton","helper_HelpButton","helper_LangButton","Footer","getCredit","Delete","activeCellIndex","handleDelete","isNumInMarker","Cancel","handleCancel","NumPanelControl","floating_Delete","floating_Cancel","NumPanel","handleNumPanelClick","floating_NumPanelControl","Floating","showNumPanel","handleModalClick","_ref","modal","closeOnModalClick","mousePosition","isModal","doShow","position","left","top","y","display","floating_NumPanel","ShowMessage","show","isShowMessage","message","handleMessageModalClick","closeLogo","App","calcAnswer","isMarkerOff","convertSelectable2Selected","addNumNStore","_this$state","prevState","addNum","checkDuplicate","checkCorrectness","countNumbers","_this$state2","prevNum","traceLength","updateCandidates","assignTruth2regMatrix","initRegInfo","initTraceItemNum","deleteNumNStore","deleteNum","isFilled","isComplete","isGameDone","addMarkerNStore","addMarker","_Util$setRelatedCandi","setRelatedCandidatesBySingleMark","_Util$setRelatedCandi2","_Util$setRelatedCandi3","setRelatedCandidatesByMultipleMarks","_Util$setRelatedCandi4","delMarker","newMarkerInfos","initTraceItemMarker","updateMarkerStatusNStore","getInfosFromMarkerNums","getRelatedMarkerIdxsFromCellIdx","getCorrespondingCellIdxs2MarkerIdx","relatedCellIdxs","_this$state3","duplcates","getElementById","blur","prevHelpMode","prevSingleNumValue","prevMultipleNums","stopCondition","doBackward","doInitSingleNum","doInitCandidates","doCheckDuplicates","_this$state4","_this$state5","handleSingleNumLevel","getSingleNumBtnId","doCandidates","_this$state6","initCandidates","_this$state7","_this$state8","index","_this$state9","cellAddress","getAttribute","isNaN","_this$state10","isMarkerAddress","markerId2Idx","doSelectSelectableCandidates","doForward","doEraseExclusiveColors","doBackwardNStore","_Util$eraseExclusiveC","eraseExclusiveColors","_Util$eraseExclusiveC2","selectSelectables","eraseRmovalbe","_this$state11","doEraseCandidates","isAll","stopCondtion","loopMax","datasetTmp","lastEvent","getNumInfoFromTraceItem","tmpCellInfo","getCandidateInfoFromTraceItem","traceBackCandidates","getMarkerInfoFromTraceItem","_Util$resetMarker3","_Util$resetMarker4","R1C1N12CellInfo","isLastCandidate","_Util$flipCandidateSt","flipCandidateStatus","_Util$flipCandidateSt2","targetMarkerIdx","concerningCellIdxs","flipMarkerStatus","handleStepBack","stepBack","handleClear","clear","origState","getInitialState","sampleLevel","sampleMatrix","getSampleMatrix","getRegisteredFlags","resetNumMatrix","_this$state12","_this$state13","clientX","clientY","didUpdate","min","_this$state14","isAllFilled","successMessages","ceil","random","countManualInputs","control_ControlPanel","handleSave","sudokuBoard_SudokuBoard","HelperPanel","components_Footer","floating_Floating","floating_ShowMessage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db89e0b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forward.92aa02a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/forwardDisabled.aa89f039.svg\";","module.exports = __webpack_public_path__ + \"static/media/fastForward.03cf5ac0.svg\";","module.exports = __webpack_public_path__ + \"static/media/fastForwardDisabled.93c696f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward.715f6885.svg\";","module.exports = __webpack_public_path__ + \"static/media/backwardDisabled.bef06159.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewind.6e7212f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewindDisabled.4ef08094.svg\";","module.exports = __webpack_public_path__ + \"static/media/select.3aa9aeb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/selectDisabled.421f9320.svg\";","module.exports = __webpack_public_path__ + \"static/media/erase.a96425d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraseDisabled.52d4ff05.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.37f834c1.svg\";","import React, { Component } from \"react\";\n\n// import Config from \"../Config\";\n// import Util from \"../Util\";\n\nimport \"../css/cell.css\";\nimport \"../css/cellColor.css\";\n\nclass Cell extends Component {\n  render() {\n    const { cellId, num, lastCandidate, clsName, onClick } = this.props;\n\n    return (\n      <div\n        id={cellId}\n        className={clsName}\n        data-num={lastCandidate}\n        onClick={onClick}\n      >\n        <span id={cellId + \"span\"}>{num}</span>\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","class Config {\n  static lang = {\n    en: \"en\",\n    ja: \"ja\"\n  };\n\n  static size = 9;\n  static sizeB = 3;\n  static numCells = Math.pow(Config.size, 2);\n\n  static maxLoopNum = 20;\n  static maxUnionSize = 4;\n  static maxSquareNum = 4;\n\n  // static footerClassName = \"App-footer\";\n\n  static traceTypes = {\n    numMatrix: \"numMatrix\",\n    candidate: \"candidate\",\n    marker: \"marker\"\n  };\n\n  static traceElementTypes = Object.assign(\n    { operation: \"operation\" },\n    Config.traceTypes\n  );\n\n  static operationTypes = {\n    manual: \"manual\",\n    auto: \"auto\"\n  };\n\n  static candidateTypes = {\n    displayCandidates: \"displayCandidates\",\n    removeByInsertedNum: \"removeByInsertedNum\",\n    singleCandidate: \"singleCandidate\",\n    singleExclusive: \"singleExclusive\",\n    multipleExclusive: \"multipleExclusive\",\n    square: \"square\",\n    assumptionTest: \"assumptionTest\"\n  };\n\n  static candidateLevelTypes = {\n    level0: Config.candidateTypes.displayCandidates,\n    level1: Config.candidateTypes.removeByInsertedNum,\n    level2: Config.candidateTypes.singleCandidate,\n    level3: Config.candidateTypes.singleExclusive,\n    level4: Config.candidateTypes.multipleExclusive,\n    level5: Config.candidateTypes.square,\n    level6: Config.candidateTypes.assumptionTest\n  };\n\n  static candidateLevelTypesArray = [\n    Config.candidateTypes.displayCandidates,\n    Config.candidateTypes.removeByInsertedNum,\n    Config.candidateTypes.singleCandidate,\n    Config.candidateTypes.singleExclusive,\n    Config.candidateTypes.multipleExclusive,\n    Config.candidateTypes.square,\n    Config.candidateTypes.assumptionTest\n  ];\n\n  static stepByStepLevels = [\n    Config.candidateLevelTypes.level2,\n    Config.candidateLevelTypes.level3,\n    Config.candidateLevelTypes.level4,\n    Config.candidateLevelTypes.level5,\n    Config.candidateLevelTypes.level6\n  ];\n\n  static candidateLevels = [\n    \"level0\",\n    \"level1\",\n    \"level2\",\n    \"level3\",\n    \"level4\",\n    \"level5\",\n    \"level6\"\n  ];\n\n  static restrictionTypes = {\n    row: \"row\",\n    column: \"col\",\n    col: \"col\",\n    block: \"blk\",\n    blk: \"blk\"\n  };\n\n  static restrictionTypesShort = {\n    row: \"r\",\n    r: \"r\",\n    column: \"c\",\n    col: \"c\",\n    c: \"c\",\n    block: \"b\",\n    blk: \"b\",\n    b: \"b\"\n  };\n\n  static restrictionTypesStraightArray = [\"row\", \"col\"];\n  static restrictionTypesStraightShortArray = [\"r\", \"c\"];\n  static restrictionTypesArray = [\n    ...Config.restrictionTypesStraightArray,\n    \"blk\"\n  ];\n\n  static invBRC = {\n    b: Config.restrictionTypes.blk,\n    r: Config.restrictionTypes.row,\n    c: Config.restrictionTypes.col\n  };\n\n  static mode = {\n    set: \"set\",\n    play: \"play\"\n  };\n\n  static helpMode = {\n    none: \"none\",\n    singleNum: \"singleNum\",\n    candidates: \"candidates\",\n    both: \"both\",\n    multipleNums: \"multipleNums\"\n  };\n\n  static helpModeArray4display = [\n    Config.helpMode.singleNum,\n    Config.helpMode.candidates\n  ];\n\n  static helpModeArray4displayOnMultipleNums = [\n    Config.helpMode.multipleNums,\n    Config.helpMode.candidates\n  ];\n\n  static helpModeArray = [\n    ...Config.helpModeArray4display,\n    Config.helpMode.none\n  ];\n\n  static updateHelpModes = [\n    ...Config.helpModeArray4display,\n    Config.helpMode.both,\n    Config.helpMode.multipleNums\n  ];\n\n  static checkMode = {\n    none: \"none\",\n    duplicates: \"duplicates\",\n    correctness: \"correctness\"\n  };\n\n  static checkModeArray = [\n    Config.checkMode.duplicates,\n    Config.checkMode.correctness\n  ];\n\n  static processTypes = {\n    insertion: \"insertion\",\n    candidates: \"candidates\",\n    singleNum: \"singleNum\"\n  };\n\n  static panelIds = {\n    sudokuBoard: \"sudokuBoard\",\n    block: \"block\",\n    cellContainerSuffix: \"Container\",\n    control: \"controlPanel\",\n    helper: \"helperPanel\",\n\n    numPanelContainer: \"numPanelContainer\",\n    numPanelWrapper: \"numPanelWrap\",\n    numPanel: \"numPanel\",\n    numPanelCell: \"N\",\n    numPanelControl: \"numPanelControl\",\n    messageWrapper: \"messageWrap\",\n\n    footer: \"footer\",\n    footerCredit: \"footerCredit\",\n\n    textForm: \"textForm\"\n  };\n\n  static panelClassNames = {\n    block: \"block\",\n    subBlock: \"subBlock\",\n    cell: \"cell\",\n    cellContainer: \"cellContainer\",\n    smallCell: \"smallCell\",\n    subCell: \"subCell\",\n    cellNum: \"num\",\n    control: \"controlPanel\",\n    helper: \"controlPanel\",\n    numPanelWrapper: \"float-wrap\",\n    messageWrapper: \"float-wrap-M\",\n\n    footer: \"App-footer\",\n    footerCredit: \"footerCredit\",\n\n    textForm: \"textForm\"\n  };\n\n  static panelTitles = {\n    header: {\n      en: \"Number Place Helper\",\n      ja: \"ナンプレ ヘルパー\"\n    },\n    helper: {\n      en: \"Helper\",\n      ja: \"ヘルパーパネル\"\n    },\n    control: {\n      en: \"Game Control\",\n      ja: \"ゲームパネル\"\n    },\n    textForm: \"Game Data\"\n  };\n\n  static buttonIds = {\n    // Game control //\n    newGame: \"newGame\",\n    sampleGameWrapper: \"sampleGameWrapper\",\n    sampleGameInnerWrapper: \"sampleGameInnerWrapper\",\n    sampleGame: \"sampleGame\",\n    setup: \"setup\",\n    save: \"save\",\n    restart: \"restart\",\n\n    // Helper //\n    check: \"check\",\n    checkWrapper: \"checkWrapper\",\n\n    singleNum: \"singleNumWrapper\",\n    singleNumRadio: \"radio\",\n    singleNumButton: \"singleNumButton\",\n\n    multipleNums: \"multipleNums\",\n    multipleNumsLabel: \"multipleNumsLabel\",\n    multipleNumsCheckbox: \"multipleNumsCheckbox\",\n\n    candidateWrapper: \"candidateWrapper\",\n    candidates: \"candidates\",\n    candidateLevels: \"candidateLevels\",\n\n    controlButtonWrapper: \"controlButtonWrapper\",\n    controls: \"controls\",\n    controlLabelSkipIneffective: \"controlLabelSkipIneffective\",\n\n    marker: \"marker\",\n\n    lang: \"lang\",\n    help: \"help\",\n\n    // Number Panel //\n    delete: \"delete\",\n    cancel: \"cancel\"\n  };\n\n  static buttonClassNames = {\n    // Game control //\n    newGame: \"controlButton\",\n\n    sampleGameFrame: \"controlButtonWrapper controlButton\",\n    sampleGameWrapper: \"sampleGameWrapper\",\n    sampleGameInnerWrapper: \"sampleGameInnerWrapper\",\n    sampleGameButton: \"sampleGameButton\",\n\n    setup: \"controlButton\",\n    save: \"controlButton\",\n    restart: \"controlButton\",\n\n    // Helper //\n    check: \"controlButton\",\n    checkTitle: \"controlTitle\",\n    checkButton: \"sampleGameButton\",\n\n    singleNumTitle: \"controlTitle\",\n    singleNumContainer: \"controlButtonWrapper controlButton\",\n    singleNumRadioWrapper: \"radioWrapper\",\n    singleNumButtonWrapper: \"candidateButtonWrapper\",\n    singleNumDisabled: \"inaccessible\",\n    singleNumDone: \"allDone\",\n    singleNumExceeding: \"exceeding\",\n    singleNumButton: \"sampleGameButton\",\n\n    multipleNumsContainer: \"controlButtonWrapper controlButton\",\n    multipleNumsCheckBoxWrapper: \"checkBoxWrapper\",\n    multipleNumsDisabled: \"inaccessible\",\n    multipleNumsDone: \"allDone\",\n    multipleNumsExceeding: \"exceeding\",\n\n    candidateTitle: \"controlTitle\",\n    candidateContainer: \"controlButtonWrapper controlButton\",\n    candidateButtonWrapper: \"candidateButtonWrapper\",\n    candidates: \"controlButton\",\n    candidateDisabled: \"inaccessible\",\n    candidateButton: \"sampleGameButton\",\n\n    controlSkipIneffective: \"controlCheckbox\",\n    marker: \"controlButton\",\n    lang: \"controlButton\",\n    help: \"controlButton\",\n\n    // Number Panel //\n    delete: \"controlButton\",\n    cancel: \"controlButton\"\n  };\n\n  static buttonStatus = {\n    waiting: \"waiting\",\n    active: \"active\",\n    disabled: \"disabled\"\n  };\n\n  static buttonTitles = {\n    // Game control //\n    newGame: {\n      en: \"New Game\",\n      ja: \"新しいゲーム\"\n    },\n    setup: {\n      en: \"Set & Play\",\n      ja: \"ゲームスタート\"\n    },\n    edit: {\n      en: \"Edit Game\",\n      ja: \"ゲームを修正する\"\n    },\n    sampleGames: {\n      en: \"Sample Games\",\n      ja: \"サンプルゲーム\"\n    },\n    restart: {\n      en: \"Restart\",\n      ja: \"再スタート\"\n    },\n    save: \"Save\",\n\n    // Helper //\n    check: \"Check\",\n    singleNum: \"Single Number\",\n    candidates: \"Candidates\",\n    controls: \"Controls\",\n    marker: {\n      en: \"Marker\",\n      ja: \"マーカー\"\n    },\n    help: {\n      en: \"Help\",\n      ja: \"ヘルプ\"\n    },\n\n    // Number Panel //\n    delete: \"Delete\",\n    cancel: \"Cancel\"\n  };\n\n  static langButtonTitles = {\n    en: \"English\",\n    ja: \"日本語\"\n  };\n\n  static helpModeButtonIds = {\n    container: \"helpModeContainer\",\n    wrapper: \"helpModeWrapper\",\n    title: \"helpModeTitle\",\n    none: \"cancelButton\",\n    candidates: \"candidatesButton\",\n    singleNum: \"singleNumButton\",\n    multipleNums: \"singleNumButton\"\n  };\n\n  static helpModeButtonClassNames = {\n    container: \"controlButtonWrapper controlButton\",\n    wrapper: \"candidateButtonWrapper\",\n    title: \"controlTitle\",\n    none: \"sampleGameButton\",\n    candidates: \"sampleGameButton\",\n    singleNum: \"sampleGameButton\",\n    multipleNums: \"sampleGameButton\"\n  };\n\n  static formNames = {\n    skipIneffective: \"skipIneffective\"\n  };\n\n  static candidateControls = {\n    reset: \"reset\",\n    backward: \"backward\",\n    forward: \"forward\",\n    fastForward: \"fastForward\",\n    select: \"select\",\n    erase: \"erase\"\n  };\n\n  static candidateActiveControls = {\n    singleNum: [\n      Config.candidateControls.reset,\n      Config.candidateControls.backward,\n      Config.candidateControls.forward,\n      Config.candidateControls.fastForward,\n      Config.candidateControls.select\n    ],\n    candidates: [Object.keys(Config.candidateControls)]\n  };\n\n  static candidateControlArray = [\n    Config.candidateControls.reset,\n    Config.candidateControls.backward,\n    Config.candidateControls.forward,\n    Config.candidateControls.fastForward,\n    Config.candidateControls.select,\n    Config.candidateControls.erase\n  ];\n\n  static candidateButtonGroupNames = [\"levels\", \"controls\"];\n\n  static candidateButtons = [\n    ...Config.candidateLevels,\n    ...Config.candidateControlArray\n  ];\n\n  static candidateStatus = {\n    assigned: \"assigned\",\n    selected: \"selected\",\n    selectable: \"selectable\",\n    candidate: \"candidate\",\n    exclusiveSingle: \"exclusiveSingleCandidate\",\n    exclusiveDouble: \"exclusiveDoubleCandidate\",\n    exclusiveTriple: \"exclusiveTripleCandidate\",\n    exclusiveQuadruple: \"exclusiveQuadrupleCandidate\",\n    exclusiveSquare: \"exclusiveSquareCandidate\",\n\n    assumptionTest: \"assumptionTest\",\n\n    removable: \"removable\",\n    removed: \"removed\",\n\n    shadowed: \"shadowed\",\n    weaklyShadowed: \"weaklyShadowed\",\n    inhibited: \"inhibited\"\n  };\n\n  static exclusiveMultiples4marker = [\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple\n  ];\n\n  static exclusiveTypes4marker = [\n    Config.candidateStatus.exclusiveSingle,\n    ...Config.exclusiveMultiples4marker\n  ];\n\n  static exclusiveMultiples = [\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple,\n    Config.candidateStatus.exclusiveQuadruple\n  ];\n\n  static narrowExclusiveStatuses = [\n    Config.candidateStatus.exclusiveSingle,\n    ...Config.exclusiveMultiples\n  ];\n\n  static exclusiveStatuses = [\n    ...Config.narrowExclusiveStatuses,\n    Config.candidateStatus.exclusiveSquare,\n    Config.candidateStatus.assumptionTest\n  ];\n\n  static wideExclusiveStatuses = [\n    Config.candidateStatus.selectable,\n    ...Config.exclusiveStatuses\n  ];\n\n  static selectedList = [\n    Config.candidateStatus.assigned,\n    Config.candidateStatus.selected\n  ];\n\n  static wideSelectedList = [\n    ...Config.selectedList,\n    Config.candidateStatus.selectable\n  ];\n\n  static wideRemovedList = [\n    Config.candidateStatus.removable,\n    Config.candidateStatus.removed\n  ];\n\n  static narrowCandidateList = [\n    Config.candidateStatus.candidate,\n    Config.candidateStatus.exclusiveSingle,\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple,\n    Config.candidateStatus.exclusiveQuadruple,\n    Config.candidateStatus.exclusiveSquare,\n    Config.candidateStatus.assumptionTest\n  ];\n\n  static markerRelatedExclusiveTypes = [\n    Config.candidateStatus.selectable,\n    Config.candidateStatus.exclusiveSingle,\n    Config.candidateStatus.exclusiveDouble,\n    Config.candidateStatus.exclusiveTriple\n  ];\n\n  static candidateList = [\n    ...Config.narrowCandidateList,\n    Config.candidateStatus.selectable\n  ];\n\n  static wideCandidateList = [\n    Config.candidateStatus.removable,\n    ...Config.candidateList\n  ];\n\n  static registered = \"registered\";\n  static duplicated = \"duplicated\";\n\n  static checkButtonLabels = {\n    title: {\n      en: \"Insertion Check\",\n      ja: \"入力チェック\"\n    },\n    none: {\n      en: \"Cancel\",\n      ja: \"キャンセル\"\n    },\n    duplicates: {\n      en: \"Duplicate\",\n      ja: \"重複\"\n    },\n    correctness: {\n      en: \"Correctness\",\n      ja: \"不正解\"\n    }\n  };\n\n  static checkTitleCaptions = {\n    none: {\n      en: \"Cancel Check Function\",\n      ja: \"チェック機能をオフにする\"\n    },\n    duplicates: {\n      en: \"Check Duplicates all the time\",\n      ja: \"重複を常時チェック\"\n    },\n    correctness: {\n      en: \"Check Correctness all the time\",\n      ja: \"正解と一致しない入力を常時チェック\"\n    }\n  };\n\n  static helpModeButtonLabels = {\n    title: {\n      en: \"Helper Functions\",\n      ja: \"ヘルパー機能\"\n    },\n    none: {\n      en: \"Cancel\",\n      ja: \"キャンセル\"\n    },\n    singleNum: {\n      en: \"Single Num\",\n      ja: \"単一数表示\"\n    },\n    multipleNums: {\n      en: \"Multi Nums\",\n      ja: \"複数数表示\"\n    },\n    candidates: {\n      en: \"Candidates\",\n      ja: \"候補表示\"\n    },\n    skipIneffective: {\n      en: \"Skip ineffective exclusives\",\n      ja: \"無効な排他的候補を非表示\"\n    }\n  };\n\n  static helpModeCaptions = {\n    none: {\n      en: \"Cancel the current helper function\",\n      ja: \"ヘルパー機能をオフにする\"\n    },\n    singleNum: {\n      en: \"Shadow numbers other than the selected number\",\n      ja: \"選択された数字のみ表示\"\n    },\n    candidates: {\n      en: \"Show candidates of cells\",\n      ja: \"候補の表示\"\n    },\n    both: {\n      en: \"Combine the single number and the candidates functions\",\n      ja: \"単一数表示と候補表示の同時利用\"\n    },\n    multipleNums: {\n      en: \"Show selected numbers with candidates\",\n      ja: \"複数数表示と候補表示の同時利用\"\n    }\n  };\n\n  static singleNumLevels = [\"level0\", \"level1\", \"level2\", \"level3\"];\n\n  static singleNumCaptions = {\n    level0: {\n      en: \"Shadow numbers other than the selected number\",\n      ja: \"選択した数字以外を目立たなくする\"\n    },\n    level1: {\n      en: \"Shadow cells inhibited by the number\",\n      ja: \"すでに盤上にある数字によって選択不可能なセルに影をつける\"\n    },\n    level2: {\n      en: \"Highlight selectable cells\",\n      ja: \"選択可能なセルを目立たせる\"\n    },\n    level3: {\n      en: \"Shadow cells constrained by the candidates in other blocks\",\n      ja: \"排他的な候補によって選択不可能なセルに影をつける\"\n    }\n  };\n\n  static candidateLevelCaptions = {\n    level0: {\n      en: \"Show a candidate panel in each cell\",\n      ja: \"候補を表示する\"\n    },\n    level1: {\n      en: \"Remove candidates inhibited by numbers on other cells\",\n      ja: \"すでに盤上にある数字によって選択不可能な数字を候補から削除する\"\n    },\n    level2: {\n      en: \"Highlight selectable candidates\",\n      ja: \"選択可能な候補を目立たせる\"\n    },\n    level3: {\n      en:\n        \"Highlight candidates constraining other cells by the selected single number\",\n      ja: \"排他的な単一数候補によって選択不可能なセルからその数字を削除する\"\n    },\n    level4: {\n      en: \"Highlight candidates constraining other cells by a few numbers\",\n      ja: \"複数の数による排他的候補を目立たせる\"\n    },\n    level5: {\n      en: \"Highlight square candidates\",\n      ja: \"井桁候補を目立たせる\"\n    },\n    level6: {\n      en: \"Highlight assumption-test candidates\",\n      ja: \"仮定-試験によって候補から除外される数字を表示する\"\n    }\n  };\n\n  static constrolIconCaptions = {\n    reset: {\n      en: \"Reset\",\n      ja: \"これまでの操作を無効にする\"\n    },\n    backward: {\n      en: \"Backward\",\n      ja: \"ヘルパー機能による表示をひとつ前に戻す\"\n    },\n    forward: {\n      en: \"Forward\",\n      ja: \"ヘルパー機能を進める\"\n    },\n    fastForward: {\n      en: \"Fast forward\",\n      ja: \"ヘルパー機能を可能な限り進める\"\n    },\n    select: {\n      en: \"Select all selectable candidates\",\n      ja: \"選択可能なセルを全て選択する\"\n    },\n    erase: {\n      en: \"Remove colors of exclusive candidates\",\n      ja: \"ヘルパー機能による色つけを解除する\"\n    }\n  };\n\n  static candidateControlIconSizes = {\n    small: \"14px\",\n    large: \"16px\"\n  };\n\n  static backwardStopCondition = {\n    wrongInsertion: \"wrongInsertion\",\n    numInsertion: \"numInsertion\"\n  };\n\n  static result = {\n    passed: \"passed\",\n    failed: \"failed\"\n  };\n\n  static messages = {\n    success: [\n      \"Complete!\",\n      \"Perfect!\",\n      \"Excellent!\",\n      \"Incredible!\",\n      \"Phenomenal!\",\n      \"Well done!\",\n      \"Good job!\",\n      \"Great!\",\n      \"Awesome!\",\n      \"Wonderful!\",\n      \"Bravo!\",\n      \"Amazing!\",\n      \"You did it!\",\n      \"You're genius!\"\n    ],\n    failure: \"There are some duplicates.\"\n  };\n\n  static alertMessages = {\n    duplicates: \"There are some duplicates.\",\n    deadEnd: \"A cell with no candidates.\",\n    wrongQuestion: \"This is insoluble.\"\n  };\n\n  static helpPath = \"./help/\";\n\n  static helpFiles = {\n    en: \"help_en.html\",\n    ja: \"help_ja.html\"\n  };\n\n  static dummyMatrix = [\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [4, 5, 6, 7, 8, 9, 1, 2, 3],\n    [7, 8, 9, 1, 2, 3, 4, 5, 6],\n    [2, 3, 4, 5, 6, 7, 8, 9, 1],\n    [5, 6, 7, 8, 9, 1, 2, 3, 4],\n    [8, 9, 1, 2, 3, 4, 5, 6, 7],\n    [3, 4, 5, 6, 7, 8, 9, 1, 2],\n    [6, 7, 8, 9, 1, 2, 3, 4, 5],\n    [9, 1, 2, 3, 4, 5, 6, null, null]\n  ];\n\n  static sampleGameClasses = {\n    beginner: \"beginner\",\n    easy: \"easy\",\n    medium: \"medium\",\n    hard: \"hard\",\n    xtreme: \"xtreme\"\n  };\n\n  static sampleGameClassList = [\n    Config.sampleGameClasses.beginner,\n    Config.sampleGameClasses.easy,\n    Config.sampleGameClasses.medium,\n    Config.sampleGameClasses.hard,\n    Config.sampleGameClasses.xtreme\n  ];\n\n  static sampleGameTitles = {\n    beginner: {\n      en: \"Beginner\",\n      ja: \"初心者\"\n    },\n    easy: {\n      en: \"Easy\",\n      ja: \"初級\"\n    },\n    medium: {\n      en: \"Medium\",\n      ja: \"中級\"\n    },\n    hard: {\n      en: \"Hard\",\n      ja: \"上級\"\n    },\n    xtreme: {\n      en: \"Extreme\",\n      ja: \"超上級\"\n    }\n  };\n\n  static sampleGames = {\n    [Config.sampleGameClassList[0]]: [\n      // {\n      //   credit: {\n      //     publisher: \"Byakuyasyobo\",\n      //     author: \"Akihiko Takise\",\n      //     book: \"Syokyu NumPra 12 Gatsugo\",\n      //     question: \"Q1\"\n      //   },\n      //   matrix: [\n      //     [8, 0, 0, 0, 0, 1, 0, 0, 6],\n      //     [0, 0, 0, 9, 0, 6, 0, 3, 0],\n      //     [0, 0, 0, 3, 4, 2, 1, 0, 0],\n      //     [0, 7, 4, 0, 0, 0, 2, 1, 9],\n      //     [0, 0, 8, 0, 5, 0, 4, 0, 0],\n      //     [9, 1, 3, 0, 0, 0, 8, 6, 0],\n      //     [0, 0, 5, 7, 1, 4, 0, 0, 0],\n      //     [0, 2, 0, 8, 0, 3, 0, 0, 0],\n      //     [1, 0, 0, 2, 0, 0, 0, 0, 4]\n      //   ]\n      // },\n      {\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [8, 0, 0, 0, 0, 1, 0, 0, 6],\n          [0, 0, 0, 9, 0, 6, 0, 3, 0],\n          [0, 0, 0, 3, 4, 2, 1, 0, 0],\n          [0, 7, 4, 0, 0, 0, 2, 1, 9],\n          [0, 0, 8, 0, 5, 0, 4, 0, 0],\n          [9, 1, 3, 0, 0, 0, 8, 6, 0],\n          [0, 0, 5, 7, 1, 4, 0, 0, 0],\n          [0, 2, 0, 8, 0, 3, 0, 0, 0],\n          [1, 0, 0, 2, 0, 0, 0, 0, 4]\n        ]\n      },\n      // Syokyu NumPre 12 Gatugo Q252\n      // [Config.sampleGameList[0]]:\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q252\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q252\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q252\"\n          }\n        },\n        matrix: [\n          [5, 0, 1, 0, 0, 0, 7, 0, 0],\n          [0, 0, 0, 0, 0, 3, 0, 0, 0],\n          [6, 0, 9, 0, 0, 7, 1, 0, 4],\n          [0, 0, 0, 0, 1, 0, 4, 3, 0],\n          [0, 0, 0, 7, 0, 6, 0, 0, 0],\n          [0, 2, 8, 0, 9, 0, 0, 0, 0],\n          [4, 0, 5, 6, 0, 0, 2, 0, 7],\n          [0, 0, 0, 9, 0, 0, 0, 0, 0],\n          [0, 0, 2, 0, 0, 0, 5, 0, 1]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q11\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q11\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q11\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 8, 0, 6, 0, 0, 3],\n          [0, 0, 2, 9, 0, 0, 7, 4, 0],\n          [0, 7, 0, 0, 4, 0, 0, 6, 0],\n          [6, 4, 0, 0, 1, 0, 0, 0, 7],\n          [0, 0, 7, 4, 0, 3, 1, 0, 0],\n          [5, 0, 0, 0, 6, 0, 0, 3, 2],\n          [0, 3, 0, 0, 2, 0, 0, 8, 0],\n          [0, 9, 1, 0, 0, 7, 6, 0, 0],\n          [2, 0, 0, 5, 0, 1, 0, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Syokyu NumPra 12 Gatsugo\",\n        //   question: \"Q200\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q200\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"初級ナンプレ 12月号\",\n            question: \"Q200\"\n          }\n        },\n        matrix: [\n          [1, 0, 0, 0, 0, 0, 0, 0, 4],\n          [0, 9, 0, 8, 0, 2, 0, 0, 0],\n          [0, 0, 3, 0, 0, 9, 1, 0, 0],\n          [0, 6, 0, 0, 5, 0, 4, 1, 0],\n          [0, 0, 0, 3, 0, 6, 0, 0, 0],\n          [0, 8, 5, 0, 4, 0, 0, 3, 0],\n          [0, 0, 6, 5, 0, 0, 2, 0, 0],\n          [0, 0, 0, 6, 0, 7, 0, 5, 0],\n          [2, 0, 0, 0, 0, 0, 0, 0, 7]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Byakuyasyobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"Chukyu NumPra 2 Gatsugo\",\n        //   question: \"Q7\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyasyobo\",\n            author: \"Akihiko Takise\",\n            book: \"Syokyu NumPra 12 Gatsugo\",\n            question: \"Q7\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"中級ナンプレ 2月号\",\n            question: \"Q7\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 6, 0, 0, 0, 1],\n          [0, 0, 1, 7, 0, 2, 0, 0, 0],\n          [0, 6, 0, 5, 0, 4, 0, 0, 0],\n          [0, 3, 2, 0, 0, 0, 8, 7, 0],\n          [9, 0, 0, 0, 5, 0, 0, 0, 6],\n          [0, 4, 5, 0, 0, 0, 3, 2, 0],\n          [0, 0, 0, 1, 0, 6, 0, 8, 0],\n          [0, 0, 0, 9, 0, 7, 2, 0, 0],\n          [3, 0, 0, 0, 8, 0, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[1]]: [\n      // {\n      //   credit: \"Tyukyu Numpla Feburary Q251\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 3, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 6, 0, 8, 0, 0],\n      //     [0, 8, 0, 5, 0, 2, 0, 4, 0],\n      //     [0, 0, 5, 0, 0, 3, 2, 0, 0],\n      //     [9, 2, 0, 0, 0, 0, 0, 3, 1],\n      //     [0, 0, 1, 4, 0, 0, 6, 0, 0],\n      //     [0, 3, 0, 9, 0, 7, 0, 6, 0],\n      //     [0, 0, 7, 0, 8, 0, 3, 0, 0],\n      //     [0, 0, 0, 0, 1, 0, 0, 0, 0]\n      //   ]\n      // },\n      // // Pocket sudoku 11 joukyuuhen Q1\n      // [Config.sampleGameList[1]]: {\n      // [Config.sampleGameList[1]]: {\n      //   {\n      //     credit: \"Tyukyu Numpla Feburary Q1\",\n      //     matrix: [\n      //       [0, 5, 0, 2, 0, 6, 0, 1, 0],\n      //       [3, 0, 0, 0, 4, 0, 0, 0, 6],\n      //       [0, 0, 2, 0, 0, 0, 0, 0, 0],\n      //       [9, 0, 0, 0, 8, 0, 0, 0, 5],\n      //       [0, 6, 0, 9, 7, 5, 0, 2, 0],\n      //       [2, 0, 0, 0, 6, 0, 0, 0, 1],\n      //       [0, 0, 0, 0, 0, 0, 7, 0, 0],\n      //       [1, 0, 0, 0, 5, 0, 0, 0, 9],\n      //       [0, 9, 0, 7, 0, 3, 0, 6, 0]\n      //     ]\n      //   }\n      {\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q1\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 0, 8, 3],\n          [0, 0, 1, 4, 0, 0, 0, 0, 0],\n          [0, 3, 0, 9, 0, 0, 5, 0, 0],\n          [0, 5, 7, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 2, 0, 6, 0],\n          [0, 0, 0, 0, 7, 0, 1, 0, 4],\n          [0, 0, 4, 0, 0, 7, 0, 0, 2],\n          [3, 0, 0, 0, 6, 0, 0, 0, 0],\n          [5, 0, 0, 0, 0, 8, 9, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q1\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q1\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q1\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 9, 7, 0],\n          [0, 0, 0, 0, 0, 0, 3, 8, 0],\n          [0, 0, 0, 9, 2, 0, 0, 0, 0],\n          [0, 0, 0, 7, 5, 0, 0, 9, 8],\n          [5, 6, 0, 0, 0, 0, 0, 3, 7],\n          [7, 3, 0, 0, 4, 8, 0, 0, 0],\n          [0, 0, 0, 0, 6, 9, 0, 0, 0],\n          [0, 7, 2, 0, 0, 0, 0, 0, 0],\n          [0, 8, 5, 0, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q2\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q2\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q2\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 2, 7, 0, 0, 0, 4],\n          [0, 0, 8, 0, 0, 0, 2, 0, 0],\n          [0, 5, 0, 0, 1, 0, 9, 0, 0],\n          [1, 0, 0, 0, 0, 0, 0, 5, 6],\n          [4, 0, 3, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 2, 0],\n          [0, 9, 6, 0, 0, 0, 0, 0, 3],\n          [0, 0, 0, 5, 0, 8, 0, 0, 0],\n          [8, 0, 0, 1, 0, 0, 6, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Pocket sudoku 11 jokyuhen Q11\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q11\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q11\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q11\"\n          }\n        },\n        matrix: [\n          [1, 0, 0, 7, 0, 0, 0, 6, 0],\n          [0, 7, 0, 0, 1, 0, 0, 0, 4],\n          [0, 0, 3, 0, 0, 2, 0, 0, 0],\n          [3, 0, 0, 5, 0, 0, 1, 0, 0],\n          [0, 2, 0, 0, 8, 0, 0, 7, 0],\n          [0, 0, 6, 0, 0, 3, 0, 0, 8],\n          [0, 0, 0, 4, 0, 0, 3, 0, 0],\n          [5, 0, 0, 0, 6, 0, 0, 1, 0],\n          [0, 1, 0, 0, 0, 8, 0, 0, 2]\n        ]\n      },\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q3\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q3\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q3\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q3\"\n          }\n        },\n        matrix: [\n          [0, 1, 0, 0, 0, 5, 0, 0, 0],\n          [0, 0, 5, 0, 2, 0, 3, 0, 4],\n          [0, 0, 0, 6, 0, 0, 0, 8, 0],\n          [5, 0, 0, 0, 7, 0, 4, 0, 0],\n          [0, 9, 0, 0, 0, 0, 0, 1, 0],\n          [0, 0, 2, 0, 5, 0, 0, 0, 6],\n          [0, 6, 0, 0, 0, 8, 0, 0, 0],\n          [8, 0, 7, 0, 3, 0, 2, 0, 0],\n          [0, 0, 0, 7, 0, 0, 0, 9, 0]\n        ]\n      },\n      {\n        // // credit: \"NumPra premium Zeus Q62\",\n        // credit: {\n        //   publisher: \"Nagaoka Shoten\",\n        //   author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n        //   book: \"NumPla premium Zeus\",\n        //   question: \"Q62\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nagaoka Shoten\",\n            author: \"Mitsunori Kawasaki, Kaori Kawasaki\",\n            book: \"NumPla premium Zeus\",\n            question: \"Q62\"\n          },\n          ja: {\n            publisher: \"永岡書店\",\n            author: \"川崎光徳・川崎芳織\",\n            book: \"超難問ナンプレプレミアム ゼウス\",\n            question: \"Q62\"\n          }\n        },\n        matrix: [\n          [0, 0, 2, 0, 7, 0, 6, 0, 0],\n          [0, 0, 0, 9, 0, 3, 0, 0, 0],\n          [0, 0, 5, 0, 0, 0, 3, 0, 1],\n          [9, 8, 0, 0, 0, 0, 0, 1, 0],\n          [0, 0, 0, 3, 0, 0, 0, 0, 7],\n          [0, 0, 0, 6, 4, 0, 0, 5, 0],\n          [0, 0, 1, 0, 0, 0, 7, 0, 2],\n          [0, 0, 0, 0, 0, 5, 0, 0, 0],\n          [4, 0, 0, 0, 0, 8, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[2]]: [\n      {\n        // // credit: \"Pocket sudoku 11 jokyuhen Q54\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q54\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q54\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q54\"\n          }\n        },\n        matrix: [\n          [0, 1, 0, 0, 3, 0, 0, 0, 8],\n          [4, 0, 0, 6, 0, 0, 0, 2, 0],\n          [0, 0, 9, 0, 0, 0, 5, 0, 0],\n          [0, 7, 0, 0, 0, 5, 0, 0, 0],\n          [1, 0, 0, 0, 8, 0, 0, 0, 3],\n          [0, 0, 0, 4, 0, 0, 0, 7, 0],\n          [0, 0, 6, 0, 0, 0, 9, 0, 0],\n          [0, 8, 0, 0, 0, 9, 0, 0, 1],\n          [7, 0, 0, 0, 2, 0, 0, 6, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      // {\n      //   credit: \"Gekikara Sudoku10 Q99\",\n      //   matrix: [\n      //     [0, 0, 2, 1, 0, 0, 0, 7, 6],\n      //     [0, 0, 3, 6, 0, 0, 0, 1, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [5, 7, 0, 0, 0, 3, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 8, 5, 0, 0, 0, 6, 2],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [8, 2, 0, 0, 0, 9, 3, 0, 0],\n      //     [4, 3, 0, 0, 0, 2, 6, 0, 0]\n      //   ]\n      // },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q79\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q79\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q79\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q79\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 0, 0, 2, 1],\n          [0, 0, 0, 6, 0, 0, 3, 8, 0],\n          [0, 0, 7, 0, 0, 3, 5, 0, 0],\n          [0, 8, 0, 0, 5, 1, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 8, 2, 0, 0, 9, 0],\n          [0, 0, 2, 4, 0, 0, 7, 0, 0],\n          [0, 3, 9, 0, 0, 6, 0, 0, 0],\n          [8, 6, 0, 0, 0, 0, 0, 0, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Gekikara sudoku 10 Q87\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Rimu Takayura\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q87\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Rimu Takayura\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q87\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"高由良りむ\",\n            book: \"激辛数独 10\",\n            question: \"Q87\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 5, 0, 0, 7, 0, 0],\n          [0, 3, 0, 0, 0, 9, 0, 8, 0],\n          [5, 0, 8, 0, 0, 0, 9, 0, 0],\n          [0, 7, 0, 0, 2, 0, 0, 0, 8],\n          [0, 0, 0, 1, 0, 4, 0, 0, 0],\n          [9, 0, 0, 0, 7, 0, 0, 1, 0],\n          [0, 0, 6, 0, 0, 0, 5, 0, 9],\n          [0, 8, 0, 4, 0, 0, 0, 3, 0],\n          [0, 0, 7, 0, 0, 3, 0, 0, 0]\n        ]\n      },\n      // [Config.sampleGameList[2]]: {\n      {\n        // // credit: \"Gekikara sudoku 10 Q97\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Anpai\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q97\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Anpai\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q97\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"あんぱい\",\n            book: \"激辛数独 10\",\n            question: \"Q97\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 1, 0, 5, 0],\n          [0, 0, 7, 0, 3, 0, 0, 0, 1],\n          [0, 6, 0, 2, 0, 0, 0, 0, 0],\n          [0, 0, 6, 0, 1, 0, 0, 0, 4],\n          [0, 5, 0, 6, 0, 7, 0, 2, 0],\n          [4, 0, 0, 0, 2, 0, 9, 0, 0],\n          [0, 0, 0, 0, 0, 8, 0, 3, 0],\n          [8, 0, 0, 0, 5, 0, 2, 0, 0],\n          [0, 1, 0, 9, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Pocket Sudoku 11 Jokyuhen Q103\",\n        // credit: {\n        //   publisher: \"Softbank Creative\",\n        //   author: \"Nikoli\",\n        //   book: \"Pocket sudoku 11 jokyuhen\",\n        //   question: \"Q103\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Softbank Creative\",\n            author: \"Nikoli\",\n            book: \"Pocket sudoku 11 jokyuhen\",\n            question: \"Q103\"\n          },\n          ja: {\n            publisher: \"Softbank Creative\",\n            author: \"ニコリ\",\n            book: \"Pocket sudoku 11 上級編\",\n            question: \"Q103\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 6, 7, 0, 0],\n          [0, 2, 3, 0, 0, 0, 8, 9, 0],\n          [5, 9, 0, 0, 0, 0, 0, 6, 0],\n          [3, 0, 0, 6, 0, 2, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 9, 0, 1, 0, 0, 4],\n          [0, 3, 0, 0, 0, 0, 0, 1, 6],\n          [0, 1, 9, 0, 0, 0, 5, 7, 0],\n          [0, 0, 5, 2, 0, 0, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"Gekikara Sudoku 10 103\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Susumu Kondo\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q103\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Susumu Kondo\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q103\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"近藤夲\",\n            book: \"激辛数独 10\",\n            question: \"Q103\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 0, 7, 9, 0, 0],\n          [8, 4, 0, 0, 1, 0, 0, 0, 0],\n          [0, 1, 0, 0, 0, 0, 0, 0, 0],\n          [0, 0, 0, 2, 0, 0, 6, 0, 0],\n          [0, 3, 0, 0, 4, 0, 0, 5, 0],\n          [0, 0, 7, 0, 0, 9, 0, 0, 0],\n          [0, 0, 0, 0, 0, 0, 0, 3, 0],\n          [0, 0, 0, 0, 5, 0, 0, 4, 1],\n          [0, 0, 2, 6, 0, 0, 0, 0, 0]\n        ]\n      }\n    ],\n    // Gekikara Sudoku10 Q105\n    [Config.sampleGameClassList[3]]: [\n      {\n        // // credit: \"Gekikara Sudoku10 Q82\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Chibisukemaru\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q82\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Chibisukemaru\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q82\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"チビスケ丸\",\n            book: \"激辛数独 10\",\n            question: \"Q82\"\n          }\n        },\n        matrix: [\n          [0, 0, 1, 0, 5, 0, 0, 0, 9],\n          [4, 0, 0, 1, 0, 0, 2, 0, 0],\n          [0, 6, 0, 0, 0, 4, 0, 5, 0],\n          [9, 0, 0, 0, 0, 0, 7, 0, 0],\n          [0, 0, 0, 0, 1, 0, 0, 0, 0],\n          [0, 0, 4, 0, 0, 0, 0, 0, 3],\n          [0, 3, 0, 2, 0, 0, 0, 8, 0],\n          [0, 0, 9, 0, 0, 5, 0, 0, 7],\n          [8, 0, 0, 0, 3, 0, 4, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"Gekikara Sudoku 10 84\",\n      //   matrix: [\n      //     [0, 0, 1, 5, 0, 0, 0, 3, 0],\n      //     [0, 0, 0, 0, 0, 8, 7, 0, 0],\n      //     [0, 5, 0, 0, 4, 0, 0, 0, 0],\n      //     [0, 4, 0, 3, 0, 0, 0, 0, 9],\n      //     [1, 0, 0, 0, 0, 0, 0, 0, 6],\n      //     [8, 0, 0, 0, 0, 7, 0, 2, 0],\n      //     [0, 0, 0, 0, 3, 0, 0, 6, 0],\n      //     [0, 0, 5, 4, 0, 0, 0, 0, 0],\n      //     [0, 3, 0, 0, 0, 6, 9, 0, 0]\n      //   ]\n      // },\n      {\n        // // credit: \"ChoGekikara sudoku 4 15\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Nyoroppi\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q15\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Nyoroppi\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q15\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"にょろっぴぃ\",\n            book: \"超激辛数独 4\",\n            question: \"Q15\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 0, 4, 9, 0, 0, 0],\n          [0, 3, 7, 0, 0, 0, 6, 1, 0],\n          [0, 9, 2, 0, 7, 0, 0, 5, 0],\n          [0, 7, 0, 9, 0, 0, 1, 8, 0],\n          [0, 0, 0, 0, 8, 0, 0, 0, 0],\n          [0, 1, 6, 0, 0, 4, 0, 7, 0],\n          [0, 8, 0, 0, 5, 0, 7, 9, 0],\n          [0, 2, 1, 0, 0, 0, 5, 3, 0],\n          [0, 0, 0, 3, 1, 0, 0, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"ChoGekikara sudoku 4 16\",\n      //   matrix: [\n      //     [0, 0, 0, 5, 0, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 3, 0, 1, 0, 0],\n      //     [0, 4, 0, 0, 0, 7, 0, 5, 0],\n      //     [0, 3, 0, 4, 0, 0, 0, 6, 0],\n      //     [0, 0, 1, 0, 0, 0, 2, 0, 0],\n      //     [0, 8, 0, 0, 0, 5, 0, 7, 0],\n      //     [0, 6, 0, 3, 0, 0, 0, 8, 0],\n      //     [0, 0, 8, 0, 2, 0, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 1, 0, 0, 0]\n      //   ]\n      // },\n      //   {\n      //     credit: \"ChoGekikara sudoku 4 18\",\n      //     matrix: [\n      //       [0, 0, 6, 2, 0, 0, 0, 7, 0],\n      //       [0, 8, 0, 0, 9, 0, 0, 0, 2],\n      //       [1, 0, 0, 0, 5, 0, 0, 0, 0],\n      //       [5, 0, 0, 9, 0, 0, 0, 0, 0],\n      //       [0, 6, 2, 0, 0, 0, 1, 4, 0],\n      //       [0, 0, 0, 0, 0, 3, 0, 0, 7],\n      //       [0, 0, 0, 0, 1, 0, 0, 0, 6],\n      //       [6, 0, 0, 0, 3, 0, 0, 8, 0],\n      //       [0, 5, 0, 0, 0, 4, 3, 0, 0]\n      //     ]\n      //   },\n      //   {\n      //     credit: \"ChoGekikara Sudoku 4 20\",\n      //     matrix: [\n      //       [0, 4, 0, 0, 0, 1, 0, 0, 2],\n      //       [9, 0, 0, 0, 5, 0, 1, 0, 0],\n      //       [0, 3, 0, 4, 0, 0, 0, 6, 0],\n      //       [0, 0, 3, 0, 0, 0, 0, 0, 5],\n      //       [0, 2, 0, 0, 0, 0, 0, 4, 0],\n      //       [7, 0, 0, 0, 0, 0, 3, 0, 0],\n      //       [0, 8, 0, 0, 0, 3, 0, 2, 0],\n      //       [0, 0, 9, 0, 2, 0, 0, 0, 1],\n      //       [6, 0, 0, 1, 0, 0, 0, 9, 0]\n      //     ]\n      //   },\n      {\n        // // credit: \"ChoGekikara Sudoku4 40\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Haasan\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q40\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Haasan\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q40\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"はあさん\",\n            book: \"超激辛数独 4\",\n            question: \"Q40\"\n          }\n        },\n        matrix: [\n          [7, 0, 0, 5, 0, 2, 0, 0, 9],\n          [0, 6, 0, 0, 9, 0, 0, 5, 0],\n          [0, 0, 2, 0, 0, 0, 8, 0, 0],\n          [0, 0, 0, 2, 0, 7, 0, 0, 0],\n          [0, 0, 0, 0, 5, 0, 0, 0, 0],\n          [0, 0, 0, 3, 0, 9, 0, 0, 0],\n          [0, 0, 5, 0, 0, 0, 7, 0, 0],\n          [0, 9, 0, 0, 8, 0, 0, 6, 0],\n          [4, 0, 0, 7, 0, 1, 0, 0, 3]\n        ]\n      },\n      {\n        // // credit: \"Gekikara Sudoku10 105\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Mitsuyuki Okuyama\",\n        //   book: \"Gekikara Sudoku 10\",\n        //   question: \"Q105\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Mitsuyuki Okuyama\",\n            book: \"Gekikara Sudoku 10\",\n            question: \"Q105\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"おく山みつゆき\",\n            book: \"激辛数独 10\",\n            question: \"Q105\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 0, 0, 3, 0],\n          [0, 0, 6, 0, 2, 0, 5, 0, 0],\n          [0, 2, 0, 0, 0, 4, 0, 0, 0],\n          [0, 0, 0, 9, 0, 0, 0, 7, 0],\n          [0, 0, 7, 0, 5, 0, 6, 0, 0],\n          [0, 4, 0, 0, 0, 8, 0, 0, 0],\n          [0, 0, 0, 8, 0, 0, 0, 9, 0],\n          [0, 0, 5, 0, 6, 0, 7, 0, 0],\n          [0, 8, 0, 0, 0, 9, 0, 0, 0]\n        ]\n      },\n      // {\n      //   credit: \"Gekikara Sudoku 10 99\",\n      //   matrix: [\n      //     [0, 0, 2, 1, 0, 0, 0, 7, 6],\n      //     [0, 0, 3, 6, 0, 0, 0, 1, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [5, 7, 0, 0, 0, 3, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 8, 5, 0, 0, 0, 6, 2],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [8, 2, 0, 0, 0, 9, 3, 0, 0],\n      //     [4, 3, 0, 0, 0, 2, 6, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku 10 101\",\n      //   matrix: [\n      //     [0, 0, 0, 7, 0, 8, 0, 6, 0],\n      //     [0, 0, 0, 0, 1, 0, 2, 0, 8],\n      //     [0, 0, 0, 0, 0, 6, 0, 7, 0],\n      //     [9, 0, 0, 0, 0, 0, 3, 0, 2],\n      //     [0, 6, 0, 0, 0, 0, 0, 9, 0],\n      //     [5, 0, 3, 0, 0, 0, 0, 0, 1],\n      //     [0, 4, 0, 3, 0, 0, 0, 0, 0],\n      //     [8, 0, 1, 0, 2, 0, 0, 0, 0],\n      //     [0, 7, 0, 8, 0, 9, 0, 0, 0]\n      //   ]\n      // }\n      {\n        // // credit: \"ChoGekikara Sudoku 4 Q84\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Aquablue\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q84\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Sakusaku\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q84\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"さくさく\",\n            book: \"超激辛数独 4\",\n            question: \"Q84\"\n          }\n        },\n        matrix: [\n          [2, 0, 0, 8, 0, 0, 0, 0, 3],\n          [0, 0, 7, 0, 0, 0, 9, 0, 0],\n          [0, 6, 0, 0, 9, 0, 0, 5, 0],\n          [1, 0, 0, 2, 0, 0, 0, 0, 0],\n          [0, 0, 4, 0, 5, 0, 6, 0, 0],\n          [0, 0, 0, 0, 0, 3, 0, 0, 1],\n          [0, 5, 0, 0, 8, 0, 0, 2, 0],\n          [0, 0, 6, 0, 0, 0, 5, 0, 0],\n          [3, 0, 0, 0, 0, 4, 0, 0, 8]\n        ]\n      },\n      {\n        // // credit: \"ChoGekikara Sudoku 4 Q85\",\n        // credit: {\n        //   publisher: \"Nikoli\",\n        //   author: \"Okayusan\",\n        //   book: \"ChoGekikara Sudoku 4\",\n        //   question: \"Q85\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Koki\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q85\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"Koki\",\n            book: \"超激辛数独 4\",\n            question: \"Q85\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 0, 0, 0, 0],\n          [0, 0, 2, 0, 1, 0, 9, 0, 0],\n          [0, 3, 0, 0, 0, 8, 0, 4, 0],\n          [0, 0, 1, 0, 0, 0, 0, 0, 2],\n          [0, 4, 0, 0, 0, 0, 0, 7, 0],\n          [9, 0, 0, 0, 0, 0, 5, 0, 0],\n          [0, 7, 0, 4, 0, 0, 0, 8, 0],\n          [0, 0, 5, 0, 9, 0, 2, 0, 0],\n          [0, 0, 0, 0, 0, 7, 0, 0, 0]\n        ]\n      }\n    ],\n    [Config.sampleGameClassList[4]]: [\n      {\n        // // credit: \"ChoJokyu NumPla vol.12 Q201\",\n        // credit: {\n        //   publisher: \"Byakuyashobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"ChoJokyu NumPla vol.12\",\n        //   question: \"Q201\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyashobo\",\n            author: \"Akihiko Takise\",\n            book: \"ChoJokyu NumPla vol.12\",\n            question: \"Q201\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"超上級ナンプレ vol.12\",\n            question: \"Q201\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 7, 0, 4, 0, 0, 0],\n          [0, 0, 7, 0, 2, 0, 8, 4, 0],\n          [0, 2, 0, 9, 0, 0, 0, 6, 0],\n          [1, 0, 5, 0, 0, 0, 0, 0, 7],\n          [0, 7, 0, 0, 1, 0, 0, 2, 0],\n          [6, 0, 0, 0, 0, 0, 5, 0, 4],\n          [0, 6, 0, 0, 0, 7, 0, 3, 0],\n          [0, 4, 1, 0, 5, 0, 2, 0, 0],\n          [0, 0, 0, 2, 0, 3, 0, 0, 0]\n        ]\n      },\n      {\n        // // credit: \"ChoJokyu NumPla vol.12 Q202\",\n        // credit: {\n        //   publisher: \"Byakuyashobo\",\n        //   author: \"Akihiko Takise\",\n        //   book: \"ChoJokyu NumPla vol.12\",\n        //   question: \"Q202\"\n        // },\n        credit: {\n          en: {\n            publisher: \"Byakuyashobo\",\n            author: \"Akihiko Takise\",\n            book: \"ChoJokyu NumPla vol.12\",\n            question: \"Q202\"\n          },\n          ja: {\n            publisher: \"白夜書房\",\n            author: \"たきせあきひこ\",\n            book: \"超上級ナンプレ vol.12\",\n            question: \"Q202\"\n          }\n        },\n        matrix: [\n          [0, 2, 0, 0, 0, 9, 5, 0, 0],\n          [5, 8, 0, 0, 0, 0, 0, 4, 0],\n          [0, 0, 0, 0, 4, 0, 8, 0, 1],\n          [0, 0, 0, 1, 0, 8, 0, 0, 7],\n          [0, 0, 3, 0, 0, 0, 6, 0, 0],\n          [6, 0, 0, 3, 0, 7, 0, 0, 0],\n          [4, 0, 1, 0, 7, 0, 0, 0, 0],\n          [0, 6, 0, 0, 0, 0, 0, 3, 2],\n          [0, 0, 5, 4, 0, 0, 0, 1, 0]\n        ]\n      },\n      // {\n      //   credit: \"ChoGekikara Sudoku 4 68\",\n      //   matrix: [\n      //     [0, 4, 0, 0, 0, 8, 0, 0, 5],\n      //     [2, 0, 0, 4, 0, 0, 0, 7, 0],\n      //     [0, 0, 5, 0, 3, 0, 6, 0, 0],\n      //     [0, 7, 0, 0, 0, 5, 0, 0, 8],\n      //     [0, 0, 4, 0, 0, 0, 5, 0, 0],\n      //     [3, 0, 0, 6, 0, 0, 0, 1, 0],\n      //     [0, 0, 9, 0, 6, 0, 1, 0, 0],\n      //     [0, 1, 0, 0, 0, 2, 0, 0, 7],\n      //     [5, 0, 0, 7, 0, 0, 0, 2, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 88\",\n      //   matrix: [\n      //     [5, 0, 0, 0, 0, 0, 0, 0, 6],\n      //     [0, 0, 0, 8, 3, 6, 0, 0, 0],\n      //     [0, 0, 3, 0, 0, 0, 1, 0, 0],\n      //     [0, 7, 0, 5, 0, 2, 0, 4, 0],\n      //     [0, 3, 0, 0, 0, 0, 0, 1, 0],\n      //     [0, 8, 0, 3, 0, 9, 0, 2, 0],\n      //     [0, 0, 9, 0, 0, 0, 5, 0, 0],\n      //     [0, 0, 0, 2, 4, 8, 0, 0, 0],\n      //     [7, 0, 0, 0, 0, 0, 0, 0, 1]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 85\",\n      //   matrix: [\n      //     [2, 0, 0, 0, 3, 4, 0, 0, 0],\n      //     [0, 0, 0, 2, 0, 0, 0, 0, 7],\n      //     [0, 5, 0, 0, 0, 0, 6, 0, 0],\n      //     [0, 3, 0, 0, 0, 0, 8, 0, 0],\n      //     [0, 6, 0, 0, 2, 0, 0, 9, 0],\n      //     [0, 0, 8, 0, 0, 0, 0, 5, 0],\n      //     [0, 0, 5, 0, 0, 0, 0, 8, 0],\n      //     [4, 0, 0, 0, 0, 8, 0, 0, 0],\n      //     [0, 0, 0, 6, 7, 0, 0, 0, 3]\n      //   ]\n      // },\n      // {\n      //   credit: \"Gekikara Sudoku2 20\",\n      //   matrix: [\n      //     [1, 0, 0, 0, 0, 9, 0, 0, 0],\n      //     [0, 2, 0, 7, 0, 0, 4, 0, 3],\n      //     [0, 0, 3, 0, 0, 0, 0, 6, 0],\n      //     [0, 9, 0, 4, 0, 0, 8, 0, 5],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [3, 0, 1, 0, 0, 6, 0, 4, 0],\n      //     [0, 5, 0, 0, 0, 0, 7, 0, 0],\n      //     [6, 0, 2, 0, 0, 4, 0, 8, 0],\n      //     [0, 0, 0, 5, 0, 0, 0, 0, 9]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 37\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 1, 2, 0, 0],\n      //     [0, 0, 9, 6, 0, 0, 0, 3, 0],\n      //     [0, 0, 3, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 5, 3, 0, 0, 0, 6, 0],\n      //     [0, 0, 0, 0, 5, 0, 0, 0, 0],\n      //     [0, 4, 0, 0, 0, 2, 1, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 8, 0, 0],\n      //     [0, 2, 0, 0, 0, 8, 4, 0, 0],\n      //     [0, 0, 6, 9, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 33\",\n      //   matrix: [\n      //     [0, 0, 0, 1, 0, 0, 0, 0, 0],\n      //     [0, 0, 2, 0, 0, 0, 8, 0, 0],\n      //     [0, 6, 0, 0, 0, 8, 4, 9, 0],\n      //     [5, 0, 0, 0, 6, 0, 9, 0, 0],\n      //     [0, 0, 0, 4, 3, 1, 0, 0, 0],\n      //     [0, 0, 1, 0, 2, 0, 0, 0, 3],\n      //     [0, 2, 6, 9, 0, 0, 0, 5, 0],\n      //     [0, 0, 4, 0, 0, 0, 3, 0, 0],\n      //     [0, 0, 0, 0, 0, 6, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 32\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 3, 0, 0, 0, 4],\n      //     [0, 0, 4, 0, 0, 7, 0, 8, 0],\n      //     [0, 6, 5, 1, 0, 0, 0, 0, 0],\n      //     [0, 0, 7, 0, 0, 0, 0, 6, 0],\n      //     [2, 0, 0, 0, 1, 0, 0, 0, 3],\n      //     [0, 4, 0, 0, 0, 0, 9, 0, 0],\n      //     [0, 0, 0, 0, 0, 9, 5, 7, 0],\n      //     [0, 9, 0, 6, 0, 0, 1, 0, 0],\n      //     [8, 0, 0, 0, 2, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 26\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 6, 7, 8, 0],\n      //     [0, 0, 8, 0, 0, 0, 3, 0, 0],\n      //     [0, 2, 0, 4, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 4, 0, 5, 0],\n      //     [0, 0, 3, 0, 0, 0, 1, 0, 0],\n      //     [0, 1, 0, 5, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 8, 0, 4, 0],\n      //     [0, 0, 9, 0, 0, 0, 6, 0, 0],\n      //     [0, 3, 7, 1, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n      // {\n      //   credit: \"ChoGekikara Sudoku4 25\",\n      //   matrix: [\n      //     [0, 0, 3, 0, 0, 9, 0, 0, 4],\n      //     [0, 0, 4, 0, 0, 8, 0, 0, 0],\n      //     [0, 0, 2, 0, 0, 0, 0, 7, 0],\n      //     [0, 0, 0, 0, 7, 0, 0, 6, 0],\n      //     [0, 7, 0, 0, 5, 0, 0, 2, 0],\n      //     [0, 1, 0, 0, 2, 0, 0, 0, 0],\n      //     [0, 8, 0, 0, 0, 0, 1, 0, 0],\n      //     [0, 0, 0, 4, 0, 0, 5, 0, 0],\n      //     [6, 0, 0, 3, 0, 0, 9, 0, 0]\n      //   ]\n      // },\n      {\n        credit: {\n          en: {\n            publisher: \"Nikoli\",\n            author: \"Tanpopo-gumi\",\n            book: \"ChoGekikara Sudoku 4\",\n            question: \"Q90\"\n          },\n          ja: {\n            publisher: \"ニコリ\",\n            author: \"たんぽぽ組\",\n            book: \"超激辛数独 4\",\n            question: \"Q90\"\n          }\n        },\n        matrix: [\n          [0, 0, 0, 6, 0, 8, 0, 4, 0],\n          [7, 0, 0, 1, 0, 4, 0, 0, 9],\n          [0, 0, 4, 0, 9, 0, 7, 0, 0],\n          [1, 9, 0, 0, 0, 0, 0, 7, 6],\n          [0, 0, 7, 0, 0, 0, 5, 0, 0],\n          [6, 4, 0, 0, 0, 0, 0, 3, 1],\n          [0, 0, 8, 0, 1, 0, 6, 0, 0],\n          [4, 0, 0, 8, 0, 6, 0, 0, 7],\n          [0, 2, 0, 5, 0, 7, 0, 0, 0]\n        ]\n      }\n      // {\n      //   credit: \"\",\n      //   matrix: [\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      //     [0, 0, 0, 0, 0, 0, 0, 0, 0]\n      //   ]\n      // },\n    ]\n  };\n\n  // static headerTitle = \"Number Place Helper\";\n\n  static creditTemplate = {\n    en:\n      \"__question__ in __book__ created by __author__ published by __publisher__\",\n    ja: \"__question__  __author__ 作成 (__book__, __publisher__ 出版)\"\n  };\n}\n\nexport default Config;\n","/**\n * Copyright 2012 Akseli Palén.\n * Created 2012-07-15.\n * Licensed under the MIT license.\n *\n * <license>\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files\n * (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software,\n * and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * </lisence>\n *\n * Implements functions to calculate combinations of elements in JS Arrays.\n *\n * Functions:\n *   k_combinations(set, k) -- Return all k-sized combinations in a set\n *   combinations(set) -- Return all combinations of the set\n */\n\n/**\n * K-combinations\n *\n * Get k-sized combinations of elements in a set.\n *\n * Usage:\n *   k_combinations(set, k)\n *\n * Parameters:\n *   set: Array of objects of any type. They are treated as unique.\n *   k: size of combinations to search for.\n *\n * Return:\n *   Array of found combinations, size of a combination is k.\n *\n * Examples:\n *\n *   k_combinations([1, 2, 3], 1)\n *   -> [[1], [2], [3]]\n *\n *   k_combinations([1, 2, 3], 2)\n *   -> [[1,2], [1,3], [2, 3]\n *\n *   k_combinations([1, 2, 3], 3)\n *   -> [[1, 2, 3]]\n *\n *   k_combinations([1, 2, 3], 4)\n *   -> []\n *\n *   k_combinations([1, 2, 3], 0)\n *   -> []\n *\n *   k_combinations([1, 2, 3], -1)\n *   -> []\n *\n *   k_combinations([], 0)\n *   -> []\n */\nfunction k_combinations(set, k) {\n  var i, j, combs, head, tailcombs;\n\n  // There is no way to take e.g. sets of 5 elements from\n  // a set of 4.\n  if (k > set.length || k <= 0) {\n    return [];\n  }\n\n  // K-sized set has only one K-sized subset.\n  if (k === set.length) {\n    return [set];\n  }\n\n  // There is N 1-sized subsets in a N-sized set.\n  if (k === 1) {\n    combs = [];\n    for (i = 0; i < set.length; i++) {\n      combs.push([set[i]]);\n    }\n    return combs;\n  }\n\n  // Assert {1 < k < set.length}\n\n  // Algorithm description:\n  // To get k-combinations of a set, we want to join each element\n  // with all (k-1)-combinations of the other elements. The set of\n  // these k-sized sets would be the desired result. However, as we\n  // represent sets with lists, we need to take duplicates into\n  // account. To avoid producing duplicates and also unnecessary\n  // computing, we use the following approach: each element i\n  // divides the list into three: the preceding elements, the\n  // current element i, and the subsequent elements. For the first\n  // element, the list of preceding elements is empty. For element i,\n  // we compute the (k-1)-computations of the subsequent elements,\n  // join each with the element i, and store the joined to the set of\n  // computed k-combinations. We do not need to take the preceding\n  // elements into account, because they have already been the i:th\n  // element so they are already computed and stored. When the length\n  // of the subsequent list drops below (k-1), we cannot find any\n  // (k-1)-combs, hence the upper limit for the iteration:\n  combs = [];\n  for (i = 0; i < set.length - k + 1; i++) {\n    // head is a list that includes only our current element.\n    head = set.slice(i, i + 1);\n    // We take smaller combinations from the subsequent elements\n    tailcombs = k_combinations(set.slice(i + 1), k - 1);\n    // For each (k-1)-combination we join it with the current\n    // and store it to the set of k-combinations.\n    for (j = 0; j < tailcombs.length; j++) {\n      combs.push(head.concat(tailcombs[j]));\n    }\n  }\n  return combs;\n}\n\n/**\n * Combinations\n *\n * Get all possible combinations of elements in a set.\n *\n * Usage:\n *   combinations(set)\n *\n * Examples:\n *\n *   combinations([1, 2, 3])\n *   -> [[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]]\n *\n *   combinations([1])\n *   -> [[1]]\n */\nfunction combinations(set) {\n  var k, i, combs, k_combs;\n  combs = [];\n\n  // Calculate all non-empty k-combinations\n  for (k = 1; k <= set.length; k++) {\n    k_combs = k_combinations(set, k);\n    for (i = 0; i < k_combs.length; i++) {\n      combs.push(k_combs[i]);\n    }\n  }\n  return combs;\n}\n\nexport { k_combinations, combinations };\n","import Config from \"./Config\";\n// import \"./util/ArrayPermutation\";\nimport { k_combinations } from \"./util/combinations\";\n\nclass Util {\n  // this might be useful for future //\n  // get key of an object from the value //\n  // Object.keys(x).find(key => x[key] === 2)\n\n  static getIndexSequence(N = Config.size) {\n    return Array.from(Array(N).keys());\n  }\n\n  static getRedundantIndexSequence() {\n    let idxSequence = this.getIndexSequence();\n    const redundant = this.getIndexSequence(Config.size - 1);\n    idxSequence = idxSequence.concat(redundant.reverse());\n    return idxSequence;\n  }\n\n  static getNsequence(N = Config.size) {\n    return this.getIndexSequence(N).map(i => i + 1);\n  }\n\n  static getBlockIdByNum(num) {\n    return Config.panelIds.block + num;\n  }\n\n  static getBlockNumFromBlockId(blockId) {\n    return parseInt(blockId.slice(-1));\n  }\n\n  static getBlockIdxFromBlockId(blockId) {\n    return this.getBlockNumFromBlockId(blockId) - 1;\n  }\n\n  static abbreviateBlockId(blockId) {\n    return blockId.slice(0, 1).toUpperCase() + blockId.slice(-1);\n  }\n\n  static initArray(val = null, len = Config.size) {\n    return new Array(len).fill(val);\n  }\n\n  static initMatrix(val = null, len = Config.size) {\n    return this.initArray(val, len).map(val => this.initArray(val, len));\n  }\n\n  static initCube(val = null, len = Config.size) {\n    return this.initArray(val, len).map(val => this.initMatrix(val, len));\n  }\n\n  static initNumPanelMatrix() {\n    const arr = this.getNsequence(Config.size);\n    const numPanelMatrix = [];\n    while (arr.length) numPanelMatrix.push(arr.splice(0, Config.sizeB));\n\n    return numPanelMatrix;\n  }\n\n  static initCellIdx(r = null, c = null) {\n    return { r, c };\n  }\n\n  static initCellInfo(\n    idxs = null,\n    nums = null,\n    status = null,\n    type = null,\n    rcbIdx = null,\n    unionSize = null,\n    isBackward = false\n  ) {\n    if (idxs !== null && idxs.constructor === Array) {\n      if (nums !== null && nums.constructor === Array) {\n        return {\n          idxs,\n          nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      } else {\n        return {\n          idxs: idxs,\n          num: nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      }\n    } else {\n      if (nums !== null && nums.constructor === Array) {\n        return {\n          idx: idxs,\n          nums: nums,\n          status,\n          type,\n          rcbIdx,\n          unionSize,\n          isBackward\n        };\n      }\n    }\n\n    return {\n      idx: idxs,\n      num: nums,\n      status,\n      type,\n      rcbIdx,\n      unionSize,\n      isBackward\n    };\n  }\n\n  static initRegInfo(idx, truth = true) {\n    return { idx, truth };\n  }\n\n  static initMarkerIdx(b = null, rcType = \"\", rc = null, i = null) {\n    return { b, rcType, rc, i };\n  }\n\n  static initMarkerInfo(idx, num = null, status = null) {\n    return { idx, num, status };\n  }\n\n  static initCheckboxArray(multipleNums) {\n    // console.log(\"inside initCheckboxArray\");\n\n    const checkedArray = Util.initArray(false, Config.size + 1);\n    multipleNums.forEach(num => (checkedArray[num] = true));\n\n    return checkedArray;\n  }\n\n  static getContentFromMatrix(matrix, idx) {\n    return matrix[idx.r][idx.c];\n  }\n\n  static getNumFromNumMatrix(numMatrix, idx) {\n    return this.getContentFromMatrix(numMatrix, idx);\n  }\n\n  static getCandidateStatusArray(candidates, idx) {\n    return this.getContentFromMatrix(candidates, idx);\n  }\n\n  static getCandidateStatus(candidates, cellInfo) {\n    if (\"idxs\" in cellInfo) {\n      return cellInfo.idxs.map(\n        idx =>\n          this.getCandidateStatusArray(candidates, idx)[this.n2i(cellInfo.num)]\n      );\n    } else if (\"idx\" in cellInfo) {\n      return this.getCandidateStatusArray(candidates, cellInfo.idx)[\n        this.n2i(cellInfo.num)\n      ];\n    }\n    return null;\n  }\n\n  static getCandidateStatuses(candidates, idx, nums) {\n    const statusArray = this.getCandidateStatusArray(candidates, idx);\n    return nums.map(num => statusArray[this.n2i(num)]);\n  }\n\n  static combineStatuses(targetStatuses) {\n    targetStatuses = targetStatuses.map(status =>\n      this.convertExclusive2Candidates(status)\n    );\n\n    if (targetStatuses.includes(Config.candidateStatus.selected)) {\n      return Config.candidateStatus.selected;\n    } else if (targetStatuses.includes(Config.candidateStatus.selectable)) {\n      return Config.candidateStatus.selectable;\n    } else if (targetStatuses.includes(Config.candidateStatus.candidate)) {\n      return Config.candidateStatus.candidate;\n    }\n\n    return Config.candidateStatus.removed;\n  }\n\n  static getNarrowCandidateNumsFromStatusArray(statusArray) {\n    // console.log(\"inside getNarrowCandidateNumsFromStatusArray\");\n\n    let candidateNums = [];\n\n    for (let [i, status] of statusArray.entries()) {\n      if (this.isNarrowCandidate(status)) {\n        candidateNums.push(this.i2n(i));\n      }\n    }\n\n    return candidateNums;\n  }\n\n  static getNarrowCandidateNumsFromCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n\n    return this.getNarrowCandidateNumsFromStatusArray(statuses);\n  }\n\n  static getCandidateNumMatrix(candidates) {\n    // console.log(\"inside getCandidateMatrix\");\n\n    return candidates.map(row =>\n      row.map(statuses => {\n        return this.getNarrowCandidateNumsFromStatusArray(statuses);\n      })\n    );\n  }\n\n  static getNumsFromCandidateNumMatrix(candidateNumMatrix, idx) {\n    // console.log(\"inside getNumsFromCandidateNumMatrix\");\n\n    return this.getContentFromMatrix(candidateNumMatrix, idx);\n  }\n\n  static countNumsInCandidateNumMatrix(candidateNumMatrix, idx) {\n    // console.log(\"inside countNumsInCandidateNumMatrix\");\n\n    return this.getNumsFromCandidateNumMatrix(candidateNumMatrix, idx).length;\n  }\n\n  static getAllCellIndicies() {\n    const idxArray = this.getIndexSequence();\n\n    let idxs = [];\n\n    for (let r of idxArray) {\n      for (let c of idxArray) {\n        idxs.push(this.initCellIdx(r, c));\n      }\n    }\n    return idxs;\n  }\n\n  static convertCellInfo2MarkerInfo(cellInfo) {\n    // console.log(\"inside convertCellInfo2MarkerInfo\");\n\n    let markerIdx = null;\n    if (this.isExclusiveSingle(cellInfo.status)) {\n      const rcType = this.getFirstLetter(cellInfo.type);\n\n      markerIdx = this.initMarkerIdx(\n        cellInfo.rcbIdx,\n        rcType,\n        cellInfo.idxs[0][rcType]\n      );\n    } else if (this.isExclusiveDoubleOrTriple(cellInfo.status)) {\n      if (cellInfo.type === Config.restrictionTypes.blk) {\n        const rcType = this.isInSameRowCol(cellInfo.idxs);\n\n        if (rcType) {\n          markerIdx = this.initMarkerIdx(\n            cellInfo.rcbIdx,\n            rcType,\n            cellInfo.idxs[0][rcType]\n          );\n        }\n      } else {\n        const blkIdx = this.isInSameBlock(cellInfo.idxs);\n\n        if (typeof blkIdx === \"number\") {\n          markerIdx = this.initMarkerIdx(\n            blkIdx,\n            this.getFirstLetter(cellInfo.type),\n            cellInfo.rcbIdx\n          );\n        }\n      }\n    } else {\n      return null;\n    }\n\n    if (markerIdx === null) {\n      return null;\n    }\n\n    if (cellInfo.num) {\n      return this.initMarkerInfo(markerIdx, cellInfo.num, cellInfo.status);\n    }\n\n    return cellInfo.nums.map(num =>\n      this.initMarkerInfo(markerIdx, num, cellInfo.status)\n    );\n  }\n\n  static initTraceItem(\n    numInfo = null,\n    candInfoArray = [],\n    markerInfoArray = [],\n    operation = Config.operationTypes.manual\n  ) {\n    // // console.log(\"inside initTraceItem\");\n\n    if (candInfoArray && candInfoArray.constructor !== Array) {\n      candInfoArray = [candInfoArray];\n    }\n    if (markerInfoArray && markerInfoArray.constructor !== Array) {\n      markerInfoArray = [markerInfoArray];\n    }\n\n    return {\n      [Config.traceTypes.numMatrix]: numInfo,\n      [Config.traceTypes.candidate]: candInfoArray,\n      [Config.traceTypes.marker]: markerInfoArray,\n      [Config.traceElementTypes.operation]: operation\n    };\n  }\n\n  static initTraceItemNum(\n    numInfo = null,\n    operation = Config.operationTypes.manual\n  ) {\n    return this.initTraceItem(numInfo, null, null, operation);\n  }\n\n  static initTraceItemCandidate(\n    candInfos = null,\n    operation = Config.operationTypes.manual\n  ) {\n    if (candInfos.constructor === Array) {\n      return this.initTraceItem(null, candInfos, null, operation);\n    }\n    return this.initTraceItem(null, [candInfos], null, operation);\n  }\n\n  static initTraceItemMarker(\n    markerInfos = null,\n    operation = Config.operationTypes.manual\n  ) {\n    if (markerInfos.constructor === Array) {\n      return this.initTraceItem(null, null, markerInfos, operation);\n    }\n    return this.initTraceItem(null, null, [markerInfos], operation);\n  }\n\n  static initMarkerNums() {\n    // console.log(\"inside initMarkerNums\");\n\n    const markerNums = this.getIndexSequence().map(blkIdx => {\n      return [\"r\", \"c\"].reduce((idxs, rcType) => {\n        idxs[rcType] = this.getRowColIndicesFromBlockIdx(blkIdx, rcType).reduce(\n          (dic, r) => {\n            dic[r] = {\n              nums: this.initArray(null, Config.sizeB),\n              statuses: this.initArray(null, Config.sizeB)\n            };\n            return dic;\n          },\n          {}\n        );\n        return idxs;\n      }, {});\n    });\n\n    return markerNums;\n  }\n\n  static assignNum2NumMatrix(numMatrix, cellInfo) {\n    const idx = cellInfo.idx;\n    numMatrix[idx.r][idx.c] = cellInfo.num;\n    return numMatrix;\n  }\n\n  static assignTruth2regMatrix(regMatrix, cellInfo) {\n    const idx = cellInfo.idx;\n\n    regMatrix[idx.r][idx.c] = cellInfo.truth;\n    return regMatrix;\n  }\n\n  static assignAppearance(appMatrix, idx, appearance) {\n    appMatrix[idx.r][idx.c] = appearance;\n    return appMatrix;\n  }\n\n  static resetNumMatrix(numMatrix, isRegisteredMatrix) {\n    isRegisteredMatrix.forEach((regRow, r) => {\n      regRow.forEach((isRegistered, c) => {\n        if (!isRegistered) {\n          numMatrix[r][c] = null;\n        }\n      });\n    });\n\n    return numMatrix;\n  }\n\n  static assignStatus2Candidates(candidates, cellInfo, status) {\n    // console.log(\"inside assignCandidates\");\n\n    const idx = cellInfo.idx;\n    const num = cellInfo.num;\n\n    candidates[idx.r][idx.c][Util.n2i(num)] = status;\n\n    return candidates;\n  }\n\n  static assignCandidate2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.candidate\n    );\n  }\n\n  static assignSelected2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.selected\n    );\n  }\n\n  static assignSelectable2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static assignExclusiveSingle2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveSingle\n    );\n  }\n\n  static assignExclusiveDouble2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveDouble\n    );\n  }\n\n  static assignExclusiveTriple2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveTriple\n    );\n  }\n\n  static assignExclusiveQuadruple2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveQuadruple\n    );\n  }\n\n  static assignExclusiveSquare2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.exclusiveSquare\n    );\n  }\n\n  static assignAssumptionTest2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.assumptionTest\n    );\n  }\n\n  static assignRemovable2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.removable\n    );\n  }\n\n  static assignRemoved2Candidates(candidates, cellInfo) {\n    return this.assignStatus2Candidates(\n      candidates,\n      cellInfo,\n      Config.candidateStatus.removed\n    );\n  }\n\n  static assignCandidateStatus4SingleNum(candidates, cellInfo, status) {\n    if (!(\"idxs\" in cellInfo)) {\n      return [candidates, null];\n    }\n\n    cellInfo.prevStatuses = [];\n    for (let idx of cellInfo.idxs) {\n      const cellInfoSub = this.initCellInfo(idx, cellInfo.num);\n\n      cellInfo.prevStatuses.push(\n        this.getCandidateStatus(candidates, cellInfoSub)\n      );\n\n      candidates = this.assignStatus2Candidates(\n        candidates,\n        cellInfoSub,\n        status\n      );\n    }\n\n    return [candidates, cellInfo];\n  }\n\n  static resetCandidateStatuses(candidates) {\n    return candidates.map(row =>\n      row.map(cell =>\n        cell.map(status =>\n          this.isNarrowCandidate(status)\n            ? Config.candidateStatus.candidate\n            : status\n        )\n      )\n    );\n  }\n\n  static getNumInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.numMatrix];\n  }\n\n  static getCandidateInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.candidate];\n  }\n\n  static getMarkerInfoFromTraceItem(traceItem) {\n    return traceItem[Config.traceTypes.marker];\n  }\n\n  static getAllParticularInfosFromTrace(trace, infoType) {\n    let particularTrace = trace.map(traceItem => traceItem[infoType]);\n    particularTrace = particularTrace.filter(\n      particularTraceItem => particularTraceItem\n    );\n\n    if (infoType === Config.traceTypes.numMatrix) {\n      return particularTrace;\n    }\n\n    return this.flattenMatrix2Array(particularTrace);\n  }\n\n  static getAllNumInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(\n      trace,\n      Config.traceTypes.numMatrix\n    );\n  }\n\n  static getAllCandidateInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(\n      trace,\n      Config.traceTypes.candidate\n    );\n  }\n\n  static getAllMarkerInfosFromTrace(trace) {\n    return this.getAllParticularInfosFromTrace(trace, Config.traceTypes.marker);\n  }\n\n  static countNumbers(numMatrix) {\n    let numCounts = this.initArray(0, Config.size + 1);\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      const val = this.getNumFromNumMatrix(numMatrix, idx);\n      if (val) {\n        numCounts[val]++;\n      }\n    }\n\n    return numCounts;\n  }\n\n  static isAllWideSelected(candidates) {\n    // console.log(\"inside isAllWideSelected\");\n\n    return (\n      Config.numCells === this.countWideSelectedCellsInCandidates(candidates)\n    );\n  }\n\n  static countWideSelectedCellsInCandidates(candidates) {\n    // console.log(\"inside countWideSelectInCandidates\");\n\n    const candArray = this.flattenMatrix2Array(candidates);\n\n    const countWideSelected = candArray.reduce(\n      (count, candCell) => count + this.isWideSelectedInStatuses(candCell),\n      0\n    );\n\n    return countWideSelected;\n  }\n\n  static countNumInCandidates(candidates, cellInfos) {\n    const candidateCells = cellInfos.filter(cellInfo =>\n      this.isNarrowCandidate(this.getCandidateStatus(candidates, cellInfo))\n    );\n\n    return candidateCells.length;\n  }\n\n  static countNarrowCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.reduce(\n      (count, status) => count + this.isNarrowCandidate(status),\n      0\n    );\n  }\n\n  static countCandidates(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.reduce(\n      (count, status) => count + this.isCandidate(status),\n      0\n    );\n  }\n\n  static isSingleCandidate(candidates, idx) {\n    return this.countCandidates(candidates, idx) === 1;\n  }\n\n  static getSingleCandidate(candidates, idx) {\n    let candNums = this.getCandidateNums(candidates, idx);\n    if (candNums.length === 1) {\n      return candNums.pop();\n    }\n    return null;\n  }\n\n  static countWideRemoved(candidates, idx) {\n    return this.getCandidateStatusArray(candidates, idx).reduce(\n      (count, status) => count + this.isWideRemoved(status),\n      0\n    );\n  }\n\n  static countManualInputs(trace) {\n    // console.log(\"inside countManualInputs\");\n\n    return trace.filter(\n      traceItem => traceItem.operation === Config.operationTypes.manual\n    ).length;\n  }\n\n  static getSelectableNum(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    if (this.countNarrowCandidates(candidates, idx) === 1) {\n      for (let [i, status] of statuses.entries()) {\n        if (this.isNarrowCandidate(status)) {\n          return this.i2n(i);\n        }\n      }\n    }\n    return null;\n  }\n\n  static getSelectableIdx(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    for (let [i, status] of statuses.entries()) {\n      if (this.isSelectable(status)) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  static isNumInCell(numMatrix, idx) {\n    // console.log(\"inside isNumInCell function in Util.js\");\n\n    if (idx && idx.r !== null && idx.c !== null) {\n      return !!numMatrix[idx.r][idx.c];\n    }\n    return false;\n  }\n\n  static isMarkerAddress(address) {\n    return Util.getFirstLetter(address) === \"B\";\n  }\n\n  static isMarkerIndex(idx) {\n    return typeof idx.b !== \"undefined\";\n  }\n\n  static hasNumInMarker(markerNums, idx) {\n    const nums = this.getNumsFromMarkerNums(markerNums, idx);\n    return nums.length > 0;\n  }\n\n  static isNumInMarker(markerNums, idx) {\n    if (idx && this.isMarkerIndex(idx)) {\n      return !!this.getNumFromMarkerNums(markerNums, idx);\n    }\n    return false;\n  }\n\n  static isTheNumInMarker(markerNums, markerInfo) {\n    // console.log(\"inside isTheNumInMarker\");\n\n    const idx = markerInfo.idx;\n    if (idx && this.isMarkerIndex(idx) && markerInfo.num !== null) {\n      const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n      return nums.includes(markerInfo.num);\n    }\n    return false;\n  }\n\n  static sumArray(ary) {\n    return ary.reduce((a, b) => a + b, 0);\n  }\n\n  static n2i(n) {\n    return n - 1;\n  }\n\n  static i2n(i) {\n    return i + 1;\n  }\n\n  // count cells assigned a number to check all cells are filled with numbers //\n  static countNonZeroCells(numMatrix) {\n    return numMatrix\n      .reduce((a, b) => a.concat(b))\n      .map(a => a > 0)\n      .reduce((a, b) => a + b, 0);\n  }\n\n  // convert elements of a matrix from empty to null //\n  static convEmpty2Null(m) {\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        if (!m[r][c]) {\n          m[r][c] = null;\n        }\n      }\n    }\n    return m;\n  }\n\n  // convert elements of a matrix from zero to null //\n  static convZero2Null(m) {\n    // const allIdxs = this.getAllCellIndicies();\n\n    // for (let idx of allIdxs) {\n    //   const val = this.getNumFromNumMatrix(m, idx);\n    //   if (!val) {\n    //     m = this.assignNum2NumMatrix(m, this.initCellInfo(idx, null));\n    //   }\n    // }\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        // if (!m[r][c] || m[r][c] === 0) {\n        if (!m[r][c]) {\n          m[r][c] = null;\n        }\n      }\n    }\n    return m;\n  }\n\n  static convNull2Zero(m) {\n    for (let r = 0; r < m.length; r++) {\n      for (let c = 0; c < m.length; c++) {\n        // if (!m[r][c] || m[r][c] === null) {\n        if (!m[r][c]) {\n          m[r][c] = 0;\n        }\n      }\n    }\n    return m;\n  }\n\n  static getSampleGameList() {\n    return Config.sampleGameClassList;\n  }\n\n  static getDummyMatrix() {\n    return Config.dummyMatrix;\n  }\n\n  static getSampleGameButtonId(level, i) {\n    return level + \"-\" + this.i2n(i);\n  }\n\n  static getSampleGameButtonLabel(level, i) {\n    return this.getFirstLetter(level).toUpperCase() + this.i2n(i);\n  }\n\n  static getSampleGameButtonTitle(level, i, lang = \"en\") {\n    const classTitle = Config.sampleGameTitles[level][lang];\n    return this.capitalize(this.getSampleGameButtonId(classTitle, i));\n  }\n\n  static getSampleMatrix(levelId) {\n    // console.log(\"inside levelId\");\n\n    const gameInfo = this.getSampleGameInfo(levelId);\n\n    const gameNumMatrix = this.deepCopy(\n      Config.sampleGames[gameInfo.gameClass][gameInfo.idx].matrix\n    );\n\n    return this.convZero2Null(gameNumMatrix);\n  }\n\n  static getSampleGameInfo(levelId) {\n    if (!levelId) {\n      return null;\n    }\n\n    const [gameClass, n] = levelId.split(\"-\");\n    return {\n      gameClass,\n      idx: parseInt(this.n2i(n))\n    };\n  }\n\n  static flipLang(lang) {\n    // console.log(\"inside flipLang\");\n\n    const langs = Object.values(Config.lang);\n    const idx = langs.indexOf(lang);\n\n    return langs[idx ? 0 : 1];\n  }\n\n  static getCredit(crediteInfo, lang) {\n    // console.log(\"inside getCredit\");\n\n    let credit = Config.creditTemplate[lang];\n\n    for (let [key, val] of Object.entries(crediteInfo)) {\n      credit = credit.replace(\"__\" + key + \"__\", val);\n    }\n\n    return credit;\n  }\n\n  // return flags to distinguish originally set numbers for a game //\n  static getRegisteredFlags(numMatrix) {\n    return numMatrix.map(row => row.map(num => num !== null));\n  }\n\n  // return numbers in a block assigned by index (0-8) as an array (obsolete?) //\n  static getNumbersFromBlockIndex(m, blkIndex) {\n    const blockCellIndices = this.getBlkIndicesFromIdx(blkIndex);\n\n    // // should use map function //\n    // let blkNums = [];\n    // blockCellIndices.forEach(idx => {\n    //   // blkNums.push(m[idx.r][idx.c]);\n    //   blkNums.push(this.getNumFromNumMatrix(m, idx));\n    // });\n    // return blkNums;\n\n    return this.getNumbersFromIndices(m, blockCellIndices);\n  }\n\n  // return numbers in a block assigned by number (1-9) as an array (obsolete?) //\n  static getNumbersFromBlockIdx(m, blkIdx) {\n    // return this.getNumbersFromBlockIndex(m, blkNum - 1);\n    return this.getNumbersFromBlockIndex(m, blkIdx);\n  }\n\n  static getNumbersFromBlockNum(m, blkNum) {\n    // return this.getNumbersFromBlockIndex(m, blkNum - 1);\n    // return this.getNumbersFromBlockIndex(m, this.n2i(blkNum));\n    return this.getNumbersFromBlockIdx(m, this.n2i(blkNum));\n  }\n\n  // return numbers of an element assigned by the indices //\n  static getNumbersFromIndices(m, indices) {\n    // console.log(\"inside getNumbersFromIndices\");\n\n    // return indices.map(idx => m[idx.r][idx.c]);\n    return indices.map(idx => this.getNumFromNumMatrix(m, idx));\n  }\n\n  // return cellInfo (number and the index of the matrix) //\n  static getCellInfoArrayFromIndices(numMatrix, cellIndices) {\n    // return cellIndices.map(idx => {\n    //   return {\n    //     idx: idx,\n    //     num: numMatrix[idx.r][idx.c]\n    //   };\n    // });\n\n    return cellIndices.map(idx =>\n      this.initCellInfo(idx, this.getNumFromNumMatrix(numMatrix, idx))\n    );\n  }\n\n  // return numbers in a row as an array (obsolete?) //\n  static getRowNumbers(m, r) {\n    return m[r];\n  }\n\n  // return numbers in a column as an array (obsolete?) //\n  static getColNumbers(m, c) {\n    let colNums = [];\n    for (let r = 0; r < m.length; r++) {\n      colNums.push(m[r][c]);\n    }\n    return colNums;\n  }\n\n  // return cell indices of the assigned row index //\n  static getRowIndicesFromIdx(r) {\n    // console.log(\"inside getCellIndicesFromRowIndex\");\n\n    return this.getIndexSequence(Config.size).map(c => {\n      return this.initCellIdx(r, c);\n    });\n  }\n\n  // return cell indices of the assigned column index //\n  static getColIndicesFromIdx(c) {\n    // console.log(\"inside getCellIndicesFromColIndex\");\n\n    return this.getIndexSequence(Config.size).map(r => {\n      return this.initCellIdx(r, c);\n    });\n  }\n\n  static getRowIndicesFromBlockIdx(blkIdx) {\n    const rowBase = Math.floor(blkIdx / Config.sizeB) * Config.sizeB;\n    return this.getIndexSequence(Config.sizeB).map(i => i + rowBase);\n  }\n\n  static getColIndicesFromBlockIdx(blkIdx) {\n    const colBase = (blkIdx % Config.sizeB) * Config.sizeB;\n    return this.getIndexSequence(Config.sizeB).map(i => i + colBase);\n  }\n\n  static getRowColIndicesFromBlockIdx(blkIdx, rcType) {\n    // console.log(\"inside getRowColIndicesFromBlockIdx\");\n\n    if (rcType === \"r\" || rcType === \"row\") {\n      return this.getRowIndicesFromBlockIdx(blkIdx);\n    }\n    return this.getColIndicesFromBlockIdx(blkIdx);\n  }\n\n  static getCellIdxsFromMarkerIdx(markerIdx) {\n    // console.log(\"inside getCellIdxsFromMarkerIdx\");\n\n    const counterRCs = this.getRowColIndicesFromBlockIdx(\n      markerIdx.b,\n      this.flipRCType(markerIdx.rcType)\n    );\n\n    return counterRCs.map(counterRC =>\n      markerIdx.rcType === \"r\"\n        ? this.initCellIdx(markerIdx.rc, counterRC)\n        : this.initCellIdx(counterRC, markerIdx.rc)\n    );\n  }\n\n  static getRowColWiseBlockIdxSequence(rcType) {\n    const shortIdxArray = this.getIndexSequence(Config.sizeB);\n\n    if (rcType === \"r\") {\n      return shortIdxArray.map(i =>\n        shortIdxArray.map(j => j + Config.sizeB * i)\n      );\n    }\n    return shortIdxArray.map(i => shortIdxArray.map(j => j * Config.sizeB + i));\n  }\n\n  static getBlkIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getCellIndicesFromIdx\");\n\n    const rowIdxs = this.getRowIndicesFromBlockIdx(blkIdx);\n    const colIdxs = this.getColIndicesFromBlockIdx(blkIdx);\n\n    return rowIdxs.reduce(\n      (idxs, r) => idxs.concat(colIdxs.map(c => this.initCellIdx(r, c))),\n      []\n    );\n  }\n\n  static getTargetCellIndicesByMarkerIdx(markerIdx, candidates) {\n    // console.log(\"inside getTargetCellIndicesByMarkerIdx\");\n\n    const idxs = this.getCellIdxsFromMarkerIdx(markerIdx);\n\n    return this.removeWideSelectedCellIdxs(candidates, idxs);\n  }\n\n  static removeWideSelectedCellIdxs(candidates, cellIdxs) {\n    return cellIdxs.filter(idx => !this.isWideSelectedInCell(candidates, idx));\n  }\n\n  static getRelatedCellIndicesByMarkerIdx(markerIdx, candidates) {\n    let cellIndices = this.getBlkIndicesFromIdx(markerIdx.b);\n    const targetCellIndices = cellIndices.filter(\n      idx => idx[markerIdx.rcType] === markerIdx.rc\n    );\n\n    cellIndices = cellIndices.concat(\n      this.getCellIndices(markerIdx.rc, markerIdx.rcType)\n    );\n\n    return cellIndices.filter(\n      idx =>\n        !this.isIdxInDuplicates(targetCellIndices, idx) &&\n        !this.isWideSelectedInCell(candidates, idx)\n    );\n  }\n\n  // return cell indices of the assigned row/column/block index //\n  static getCellIndices(idx, type = \"row\") {\n    // console.log(\"inside getCellIndices with type: \", type);\n\n    let cellIndices = [];\n    switch (type) {\n      case \"r\":\n      case \"row\":\n        cellIndices = this.getRowIndicesFromIdx(idx);\n        break;\n      case \"c\":\n      case \"col\":\n      case \"column\":\n        cellIndices = this.getColIndicesFromIdx(idx);\n        break;\n      case \"b\":\n      case \"blk\":\n      case \"block\":\n        cellIndices = this.getBlkIndicesFromIdx(idx);\n        break;\n      default:\n        break;\n    }\n    return cellIndices;\n  }\n\n  static getAllIndices(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    const indices = {\n      row: this.getRowIndicesFromIdx(idx.r),\n      col: this.getColIndicesFromIdx(idx.c),\n      blk: this.getBlkIndicesFromIdx(blockIdx)\n    };\n    return indices;\n  }\n\n  // return row indices of the assigned block index //\n  static getBlkRowIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getBlkRowIndicesFromIdx\");\n\n    const rowBase = Math.floor(blkIdx / Config.sizeB) * Config.sizeB;\n    let rowIndices = this.getIndexSequence(Config.sizeB);\n\n    return rowIndices.map(r => r + rowBase);\n  }\n\n  // return column indices of the assigned block index //\n  static getBlkColIndicesFromIdx(blkIdx) {\n    // console.log(\"inside getBlkColIndicesFromIdx\");\n\n    const colBase = (blkIdx % Config.sizeB) * Config.sizeB;\n\n    let colIndices = this.getIndexSequence(Config.sizeB);\n    return colIndices.map(c => c + colBase);\n  }\n\n  static getBlkRowColIndicesFromIdx(blkIdx, rcType) {\n    return rcType === \"row\"\n      ? this.getBlkRowIndicesFromIdx(blkIdx)\n      : this.getBlkColIndicesFromIdx(blkIdx);\n  }\n\n  static getCandidateCellIndices(candidates, rcbIdx, type) {\n    let cellIndices = this.getCellIndices(rcbIdx, type);\n    return this.removeSelectCells(candidates, cellIndices);\n  }\n\n  static removeSelectCells(candidates, idxs) {\n    return idxs.filter(idx => !this.isWideSelectedInCell(candidates, idx));\n  }\n\n  static getRelatedIndicesBesidesItself(idx) {\n    // console.log(\"inside getReletedIndicesBesidesItself\");\n\n    const rows2 = this.getRowIndicesWithoutTheIdx(idx);\n    const cols2 = this.getColIndicesWithoutTheIdx(idx);\n    const blks2 = this.getBlockOnlyIndicesFromCellIdx(idx);\n\n    return rows2.concat(cols2).concat(blks2);\n  }\n\n  static getRowIndicesWithoutTheIdx(idx) {\n    const rows = this.getRowIndicesFromIdx(idx.r);\n    rows.splice(idx.c, 1);\n    return rows;\n  }\n\n  static getColIndicesWithoutTheIdx(idx) {\n    const cols = this.getColIndicesFromIdx(idx.c);\n    cols.splice(idx.r, 1);\n    return cols;\n  }\n\n  static getBlockOnlyIndicesFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n    const blks = this.getBlkIndicesFromIdx(blockIdx);\n\n    return blks.filter(bIdx => bIdx.r !== idx.r && bIdx.c !== idx.c);\n  }\n\n  // return cell indices of the assigned block num //\n  static getBlkIndicesFromNum(blkNum) {\n    // return this.getBlkIndicesFromIdx(blkNum - 1, Config.size);\n    return this.getBlkIndicesFromIdx(this.n2i(blkNum), Config.size);\n  }\n\n  static getCellIndicesFromBlockId(blockId) {\n    const nBlock = this.getBlockNumFromBlockId(blockId);\n    return this.getBlkIndicesFromNum(nBlock);\n  }\n\n  static getBlockIdxFromCellIdx(idx) {\n    let blockIdx = Math.floor(idx.r / Config.sizeB) * Config.sizeB;\n    blockIdx += Math.floor(idx.c / Config.sizeB);\n    return blockIdx;\n  }\n\n  static getRelatedIndices4union(candidates, idxs, rcbIdx, rcbType) {\n    // console.log(\"inside getRelatedIndices4union\");\n\n    let cellIndices = this.getCandidateCellIndices(candidates, rcbIdx, rcbType);\n\n    let cellIndicesTmp = [];\n    if (rcbType === \"blk\") {\n      const rcType = this.isInSameRowCol(idxs);\n      if (rcType) {\n        cellIndicesTmp = this.getCandidateCellIndices(\n          candidates,\n          idxs[0][rcType],\n          rcType\n        );\n      }\n    } else {\n      const blkIdx = this.isInSameBlock(idxs);\n\n      if (typeof blkIdx === \"number\") {\n        cellIndicesTmp = this.getCandidateCellIndices(\n          candidates,\n          blkIdx,\n          \"blk\"\n        );\n      }\n    }\n\n    cellIndices = cellIndices.concat(cellIndicesTmp);\n    cellIndices = this.removeDuplicatedIndices(cellIndices);\n\n    // remove the union cells themselves //\n    cellIndices = cellIndices.filter(idx => !this.isIdxInDuplicates(idxs, idx));\n\n    return cellIndices;\n  }\n\n  static getRelatedCellInfo4unionA(candidates, unionCell) {\n    let cellInfos = [];\n\n    let cellIndices = this.getRelatedIndices4union(\n      candidates,\n      unionCell.idxs,\n      unionCell.rcbIdx,\n      unionCell.type\n    );\n\n    for (let idx of cellIndices) {\n      for (let num of unionCell.nums) {\n        const cellInfo = this.initCellInfo(\n          idx,\n          num,\n          Config.candidateStatus.removable\n        );\n        const prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isNarrowCandidate(prevStatus)) {\n          cellInfo.prevStatus = prevStatus;\n          cellInfos.push(cellInfo);\n        }\n      }\n    }\n    return cellInfos;\n  }\n\n  static getRelatedCellInfo4unionB(candidates, unionCell) {\n    let relatedCellInfos = [];\n    const idxArray = this.getIndexSequence();\n\n    if (unionCell.type !== Config.restrictionTypes.block) {\n      return [];\n    }\n\n    for (let rcType of Config.restrictionTypesStraightShortArray) {\n      const counterRCType = this.flipRCType(rcType);\n\n      if (!this.isInSameRowCol(unionCell.idxs, rcType)) {\n        continue;\n      }\n\n      // if (this.isInSameRowCol(unionCell.idxs, rcType)) {\n      const rc = unionCell.idxs[0][rcType];\n\n      for (let counterRC of idxArray) {\n        if (unionCell.idxs.map(idx => idx[counterRCType]).includes(counterRC)) {\n          continue;\n        }\n\n        // if (\n        //   !unionCell.idxs.map(idx => idx[counterRCType]).includes(counterRC)\n        // ) {\n        for (let num of unionCell.nums) {\n          const idx =\n            rcType === Config.restrictionTypesShort.row\n              ? this.initCellIdx(rc, counterRC)\n              : this.initCellIdx(counterRC, rc);\n          const cellInfo = this.initCellInfo(\n            idx,\n            num,\n            Config.candidateStatus.removable\n          );\n          cellInfo.prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n          if (this.isNarrowCandidate(cellInfo.prevStatus)) {\n            relatedCellInfos.push(cellInfo);\n          }\n        }\n        // }\n      }\n      // }\n    }\n\n    return relatedCellInfos;\n  }\n\n  static getRelatedBlockIdxsFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    let blkIdxs = {};\n    for (let rcType of [\"r\", \"c\"]) {\n      const blkSequence = this.getRowColWiseBlockIdxSequence(rcType);\n\n      blkIdxs[rcType] = blkSequence\n        .filter(idxs => idxs.includes(blockIdx))\n        .pop();\n    }\n\n    return blkIdxs;\n  }\n\n  static index2R1C1(idx) {\n    return `R${idx.r + 1}C${idx.c + 1}`;\n  }\n\n  static R1C12Index(r1c1) {\n    return {\n      r: parseInt(r1c1.slice(1, 2)) - 1,\n      c: parseInt(r1c1.slice(3, 4)) - 1\n    };\n  }\n\n  static R1C1N12CellInfo(r1c1n1) {\n    return {\n      idx: this.R1C12Index(r1c1n1.slice(0, 4)),\n      num: parseInt(r1c1n1.slice(5, 6))\n    };\n  }\n\n  static getR1C1FromBlockId(blockId) {\n    const cellIndices = this.getCellIndicesFromBlockId(blockId);\n    const cellIndicesR1C1 = cellIndices.map(i => this.index2R1C1(i));\n\n    return cellIndicesR1C1;\n  }\n\n  static markerId2Idx(markerId) {\n    // console.log(\"inside markerId2Idx\");\n\n    // const b = parseInt(markerId.slice(1, 2)) - 1;\n    // const rc = parseInt(markerId.slice(3, 4)) - 1;\n    // const i = parseInt(markerId.slice(5, 6)) - 1;\n    const b = this.n2i(parseInt(markerId.slice(1, 2)));\n    const rcType = markerId.slice(2, 3).toLowerCase();\n    const rc = this.n2i(parseInt(markerId.slice(3, 4)));\n    const i = this.n2i(parseInt(markerId.slice(5, 6)));\n\n    return this.initMarkerIdx(b, rcType, rc, i);\n  }\n\n  static markerIdx2Id(idx) {\n    return `B${idx.b}${idx.rcType}${idx.rc}I${idx.i + 1}`;\n  }\n\n  static getMarkerIdxsFromCellIdx(idx) {\n    const blockIdx = this.getBlockIdxFromCellIdx(idx);\n\n    return [\"r\", \"c\"].map(rcType =>\n      this.initMarkerIdx(blockIdx, rcType, idx[rcType])\n    );\n  }\n\n  static getCorrespondingCellIdxs2MarkerIdx(markerIdx) {\n    const RCIdxs = Util.getRowColIndicesFromBlockIdx(\n      markerIdx.b,\n      Util.flipRCType(markerIdx.rcType)\n    );\n\n    return RCIdxs.map(rc =>\n      markerIdx.rcType === \"r\"\n        ? Util.initCellIdx(markerIdx.rc, rc)\n        : Util.initCellIdx(rc, markerIdx.rc)\n    );\n  }\n\n  static getRelatedMarkerIdxsFromCellIdx(cellIdx) {\n    // console.log(\"inside getRelatedMarkerIdxsFromCellIdx\");\n\n    const blockSeq = this.getRelatedBlockIdxsFromCellIdx(cellIdx);\n\n    let markerIdxs = [];\n    for (let rcType of Object.keys(blockSeq)) {\n      const blockIdxs = blockSeq[rcType].reduce(\n        (ary, i) => ary.concat(Array(3).fill(i)),\n        []\n      );\n      for (let [rc, b] of blockIdxs.entries()) {\n        markerIdxs.push(this.initMarkerIdx(b, this.flipRCType(rcType), rc));\n      }\n    }\n\n    return markerIdxs;\n  }\n\n  static getNumFromMarkerNums(markerNums, idx) {\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    return nums[idx.i];\n  }\n\n  static getNumsFromMarkerNums(markerNums, idx) {\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    return nums.filter(num => num !== null);\n  }\n\n  static getNumArrayFromMarkerNums(markerNums, idx) {\n    // console.log(\"inside markerNums\");\n\n    const nums = markerNums[idx.b][idx.rcType][idx.rc].nums;\n    return nums;\n  }\n\n  static getInfoArrayFromMarkerNums(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc];\n  }\n\n  static getInfosFromMarkerNums(markerNums, idx) {\n    // console.log(\"inside getInfosFromMarkerNums\");\n\n    const infoArray = this.getInfoArrayFromMarkerNums(markerNums, idx);\n\n    const infos = { nums: [], statuses: [] };\n    for (let [i, num] of infoArray.nums.entries()) {\n      if (num !== null) {\n        infos.nums.push(num);\n        infos.statuses.push(infoArray.statuses[i]);\n      }\n    }\n\n    return infos;\n  }\n\n  static isTheMarkerCellNull(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] === null;\n  }\n\n  static setMarkerNum(markerNums, markerInfo) {\n    // console.log(\"inside setMarkerNum\");\n\n    let idx = markerInfo.idx;\n    let isReset = false;\n\n    if (markerInfo.num < 0) {\n      isReset = true;\n      markerInfo.num = Math.abs(markerInfo.num);\n    }\n\n    if (this.isTheNumInMarker(markerNums, markerInfo)) {\n      idx = this.findNumInMarker(markerNums, markerInfo);\n    } else if (idx.i === null || this.getNumFromMarkerNums(markerNums, idx)) {\n      idx.i = this.getFirstNullIdx(\n        this.getNumArrayFromMarkerNums(markerNums, idx)\n      );\n    }\n\n    if (isReset) {\n      markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] = null;\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = null;\n    } else {\n      markerNums[idx.b][idx.rcType][idx.rc].nums[idx.i] = markerInfo.num;\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = markerInfo.status;\n    }\n\n    markerNums[idx.b][idx.rcType][idx.rc] = this.sortMarkerNums(\n      this.getInfoArrayFromMarkerNums(markerNums, idx)\n    );\n\n    return markerNums;\n  }\n\n  static resetMarker(markerNums, markerInfos) {\n    // console.log(\"inside resetMarker\");\n\n    for (let markerInfo of markerInfos) {\n      let markerInfoArray = [];\n      if (\"nums\" in markerInfo) {\n        for (let [i, num] of markerInfo.nums.entries()) {\n          const targetMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          if (\"prevStatuses\" in markerInfo) {\n            if (num !== markerInfo.num) {\n              targetMarkerInfo.prevStatus = markerInfo.prevStatuses[i];\n            }\n          }\n          markerInfoArray.push(targetMarkerInfo);\n        }\n      } else {\n        markerInfoArray.push(markerInfo);\n      }\n\n      for (let mInfo of markerInfoArray) {\n        if (typeof mInfo.num !== \"number\") {\n          mInfo.num = this.getNumFromMarkerNums(markerNums, mInfo.idx);\n          if (!mInfo.num) {\n            continue;\n          }\n        }\n\n        if (\"prevStatus\" in mInfo) {\n          mInfo = this.initMarkerInfo(mInfo.idx, mInfo.num, mInfo.prevStatus);\n        } else {\n          mInfo = this.initMarkerInfo(mInfo.idx, -mInfo.num, null);\n        }\n\n        markerNums = this.setMarkerNum(markerNums, mInfo);\n      }\n    }\n\n    return [markerNums, markerInfos];\n  }\n\n  static assignMarkerStatusSub(markerNums, mInfo) {\n    const idx = this.findNumInMarker(markerNums, mInfo);\n\n    if (idx !== null) {\n      markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i] = mInfo.status;\n    }\n    return markerNums;\n  }\n\n  static assignMarkerStatus(markerNums, markerInfo) {\n    // console.log(\"inside assignMarkerStatus\");\n\n    if (Object.keys(markerInfo).includes(\"nums\")) {\n      for (let num of markerInfo.nums) {\n        markerInfo.num = num;\n        markerNums = this.assignMarkerStatusSub(markerNums, markerInfo);\n      }\n    } else if (Object.keys(markerInfo).includes(\"num\")) {\n      markerNums = this.assignMarkerStatusSub(markerNums, markerInfo);\n    }\n\n    return markerNums;\n  }\n\n  static assignSelectable2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.selectable;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveSingle2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveSingle;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveDouble2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveDouble;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static assignExclusiveTriple2MarkerNums(markerNums, markerInfo) {\n    markerInfo.status = Config.candidateStatus.exclusiveTriple;\n    return this.assignMarkerStatus(markerNums, markerInfo);\n  }\n\n  static getMarkerStatus(markerNums, idx) {\n    return markerNums[idx.b][idx.rcType][idx.rc].statuses[idx.i];\n  }\n\n  static isMarkerStatusSelectable(markerNums, idx) {\n    return (\n      this.getMarkerStatus(markerNums, idx) ===\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static sortMarkerNums(rcInfo) {\n    // console.log(\"inside sortMarkerNums\");\n\n    let sorted = {\n      nums: [],\n      statuses: []\n    };\n\n    sorted.nums.push(rcInfo.nums.shift());\n    sorted.statuses.push(rcInfo.statuses.shift());\n\n    while (rcInfo.nums.length > 0) {\n      const newNum = rcInfo.nums.shift();\n      const status = rcInfo.statuses.shift();\n      let idx = sorted.nums.length;\n\n      if (newNum !== null) {\n        for (let [i, num] of sorted.nums.entries()) {\n          if (num === null || num > newNum) {\n            idx = i;\n            break;\n          }\n        }\n      }\n\n      sorted.nums.splice(idx, 0, newNum);\n      sorted.statuses.splice(idx, 0, status);\n    }\n\n    return sorted;\n  }\n\n  static findNumInMarker(markerNums, markerInfo) {\n    // console.log(\"inside findNumInMarker\");\n\n    let idx = markerInfo.idx;\n\n    if (markerInfo.num === null) {\n      return idx;\n    }\n\n    const nums = this.getNumArrayFromMarkerNums(markerNums, idx);\n    const i = nums.indexOf(markerInfo.num);\n\n    if (i >= 0) {\n      idx.i = i;\n      return idx;\n    }\n    return null;\n  }\n\n  static flipMarkerStatus(markerStatus) {\n    return markerStatus === Config.buttonStatus.active\n      ? Config.buttonStatus.waiting\n      : Config.buttonStatus.active;\n  }\n\n  static updateMarkerStatus(markerNums, markerInfo, markerTrace, status) {\n    // console.log(\"inside updateMarkerStatus2Selectable\");\n\n    let targetMarkerInfo = this.findPreviousMarkerInfo(\n      markerNums,\n      markerTrace,\n      markerInfo\n    );\n\n    if (targetMarkerInfo) {\n      targetMarkerInfo.prevStatus = targetMarkerInfo.status;\n      targetMarkerInfo.status = status;\n\n      markerNums = this.assignMarkerStatus(markerNums, targetMarkerInfo);\n    }\n\n    return [markerNums, targetMarkerInfo];\n  }\n\n  static updateMarkerStatus2Selectable(markerNums, markerInfo, markerTrace) {\n    // console.log(\"inside updateMarkerStatus2Selectable\");\n\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static updateMarkerStatus2ExDouble(markerNums, markerInfo, markerTrace) {\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.exclusiveDouble\n    );\n  }\n\n  static updateMarkerStatus2ExTriple(markerNums, markerInfo, markerTrace) {\n    return this.updateMarkerStatus(\n      markerNums,\n      markerInfo,\n      markerTrace,\n      Config.candidateStatus.exclusiveTriple\n    );\n  }\n\n  static findPreviousMarkerInfo(markerNums, markerTrace, markerInfo) {\n    if (markerTrace === null || markerTrace.length === 0) {\n      return null;\n    }\n\n    // should rely on newest marker //\n    const revMarkerTrace = markerTrace.reverse();\n    let matchedMarkerInfo = null;\n\n    for (let prevMInfo of revMarkerTrace) {\n      if (this.isMatchTwoMarkers(markerInfo, prevMInfo)) {\n        const idx = this.findNumInMarker(markerNums, prevMInfo);\n\n        if (idx !== null) {\n          matchedMarkerInfo = this.initMarkerInfo(idx, markerInfo.num);\n          matchedMarkerInfo.prevStatus = prevMInfo.status;\n\n          break;\n        }\n      }\n    }\n\n    return matchedMarkerInfo;\n  }\n\n  static getFirstNullIdx(ary) {\n    for (let [i, num] of ary.entries()) {\n      if (num === null) {\n        return i;\n      }\n    }\n    return null;\n  }\n\n  static isAllFilled(numMatrix) {\n    return this.countNonZeroCells(numMatrix) === Config.numCells;\n  }\n\n  static extractRowInfo(m, r) {\n    let rowInfo = [];\n\n    if (\n      m.length === Config.size &&\n      m[r].length === Config.size &&\n      m.length > r\n    ) {\n      m[r].forEach((num, c) => {\n        rowInfo.push(this.initCellInfo(this.initCellIdx(r, c), num));\n      });\n    }\n    return rowInfo;\n  }\n\n  static extractColInfo(m, c) {\n    let colInfo = [];\n\n    if (m.length === this.size && m.length > c) {\n      m.forEach((row, r) => {\n        colInfo.push(this.initCellInfo(this.initCellIdx(r, c), row[c]));\n      });\n    }\n    return colInfo;\n  }\n\n  static extactBlockInfo(m, blkIdx) {\n    let blkInfo = [];\n    const indices = this.getBlkIndicesFromIdx(blkIdx, Config.size);\n\n    if (m.length === Config.size && indices.length === Config.size) {\n      indices.forEach(idx => {\n        blkInfo.push(this.initCellInfo(idx, m[idx.r][idx.c]));\n      });\n    }\n    return blkInfo;\n  }\n\n  static findDuplicatedIndices(numMatrix, cellIndices) {\n    // console.log(\"inside findDuplicatedIndices\");\n\n    let dupCellIndices = [];\n    const cellInfoArray = this.getCellInfoArrayFromIndices(\n      numMatrix,\n      cellIndices\n    );\n    const nulllessCellInfoArray = this.removeNullsFromCellInfo(cellInfoArray);\n\n    nulllessCellInfoArray.sort(function(a, b) {\n      if (a.num > b.num) {\n        return 1;\n      }\n      if (a.num < b.num) {\n        return -1;\n      }\n      return 0;\n    });\n\n    for (var i = 0; i < nulllessCellInfoArray.length - 1; i++) {\n      // if duplicates found //\n      if (nulllessCellInfoArray[i + 1].num === nulllessCellInfoArray[i].num) {\n        // if first time or duplicates for different number from the previous duplicates //\n        if (\n          dupCellIndices.length === 0 ||\n          !this.isTwoIdxsSame(\n            dupCellIndices[dupCellIndices.length - 1],\n            nulllessCellInfoArray[i].idx\n          )\n        ) {\n          dupCellIndices.push(nulllessCellInfoArray[i].idx);\n        }\n        dupCellIndices.push(nulllessCellInfoArray[i + 1].idx);\n      }\n    }\n\n    return dupCellIndices;\n  }\n\n  static checkDuplicate(numMatrix) {\n    var duplicates = [];\n\n    const idxSequence = this.getIndexSequence(Config.size);\n\n    Config.restrictionTypesArray.forEach(type => {\n      idxSequence.forEach(idx => {\n        const cellIndices = this.getCellIndices(idx, type);\n        let dup = this.findDuplicatedIndices(numMatrix, cellIndices);\n\n        if (dup.length > 0) {\n          if (duplicates.length > 0) {\n            dup = dup.filter(\n              dupidx => !this.isIdxInDuplicates(duplicates, dupidx)\n            );\n          }\n          duplicates = duplicates.concat(dup);\n        }\n      });\n    });\n\n    return duplicates;\n  }\n\n  static checkCorrectness(ansMatrix, numMatrix) {\n    // console.log(\"inside checkCorrectness\");\n\n    let wrongIdxs = [];\n    if (ansMatrix === null || this.isMatrixAllNull(ansMatrix)) {\n      return [];\n    }\n\n    const idxArray = this.getIndexSequence();\n    for (let r of idxArray) {\n      for (let c of idxArray) {\n        const idx = this.initCellIdx(r, c);\n        if (\n          !this.isNumCorrect(\n            ansMatrix,\n            this.initCellInfo(idx, this.getNumFromNumMatrix(numMatrix, idx))\n          )\n        ) {\n          wrongIdxs.push(this.initCellIdx(r, c));\n        }\n      }\n    }\n\n    return wrongIdxs;\n  }\n\n  static isNumCorrect(ansMatrix, cellInfo) {\n    const ans = this.getNumFromNumMatrix(ansMatrix, cellInfo.idx);\n    return ans === null || cellInfo.num === null || ans === cellInfo.num;\n  }\n\n  static isMatrixAllNull(m) {\n    const ary = this.flattenMatrix2Array(m);\n    return ary.reduce((isAllNull, elem) => elem === null && isAllNull, true);\n  }\n\n  static isTwoArraysSame(ary1, ary2) {\n    // console.log(\"inside isTwoArraysSame\");\n\n    if (\n      ary1 === null ||\n      ary2 === null ||\n      ary1.length === 0 ||\n      ary1.length !== ary2.length\n    ) {\n      return null;\n    }\n\n    return ary1.reduce((isSame, e1, i) => isSame && e1 === ary2[i], true);\n  }\n\n  static isAllNumbersSame(nums) {\n    if (nums.length < 2) {\n      return false;\n    }\n\n    return this.removeDuplicatedNumbers(nums).length === 1;\n  }\n\n  static isAllStatusesSame(statuses) {\n    if (statuses.length < 2) {\n      return false;\n    }\n\n    const statusList = statuses.reduce(\n      (statusList, status) =>\n        statusList.includes(status) ? statusList : [...statusList, status],\n      []\n    );\n\n    return statusList.length === 1;\n  }\n\n  static isTwoIdxsSame(idx1, idx2) {\n    return JSON.stringify(idx1) === JSON.stringify(idx2);\n  }\n\n  static isTwoIdxSetsSame(idxs1, idxs2) {\n    for (let [i, idx1] of idxs1.entries()) {\n      if (!this.isTwoIdxsSame(idx1, idxs2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isInSameRowCol(idxs, directions = [\"r\", \"c\"]) {\n    for (let rc of directions) {\n      const rcIdxs = idxs.map(idx => idx[rc]);\n      if (this.isAllNumbersSame(rcIdxs)) {\n        // return true;\n        return rc;\n      }\n    }\n    return false;\n  }\n\n  static isInSameBlock(idxs) {\n    const blkIdxs = idxs.map(idx => this.getBlockIdxFromCellIdx(idx));\n    if (this.isAllNumbersSame(blkIdxs)) {\n      return blkIdxs[0];\n    }\n    return false;\n  }\n\n  static isNewPairCell(pairCell, exclusiveCandidates) {\n    for (let exCand of exclusiveCandidates) {\n      if (this.isTwoIdxsSame(pairCell, exCand)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static checkTwoIdxsInSameBlock(idx1, idx2) {\n    const blkIdx1 = this.getBlockIdxFromCellIdx(idx1);\n    const blkIdx2 = this.getBlockIdxFromCellIdx(idx2);\n\n    if (blkIdx1 === blkIdx2) {\n      return blkIdx1;\n    }\n    return -1;\n  }\n\n  static checkIdxsInSameBlock(idxs) {\n    const blkIdxs = idxs.map(idx => this.getBlockIdxFromCellIdx(idx));\n\n    if (this.isAllNumbersSame(blkIdxs)) {\n      return blkIdxs[0];\n    }\n    return -1;\n  }\n\n  static removeDuplicatedNumbers(nums) {\n    // console.log(\"inside removeDuplicatedNumbers\");\n\n    const numsArray = nums.reduce((ary, num) => {\n      ary.includes(num) || ary.push(num);\n      return ary;\n    }, []);\n\n    return numsArray;\n  }\n\n  static removeDuplicatedIndices(idxsArray) {\n    const uniqueIndices = idxsArray.reduce((ary, idx) => {\n      this.isInCellInfoArray(ary, idx) || ary.push(idx);\n      return ary;\n    }, []);\n    return uniqueIndices;\n  }\n\n  static isIdxInDuplicates(duplicates, idx) {\n    return duplicates.filter(didx => this.isTwoIdxsSame(didx, idx)).length > 0;\n  }\n\n  static getIsDuplicatedFromBlockNum(duplicates, blockNum) {\n    const cellIndices = this.getBlkIndicesFromNum(blockNum);\n\n    return this.getIsDuplicatedFromIndices(duplicates, cellIndices);\n  }\n\n  static getIsDuplicatedFromIndices(duplicates, cellIndices) {\n    return cellIndices.map(idx => this.isIdxInDuplicates(duplicates, idx));\n  }\n\n  static getAppearanceMatrixFromNumMatrix(numMatrix) {\n    let appearanceMatrix = this.initMatrix(Config.candidateStatus.candidate);\n\n    const allCellIdxs = this.getAllCellIndicies();\n    for (let idx of allCellIdxs) {\n      const num = this.getNumFromNumMatrix(numMatrix, idx);\n      if (num !== null) {\n        const appearance = this.appendNum(Config.candidateStatus.selected, num);\n\n        appearanceMatrix = this.assignAppearance(\n          appearanceMatrix,\n          idx,\n          appearance\n        );\n      }\n    }\n\n    return appearanceMatrix;\n  }\n\n  static getAppearanceMatrixFromCandidates(\n    candidates,\n    // helpMode,\n    multipleNums,\n    candidateLevel\n  ) {\n    // console.log(\"inside getAppearanceMatrixFromCandidates\");\n\n    // console.log(\"multipleNums\");\n    // console.log(multipleNums);\n\n    let appearanceMatrix = this.initMatrix(Config.candidateStatus.candidate);\n    const removeTypes = Config.wideRemovedList;\n    const allCellIdxs = this.getAllCellIndicies();\n\n    let selected = [];\n    let selectable = [];\n\n    selected = multipleNums.map(num =>\n      this.appendNum(Config.candidateStatus.selected, num)\n    );\n\n    selectable = multipleNums.map(num =>\n      this.appendNum(Config.candidateStatus.selectable, num)\n    );\n\n    for (let idx of allCellIdxs) {\n      const targetStatuses = this.getCandidateStatuses(\n        candidates,\n        idx,\n        multipleNums\n      );\n\n      const combinedStatus = this.combineStatuses(targetStatuses);\n      const i = targetStatuses.indexOf(combinedStatus);\n\n      let appearance = Config.candidateStatus.candidate;\n\n      if (this.isSelected(combinedStatus)) {\n        appearance = selected[i];\n      } else if (this.hasSelected(candidates, idx)) {\n        appearance = Config.candidateStatus.shadowed;\n      } else if (candidateLevel > 0) {\n        if (removeTypes.includes(combinedStatus)) {\n          appearance = Config.candidateStatus.inhibited;\n        } else if (candidateLevel > 1 && this.isSelectable(combinedStatus)) {\n          appearance = selectable[i];\n        }\n      }\n\n      appearanceMatrix = this.assignAppearance(\n        appearanceMatrix,\n        idx,\n        appearance\n      );\n    }\n\n    return appearanceMatrix;\n  }\n\n  static setSingleNumExclusiveCandidatesA(dataset, num, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidatesA\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let candidateTrace = [];\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveMultiples4marker.includes(traceItem.status)\n    );\n\n    const idxSequence = this.getIndexSequence();\n    const expectedLength = this.getUnionSizes(Config.sizeB);\n\n    for (let blkIdx of idxSequence) {\n      const cellIndices = this.getBlkIndicesFromIdx(blkIdx);\n\n      let candidateCells = this.getSingleNumCandidateCells(\n        candidates,\n        num,\n        cellIndices,\n        Config.processTypes.singleNum\n      );\n\n      if (!expectedLength.includes(candidateCells.length)) {\n        continue;\n      }\n\n      const rcType = this.isInSameRowCol(candidateCells);\n\n      if (!rcType) {\n        continue;\n      }\n\n      const direction = this.convertRCType2Direction(rcType);\n\n      let targetCellInfo = this.initCellInfo(\n        candidateCells,\n        num,\n        Config.candidateStatus.exclusiveSingle,\n        direction,\n        blkIdx\n      );\n\n      let markerInfo = null;\n      markerInfo = this.convertCellInfo2MarkerInfo(targetCellInfo);\n\n      if (\n        this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) ||\n        !this.isStatusWorth2Store(prevMarkerTrace, markerInfo)\n      ) {\n        continue;\n      }\n\n      let updateCellIdxs = this.getCandidateCellIndices(\n        candidates,\n        targetCellInfo.idxs[0][rcType],\n        direction\n      );\n\n      updateCellIdxs = this.getSingleNumCandidateCells(\n        candidates,\n        num,\n        updateCellIdxs,\n        Config.processTypes.candidates\n      );\n\n      updateCellIdxs = updateCellIdxs.filter(\n        idx => !this.isIdxInDuplicates(targetCellInfo.idxs, idx)\n      );\n\n      if (isSkipIneffective && updateCellIdxs.length === 0) {\n        continue;\n      }\n\n      [candidates, targetCellInfo] = this.assignCandidateStatus4SingleNum(\n        candidates,\n        targetCellInfo,\n        Config.candidateStatus.exclusiveSingle\n      );\n\n      if (targetCellInfo) {\n        candidateTrace.push(targetCellInfo);\n      }\n\n      let updateCellInfo = this.initCellInfo(\n        updateCellIdxs,\n        num,\n        Config.candidateStatus.removable\n      );\n\n      [candidates, updateCellInfo] = this.assignCandidateStatus4SingleNum(\n        candidates,\n        updateCellInfo,\n        Config.candidateStatus.removable\n      );\n\n      if (this.isCellsAllWideRemoved(candidates, updateCellInfo.idxs)) {\n        return null;\n      }\n\n      if (updateCellInfo) {\n        candidateTrace.push(updateCellInfo);\n      }\n\n      exclusiveCandidates.push(targetCellInfo);\n\n      markerNums = this.setMarkerNum(markerNums, markerInfo);\n\n      trace.push(\n        this.initTraceItem(\n          null,\n          candidateTrace,\n          [markerInfo],\n          Config.operationTypes.auto\n        )\n      );\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3)\n      ) {\n        return dataset;\n      }\n    }\n\n    return dataset;\n  }\n\n  static getSingleNumBTargetIdxs(candidates, num, direction, rcIdx) {\n    let candidateIdxs = this.getSingleNumCandidateCells(\n      candidates,\n      num,\n      this.getCellIndices(rcIdx, direction),\n      Config.processTypes.candidates\n    );\n\n    if (candidateIdxs.length > Config.sizeB) {\n      return [null, null];\n    }\n\n    const blkIdx = this.isInSameBlock(candidateIdxs);\n\n    if (typeof blkIdx !== \"number\") {\n      return [null, null];\n    }\n\n    return [candidateIdxs, blkIdx];\n  }\n\n  static getSingleNumBUntargetIdxs(candidates, num, targetIdxs, blkIdx) {\n    let untargetIdxs = this.getBlkIndicesFromIdx(blkIdx);\n    untargetIdxs = untargetIdxs.filter(\n      idx => !this.isIdxInDuplicates(targetIdxs, idx)\n    );\n    untargetIdxs = this.getSingleNumCandidateCells(\n      candidates,\n      num,\n      untargetIdxs,\n      Config.processTypes.candidates\n    );\n\n    return untargetIdxs;\n  }\n\n  static setSingleNumExclusiveCandidatesB(dataset, num, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidatesB\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    const idxSequence = this.getIndexSequence();\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveMultiples4marker.includes(traceItem.status)\n    );\n\n    let candidateTrace = [];\n\n    for (let direction of Config.restrictionTypesStraightArray) {\n      for (let rc of idxSequence) {\n        let targetIdxs = [];\n        let blkIdx = null;\n        [targetIdxs, blkIdx] = this.getSingleNumBTargetIdxs(\n          candidates,\n          num,\n          direction,\n          rc\n        );\n\n        if (targetIdxs === null) {\n          continue;\n        }\n\n        const untargetIdxs = this.getSingleNumBUntargetIdxs(\n          candidates,\n          num,\n          targetIdxs,\n          blkIdx\n        );\n\n        if (isSkipIneffective && untargetIdxs.length === 0) {\n          continue;\n        }\n\n        let targetCellInfo = this.initCellInfo(\n          targetIdxs,\n          num,\n          Config.candidateStatus.exclusiveSingle,\n          direction,\n          blkIdx\n        );\n\n        const markerInfo = this.convertCellInfo2MarkerInfo(targetCellInfo);\n\n        if (\n          this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) ||\n          !this.isStatusWorth2Store(prevMarkerTrace, markerInfo)\n        ) {\n          continue;\n        }\n\n        [candidates, targetCellInfo] = this.assignCandidateStatus4SingleNum(\n          candidates,\n          targetCellInfo,\n          Config.candidateStatus.exclusiveSingle\n        );\n\n        if (targetCellInfo) {\n          candidateTrace.push(targetCellInfo);\n        }\n\n        let untargetCellInfo = this.initCellInfo(\n          untargetIdxs,\n          num,\n          Config.candidateStatus.removable\n        );\n\n        [candidates, untargetCellInfo] = this.assignCandidateStatus4SingleNum(\n          candidates,\n          untargetCellInfo,\n          Config.candidateStatus.removable\n        );\n\n        if (this.isCellsAllWideRemoved(candidates, untargetCellInfo.idxs)) {\n          return null;\n        }\n\n        if (untargetCellInfo) {\n          candidateTrace.push(untargetCellInfo);\n        }\n\n        exclusiveCandidates.push(targetCellInfo);\n\n        markerNums = this.setMarkerNum(markerNums, markerInfo);\n\n        trace.push(\n          this.initTraceItem(\n            null,\n            candidateTrace,\n            [markerInfo],\n            Config.operationTypes.auto\n          )\n        );\n\n        if (\n          isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3)\n        ) {\n          return dataset;\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static traceBackCandidates(candidates, candInfos) {\n    // console.log(\"inside traceBackCandidates\");\n\n    for (let candInfo of candInfos) {\n      if (\"idxs\" in candInfo) {\n        if (\"prevStatuses\" in candInfo) {\n          for (let [i, idx] of candInfo.idxs.entries()) {\n            const cellInfo = this.initCellInfo(idx, candInfo.num);\n            candidates = this.assignStatus2Candidates(\n              candidates,\n              cellInfo,\n              candInfo.prevStatuses[i]\n            );\n          }\n        } else {\n          continue;\n        }\n      } else if (\"nums\" in candInfo) {\n        if (\"prevStatuses\" in candInfo) {\n          for (let [i, num] of candInfo.nums.entries()) {\n            const cellInfo = this.initCellInfo(candInfo.idx, num);\n            candidates = this.assignStatus2Candidates(\n              candidates,\n              cellInfo,\n              candInfo.prevStatuses[i]\n            );\n          }\n        } else {\n          continue;\n        }\n      } else {\n        candidates = this.assignStatus2Candidates(\n          candidates,\n          candInfo,\n          candInfo.prevStatus\n        );\n      }\n    }\n\n    return candidates;\n  }\n\n  static initDataset() {\n    return {\n      candidates: this.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      markerNums: this.initMarkerNums(),\n      trace: []\n    };\n  }\n\n  static initCandidates(numMatrix, conditions) {\n    // console.log(\"inside initCandidates\");\n\n    let dataset = Util.initDataset();\n    dataset.numMatrix = numMatrix;\n\n    dataset = this.setCandidates(dataset, conditions);\n\n    return dataset;\n  }\n\n  static setCandidates(dataset, conditions) {\n    // console.log(\"inside setCandidates\");\n\n    dataset.traceItems = [];\n\n    let { numMatrix, candidates, exclusiveCandidates } = dataset;\n\n    const {\n      candidateLevel,\n      helpMode,\n      isStepByStep,\n      isSkipLevel1\n      // isMarkerOff\n    } = conditions;\n\n    const processType = helpMode;\n    const maxLoopNum =\n      helpMode === Config.processTypes.singleNum ? 1 : Config.maxLoopNum;\n\n    if (!isSkipLevel1) {\n      candidates = this.setCandidatesLevel1(\n        candidates,\n        numMatrix,\n        candidateLevel\n      );\n    }\n\n    // There is a cell full of wide-removed //\n    if (candidates === null) {\n      return null;\n    }\n\n    if (\n      this.isAllWideSelected(candidates) ||\n      candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.singleCandidate)\n    ) {\n      return dataset;\n    }\n\n    for (let loopNum = 1; loopNum <= maxLoopNum; loopNum++) {\n      let exclusiveCandidateLength = exclusiveCandidates.length;\n\n      dataset = this.setSelectableA(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(\n            Config.candidateTypes.singleCandidate\n          ) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (processType === Config.processTypes.candidates) {\n        dataset = this.setSelectableB(dataset, conditions);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return null;\n        }\n\n        if (\n          this.isAllWideSelected(candidates) ||\n          (isStepByStep &&\n            Config.stepByStepLevels.includes(\n              Config.candidateTypes.singleCandidate\n            ) &&\n            exclusiveCandidates.length > exclusiveCandidateLength)\n        ) {\n          return dataset;\n        }\n      }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.singleExclusive)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n\n        continue;\n      }\n\n      dataset = this.setSingleNumExclusiveCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(\n          Config.candidateTypes.multipleExclusive\n        )\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      dataset = this.setExclusiveUnionA(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      dataset = this.setExclusiveUnionB(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level4) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.square)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      dataset = this.setSquareCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level5) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (\n        candidateLevel <\n        this.getLevelNumFromFunctionName(Config.candidateTypes.assumptionTest)\n      ) {\n        if (exclusiveCandidates.length === exclusiveCandidateLength) {\n          break;\n        }\n        continue;\n      }\n\n      dataset = this.setAssumptionTest(dataset, conditions);\n\n      if (\n        this.isAllWideSelected(candidates) ||\n        (isStepByStep &&\n          Config.stepByStepLevels.includes(Config.candidateLevelTypes.level6) &&\n          exclusiveCandidates.length > exclusiveCandidateLength)\n      ) {\n        return dataset;\n      }\n\n      if (exclusiveCandidates.length === exclusiveCandidateLength) {\n        break;\n      }\n    }\n\n    return dataset;\n  }\n\n  static setCandidatesLevel1(candidates, numMatrix, nLevel = 1) {\n    // console.log(\"inside setCandidatesLevel1\");\n\n    const allCellIdxs = this.getAllCellIndicies();\n\n    for (let idx of allCellIdxs) {\n      const num = this.getNumFromNumMatrix(numMatrix, idx);\n\n      if (num !== null && num > 0 && num <= Config.size) {\n        const targetCellInfo = Util.initCellInfo(idx, num);\n\n        [candidates] = this.updateCandidateOfTheCell(\n          candidates,\n          targetCellInfo\n        );\n\n        if (nLevel > 0) {\n          [candidates] = this.updateRelatedCells(\n            candidates,\n            targetCellInfo,\n            nLevel,\n            Config.processTypes.insertion\n          );\n\n          // There is a cell full of wide-removed //\n          if (candidates === null) {\n            return null;\n          }\n        }\n      }\n    }\n\n    return candidates;\n  }\n\n  static setSelectableA(dataset, conditions) {\n    // console.log(\"inside setSelectableA\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep\n    } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    let candidateTrace = [];\n    let candidateTraceTmp = [];\n\n    const processType = helpMode;\n    const idxSequence = this.getIndexSequence();\n    const numSequence =\n      helpMode === Config.helpMode.singleNum\n        ? [singleNumValue]\n        : this.getNsequence();\n\n    for (let num of numSequence) {\n      for (let type of Config.restrictionTypesArray) {\n        for (let rcbIdx of idxSequence) {\n          const cellIndices = this.getCellIndices(rcbIdx, type);\n\n          let candidateCells = this.getSingleNumCandidateCells(\n            candidates,\n            num,\n            cellIndices,\n            Config.processTypes.singleNum\n          );\n\n          if (candidateCells.length !== 1) {\n            continue;\n          }\n\n          const idx = candidateCells[0];\n\n          const targetCellInfo = this.initCellInfo(\n            idx,\n            num,\n            Config.candidateStatus.selectable\n          );\n\n          if (\n            this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo)\n          ) {\n            continue;\n          }\n\n          // set status of the cell //\n          [candidates, candidateTrace] = this.updateCandidateOfTheCell(\n            candidates,\n            targetCellInfo,\n            processType\n          );\n\n          [candidates, candidateTraceTmp] = this.updateRelatedCells(\n            candidates,\n            targetCellInfo,\n            candidateLevel,\n            processType\n          );\n\n          // There is a cell full of wide-removed //\n          if (candidates === null) {\n            return null;\n          }\n\n          candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n          let markerTrace = [];\n          const markerIdxs = this.getMarkerIdxsFromCellIdx(targetCellInfo.idx);\n\n          for (let markerIdx of markerIdxs) {\n            let markerTraceTmp = null;\n            let targetMarkerInfo = this.initMarkerInfo(\n              markerIdx,\n              targetCellInfo.num\n            );\n\n            [markerNums, markerTraceTmp] = this.updateMarkerStatus2Selectable(\n              markerNums,\n              targetMarkerInfo,\n              prevMarkerTrace\n            );\n\n            if (markerTraceTmp) {\n              markerTrace.push(markerTraceTmp);\n            }\n          }\n\n          if (markerTrace.length === 0) {\n            trace.push(\n              this.initTraceItemCandidate(\n                candidateTrace,\n                Config.operationTypes.auto\n              )\n            );\n          } else {\n            trace.push(\n              this.initTraceItem(\n                null,\n                candidateTrace,\n                markerTrace,\n                Config.operationTypes.auto\n              )\n            );\n          }\n\n          exclusiveCandidates.push(targetCellInfo);\n\n          if (\n            isStepByStep &&\n            Config.stepByStepLevels.includes(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            return dataset;\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static setSelectableB(dataset, conditions) {\n    // console.log(\"inside setSelectableB\");\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    const { candidateLevel, helpMode, isStepByStep } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const processType = Config.processTypes.candidates;\n    let selectableCells = [];\n\n    selectableCells = this.findSingleCandidateCellsB(\n      candidates,\n      exclusiveCandidates,\n      helpMode,\n      isStepByStep\n    );\n\n    for (let cellInfo of selectableCells) {\n      let candidateTrace = [];\n      let candidateTraceTmp = [];\n\n      if (this.isInExclusiveCandidates(exclusiveCandidates, cellInfo)) {\n        continue;\n      }\n\n      [candidates, candidateTraceTmp] = this.updateCandidateOfTheCell(\n        candidates,\n        cellInfo,\n        processType\n      );\n\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n      [candidates, candidateTraceTmp] = this.updateRelatedCells(\n        candidates,\n        cellInfo,\n        candidateLevel,\n        processType\n      );\n\n      // There is a cell full of wide-removed //\n      if (candidates === null) {\n        return null;\n      }\n\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n\n      let markerTrace = [];\n\n      const markerIdxs = this.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n      for (let markerIdx of markerIdxs) {\n        let markerTraceTmp = null;\n        let targetMarkerInfo = this.initMarkerInfo(markerIdx, cellInfo.num);\n\n        [markerNums, markerTraceTmp] = this.updateMarkerStatus2Selectable(\n          markerNums,\n          targetMarkerInfo,\n          prevMarkerTrace\n        );\n\n        if (markerTraceTmp) {\n          markerTrace.push(markerTraceTmp);\n        }\n      }\n\n      if (markerTrace.length === 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      } else {\n        trace.push(\n          this.initTraceItem(\n            null,\n            candidateTrace,\n            markerTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n\n      exclusiveCandidates.push(cellInfo);\n    }\n\n    return dataset;\n  }\n\n  static setSingleNumExclusiveCandidates(dataset, conditions) {\n    // console.log(\"inside setSingleNumExclusiveCandidates\");\n\n    let { exclusiveCandidates } = dataset;\n\n    const { singleNumValue, isStepByStep } = conditions;\n\n    const exclusiveCandidateLength = exclusiveCandidates.length;\n\n    let numSequence = this.getNsequence();\n    if (singleNumValue) {\n      numSequence = [singleNumValue];\n    }\n\n    for (let num of numSequence) {\n      dataset = this.setSingleNumExclusiveCandidatesA(dataset, num, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n        exclusiveCandidates.length > exclusiveCandidateLength\n      ) {\n        return dataset;\n      }\n\n      dataset = this.setSingleNumExclusiveCandidatesB(dataset, num, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateLevelTypes.level3) &&\n        exclusiveCandidates.length > exclusiveCandidateLength\n      ) {\n        return dataset;\n      }\n    }\n\n    return dataset;\n  }\n\n  static setExclusiveUnionA(dataset, conditions) {\n    // console.log(\"inside setExclusiveUnionA\");\n\n    // union size 2 finds 2 cells with the same two candidates //\n    // such as [5, 7] and [5, 7] from cells with 2 remaining candidates //\n    // union size 3 finds 3 cells with three candidates //\n    // such as [1, 4, 8], [1, 4], [4, 8] from cells with 2 or 3 remaining candidates //\n\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    // const { isStepByStep, isSkipIneffective, isMarkerOff } = conditions;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const idxArray = this.getIndexSequence();\n    const unionSizes = this.getUnionSizes();\n\n    const candNumMatrix = this.getCandidateNumMatrix(candidates);\n\n    let candidateTrace = [];\n\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        const cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        const cellIndicesLength = cellIndices.length;\n\n        for (let unionSize of unionSizes) {\n          const conditions = {\n            type,\n            rcbIdx,\n            unionSize\n          };\n\n          const candLengths = this.getUnionSizes(unionSize);\n\n          // let candidateCellIndices = cellIndices.filter(idx => {\n          //   return candLengths.includes(\n          //     this.countNumsInCandidateNumMatrix(candNumMatrix, idx)\n          //   );\n          // });\n\n          let candidateCellIndices = cellIndices.filter(idx =>\n            candLengths.includes(\n              this.countNumsInCandidateNumMatrix(candNumMatrix, idx)\n            )\n          );\n\n          if (\n            cellIndicesLength < candidateCellIndices.length + 2 ||\n            candidateCellIndices.length < unionSize\n          ) {\n            continue;\n          }\n\n          //   if (\n          //   cellIndicesLength >= candidateCellIndices.length + 2 &&\n          //   candidateCellIndices.length >= unionSize\n          // ) {\n\n          // let cellInfoArray = candidateCellIndices.map(idx => {\n          //   return this.initCellInfo(\n          //     idx,\n          //     this.getNumsFromCandidateNumMatrix(candNumMatrix, idx)\n          //   );\n          // });\n\n          let cellInfoArray = candidateCellIndices.map(idx =>\n            this.initCellInfo(\n              idx,\n              this.getNumsFromCandidateNumMatrix(candNumMatrix, idx)\n            )\n          );\n\n          const unionCells = this.findExclusiveUnionA(\n            cellInfoArray,\n            conditions\n          );\n\n          // unacceptable condition //\n          if (unionCells === null) {\n            console.log(\"findExclusiveUnionA found an illegal condtion.\");\n            return null;\n          }\n\n          for (let unionCell of unionCells) {\n            if (\n              this.isInCellInfoArrayIgnoringRCBInfo(\n                exclusiveCandidates,\n                unionCell\n              )\n            ) {\n              continue;\n            }\n\n            // if (\n            //   !this.isInCellInfoArrayIgnoringRCBInfo(\n            //     exclusiveCandidates,\n            //     unionCell\n            //   )\n            // ) {\n            [candidates, candidateTrace] = this.updateCandidates4UnionA(\n              candidates,\n              unionCell,\n              isSkipIneffective\n            );\n\n            // a cell with no candidates //\n            if (candidates === null) {\n              return null;\n            }\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            exclusiveCandidates.push(unionCell);\n\n            // if (typeof isMarkerOff !== \"undefined\" || !isMarkerOff) {\n            const markerInfos = this.convertCellInfo2MarkerInfo(unionCell);\n\n            let markerTrace = [];\n            if (markerInfos && markerInfos.constructor === Array) {\n              for (let markerInfo of markerInfos) {\n                let targetMarkerInfo = this.findPreviousMarkerInfo(\n                  markerNums,\n                  prevMarkerTrace,\n                  markerInfo\n                );\n\n                if (targetMarkerInfo) {\n                  let markerTraceTmp = null;\n                  [markerNums, markerTraceTmp] = this.updateMarkerStatus(\n                    markerNums,\n                    markerInfo,\n                    prevMarkerTrace,\n                    unionCell.status\n                  );\n\n                  if (markerTraceTmp) {\n                    markerTrace.push(markerTraceTmp);\n                  }\n                } else {\n                  markerNums = this.setMarkerNum(markerNums, markerInfo);\n                  markerTrace.push(markerInfo);\n                }\n              }\n            }\n\n            if (markerTrace.length === 0) {\n              trace.push(\n                this.initTraceItemCandidate(\n                  candidateTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            } else {\n              trace.push(\n                this.initTraceItem(\n                  null,\n                  candidateTrace,\n                  markerTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            }\n            // }\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              )\n            ) {\n              return dataset;\n            }\n            // }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static findExclusiveUnionA(cellInfoArray, conditions) {\n    // console.log(\"inside findExclusiveUnionA\");\n\n    let unionCells = [];\n    const candIdxArray = this.getIndexSequence(cellInfoArray.length);\n\n    for (let unionIdxs of k_combinations(candIdxArray, conditions.unionSize)) {\n      const idxs = unionIdxs.map(i => cellInfoArray[i].idx);\n\n      if (\n        conditions.type === Config.restrictionTypes.blk &&\n        this.isInSameRowCol(idxs)\n      ) {\n        continue;\n      }\n      const numsUnion = this.getUnionNumbers(\n        unionIdxs.map(i => cellInfoArray[i].nums)\n      );\n\n      if (numsUnion.length === conditions.unionSize) {\n        const unionCell = this.initCellInfo(\n          idxs,\n          numsUnion,\n          Config.wideExclusiveStatuses[conditions.unionSize],\n          conditions.type,\n          conditions.rcbIdx,\n          conditions.unionSize\n        );\n\n        unionCells.push(unionCell);\n      } else if (numsUnion.length < conditions.unionSize) {\n        // this should not exist. something wrong //\n        return null;\n      }\n    }\n    return unionCells;\n  }\n\n  static setExclusiveUnionB(dataset, conditions) {\n    // console.log(\"inside setExclusiveUnionB\");\n\n    // pair/triple/quadruple type B //\n    let { candidates, exclusiveCandidates, markerNums, trace } = dataset;\n\n    // const { isStepByStep, isSkipIneffective, isMarkerOff } = conditions;\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let prevMarkerTrace = this.getAllMarkerInfosFromTrace(trace);\n    prevMarkerTrace = prevMarkerTrace.filter(traceItem =>\n      Config.exclusiveTypes4marker.includes(traceItem.status)\n    );\n\n    const idxArray = this.getIndexSequence();\n    const numArray = this.getNsequence();\n    const unionSizes = this.getUnionSizes();\n\n    let candidateTrace = [];\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        let cellInfos = [];\n        const cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        // collect cellInfos for candidates //\n        for (let num of numArray) {\n          const cellInfo = this.extractCellInfoFromCandidate(\n            candidates,\n            num,\n            cellIndices\n          );\n\n          if (cellInfo !== null) {\n            cellInfos.push(cellInfo);\n          }\n        }\n\n        const cellLength = cellInfos.length;\n        if (cellLength === 0) {\n          continue;\n        }\n\n        for (let unionSize of unionSizes) {\n          if (cellLength < unionSize + 2) {\n            continue;\n          }\n\n          const conditions = {\n            type,\n            rcbIdx,\n            unionSize\n          };\n\n          let unionCellArrayB = this.findExclusiveUnionB(cellInfos, conditions);\n\n          // console.log(\"unionCellArrayB\");\n          // console.log(unionCellArrayB);\n\n          for (let unionCellB of unionCellArrayB) {\n            if (\n              this.isInCellInfoArrayIgnoringRCBInfo(\n                exclusiveCandidates,\n                unionCellB\n              )\n            ) {\n              continue;\n            }\n\n            // if (\n            //   !this.isInCellInfoArrayIgnoringRCBInfo(\n            //     exclusiveCandidates,\n            //     unionCellB\n            //   )\n            // ) {\n\n            [candidates, candidateTrace] = this.updateCandidates4UnionB(\n              candidates,\n              unionCellB,\n              isSkipIneffective\n            );\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            exclusiveCandidates.push(unionCellB);\n\n            // if (typeof isMarkerOff !== \"undefined\" || !isMarkerOff) {\n            const markerInfos = this.convertCellInfo2MarkerInfo(unionCellB);\n\n            let markerTrace = [];\n            if (markerInfos && markerInfos.constructor === Array) {\n              for (let markerInfo of markerInfos) {\n                let targetMarkerInfo = this.findPreviousMarkerInfo(\n                  markerNums,\n                  prevMarkerTrace,\n                  markerInfo\n                );\n\n                if (targetMarkerInfo) {\n                  let markerTraceTmp = null;\n                  [markerNums, markerTraceTmp] = this.updateMarkerStatus(\n                    markerNums,\n                    markerInfo,\n                    prevMarkerTrace,\n                    unionCellB.status\n                  );\n\n                  if (markerTraceTmp) {\n                    markerTrace.push(markerTraceTmp);\n                  }\n                } else {\n                  markerNums = this.setMarkerNum(markerNums, markerInfo);\n                  markerTrace.push(markerInfo);\n                }\n              }\n            }\n\n            if (markerTrace.length === 0) {\n              trace.push(\n                this.initTraceItemCandidate(\n                  candidateTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            } else {\n              trace.push(\n                this.initTraceItem(\n                  null,\n                  candidateTrace,\n                  markerTrace,\n                  Config.operationTypes.auto\n                )\n              );\n            }\n            // }\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level4\n              )\n            ) {\n              return dataset;\n            }\n            // }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static findExclusiveUnionB(cellInfos, conditions) {\n    // console.log(\"inside findExclusiveUnionB\");\n\n    const unionSizes = this.getUnionSizes(conditions.unionSize);\n    let unionCellArrayB = [];\n    let targetCellInfos = cellInfos.filter(cellInfo =>\n      unionSizes.includes(cellInfo.idxs.length)\n    );\n    const candIdxArray = this.getIndexSequence(targetCellInfos.length);\n\n    for (let unionIdxs of k_combinations(candIdxArray, conditions.unionSize)) {\n      const idxsArray = unionIdxs.map(i => targetCellInfos[i].idxs);\n      const idxsUnion = this.getUnionIndices(idxsArray);\n\n      if (idxsUnion.length === conditions.unionSize) {\n        const unionCell = this.initCellInfo(\n          idxsUnion,\n          unionIdxs.map(i => targetCellInfos[i].num),\n          Config.wideExclusiveStatuses[conditions.unionSize],\n          conditions.type,\n          conditions.rcbIdx,\n          conditions.unionSize\n        );\n\n        unionCellArrayB.push(unionCell);\n      }\n    }\n\n    return unionCellArrayB;\n  }\n\n  static setSquareCandidates(dataset, conditions) {\n    // console.log(\"inside setSquareCandidates\");\n\n    let { candidates, exclusiveCandidates, trace } = dataset;\n\n    const { isStepByStep, isSkipIneffective } = conditions;\n\n    let candidateTrace = [];\n    let squareNums = this.getUnionSizes(Config.maxSquareNum);\n    const numArray = this.getNsequence();\n\n    for (let rowcol of Config.restrictionTypesStraightArray) {\n      // const counterDirection = this.flipRowCol(rowcol);\n      // const counterRC = this.getFirstLetter(counterDirection);\n\n      for (let num of numArray) {\n        const exclusiveSquareCandidates = exclusiveCandidates.filter(\n          exCand => this.isExclusiveSquare(exCand.status) && num === exCand.num\n        );\n\n        for (let squareNum of squareNums) {\n          const targetCellInfos = this.getSquareTargetCells(\n            candidates,\n            rowcol,\n            num,\n            squareNum\n          );\n\n          const squareCellInfoArray = this.findSquareCells(\n            targetCellInfos,\n            rowcol,\n            squareNum\n          );\n\n          for (let squareCellInfo of squareCellInfoArray) {\n            if (\n              this.isInExclusiveSquareCandidates(\n                exclusiveSquareCandidates,\n                squareCellInfo\n              )\n            ) {\n              continue;\n            }\n\n            [candidates, candidateTrace] = this.updateCandidates4Square(\n              candidates,\n              squareCellInfo,\n              rowcol,\n              isSkipIneffective\n            );\n\n            if (candidateTrace.length === 0) {\n              continue;\n            }\n\n            // if (candidateTrace.length > 0) {\n            exclusiveCandidates.push(squareCellInfo);\n\n            trace.push(\n              this.initTraceItemCandidate(\n                candidateTrace,\n                Config.operationTypes.auto\n              )\n            );\n\n            if (\n              isStepByStep &&\n              Config.stepByStepLevels.includes(\n                Config.candidateLevelTypes.level5\n              )\n            ) {\n              return dataset;\n            }\n            // }\n          }\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  static getSquareTargetCells(candidates, rowcol, num, squareNum) {\n    const indexArray = this.getIndexSequence();\n    const squareNums = this.getUnionSizes(squareNum);\n\n    let targetCellInfos = [];\n\n    for (let iRC of indexArray) {\n      let cellIndices = this.getCandidateCellIndices(candidates, iRC, rowcol);\n\n      cellIndices = cellIndices.filter(idx =>\n        this.isNarrowCandidate(\n          this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n        )\n      );\n\n      if (squareNums.includes(cellIndices.length)) {\n        targetCellInfos.push(this.initCellInfo(cellIndices, num));\n      }\n    }\n\n    return targetCellInfos;\n  }\n\n  static findSquareCells(targetCellInfos, rowcol, squareNum) {\n    // console.log(\"inside findSquareCells\");\n\n    if (targetCellInfos.length < squareNum) {\n      return [];\n    }\n\n    let squareCellInfos = [];\n    const counterRC = this.getFirstLetter(this.flipRowCol(rowcol));\n    const num = targetCellInfos[0].num;\n    const candIdxArray = this.getIndexSequence(targetCellInfos.length);\n\n    for (let iSet of k_combinations(candIdxArray, squareNum)) {\n      const candidateRCIdxsArray = iSet.map(i =>\n        targetCellInfos[i].idxs.map(idx => idx[counterRC])\n      );\n\n      const unionRCIdxs = this.getUnionNumbers(candidateRCIdxsArray);\n\n      if (unionRCIdxs.length === squareNum) {\n        const squareCellInfo = {\n          status: Config.candidateStatus.exclusiveSquare,\n          num,\n          idxsArray: iSet.map(i => targetCellInfos[i].idxs),\n          rowcol: rowcol\n        };\n\n        squareCellInfos.push(squareCellInfo);\n      }\n    }\n\n    return squareCellInfos;\n  }\n\n  static setAssumptionTest(dataset, conditions) {\n    // console.log(\"inside setAssaumptionTest\");\n\n    let { candidates, exclusiveCandidates, trace } = dataset;\n\n    const { isStepByStep } = conditions;\n\n    let candidateTrace = [];\n    let targetCellInfoSets = this.findAssumptionTest(dataset);\n\n    for (let targetCellInfoSet of targetCellInfoSets) {\n      if (\n        this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfoSet)\n      ) {\n        continue;\n      }\n\n      // if (\n      //   !this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfoSet)\n      // ) {\n\n      for (let [i, cellInfo] of targetCellInfoSet.cellInfos.entries()) {\n        cellInfo.prevStatuses = [];\n        cellInfo.statuses = [];\n\n        for (let num of cellInfo.nums) {\n          const cInfo = this.initCellInfo(cellInfo.idx, num);\n          cellInfo.prevStatuses.push(\n            this.getCandidateStatus(candidates, cInfo)\n          );\n\n          if (i === 0 && num === targetCellInfoSet.inhibitedNum) {\n            cellInfo.statuses.push(Config.candidateStatus.removable);\n\n            candidates = this.assignRemovable2Candidates(candidates, cInfo);\n          } else {\n            cellInfo.statuses.push(Config.candidateStatus.assumptionTest);\n\n            candidates = this.assignAssumptionTest2Candidates(\n              candidates,\n              cInfo\n            );\n          }\n        }\n\n        candidateTrace.push(cellInfo);\n      }\n\n      exclusiveCandidates.push(targetCellInfoSet);\n\n      if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n\n      if (\n        isStepByStep &&\n        Config.stepByStepLevels.includes(Config.candidateTypes.assumptionTest)\n      ) {\n        return dataset;\n      }\n      // }\n    }\n\n    return dataset;\n  }\n\n  static findAssumptionTest(dataset) {\n    // console.log(\"inside findAssumptionTest\");\n\n    let { candidates } = dataset;\n    let idxs = this.getAllCellIndicies();\n    let targetCellInfos = [];\n\n    idxs = idxs.filter(\n      idx =>\n        !this.isWideSelectedInCell(candidates, idx) &&\n        this.countNarrowCandidates(candidates, idx) === 2\n    );\n\n    let cellInfos = idxs.map(idx =>\n      this.initCellInfo(idx, this.getNarrowCandidateNums(candidates, idx))\n    );\n\n    let rectangles = this.getRectangleSet(cellInfos);\n\n    for (let rectangle of rectangles) {\n      const targetCellInfo = this.getAssumptionTestCellInfo(rectangle);\n      if (targetCellInfo) {\n        targetCellInfos.push(targetCellInfo);\n      }\n    }\n\n    return targetCellInfos;\n  }\n\n  static getRectangleSet(cellInfos) {\n    let rectangleSet = [];\n\n    while (cellInfos.length >= 4) {\n      const pivotCellInfo = cellInfos.shift();\n\n      let rowMemberCellInfos = cellInfos.filter(\n        cellInfo => pivotCellInfo.idx.r === cellInfo.idx.r\n      );\n\n      let colMemberCellInfos = cellInfos.filter(\n        cellInfo => pivotCellInfo.idx.c === cellInfo.idx.c\n      );\n\n      for (let rowCell of rowMemberCellInfos) {\n        for (let colCell of colMemberCellInfos) {\n          let oppositeCellInfos = cellInfos.filter(\n            cellInfo =>\n              rowCell.idx.c === cellInfo.idx.c &&\n              colCell.idx.r === cellInfo.idx.r\n          );\n\n          if (oppositeCellInfos.length === 1) {\n            rectangleSet.push([\n              [pivotCellInfo, oppositeCellInfos.pop()],\n              [rowCell, colCell]\n            ]);\n          }\n        }\n      }\n    }\n\n    return rectangleSet;\n  }\n\n  static getAssumptionTestCellInfo(rectangleCellInfos) {\n    for (let [i, aPair] of rectangleCellInfos.entries()) {\n      const counterPair = rectangleCellInfos[i === 0 ? 1 : 0];\n\n      for (let [j, pivotCell] of aPair.entries()) {\n        const oppositeCell = aPair[j === 0 ? 1 : 0];\n\n        for (let pNum of pivotCell.nums) {\n          if (\n            !(\n              counterPair[0].nums.includes(pNum) &&\n              counterPair[1].nums.includes(pNum)\n            )\n          ) {\n            continue;\n          }\n\n          const counterNums = counterPair.map(cell =>\n            cell.nums.filter(num => num !== pNum).pop()\n          );\n\n          if (this.isTwoArraysSame(oppositeCell.nums, counterNums)) {\n            return {\n              cellInfos: [pivotCell, oppositeCell, ...counterPair],\n              inhibitedNum: pNum,\n              status: Config.candidateStatus.assumptionTest\n            };\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  static isStatusWorth2Store(markerTrace, markerInfo) {\n    // console.log(\"inside isStatusWorth2Store\");\n\n    for (let markerTraceItem of markerTrace) {\n      if (this.isMatchTwoMarkers(markerTraceItem, markerInfo)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  static isMatchTwoMarkers(markerInfoA, markerInfoB) {\n    return (\n      markerInfoA.num === markerInfoB.num &&\n      markerInfoA.idx.b === markerInfoB.idx.b &&\n      markerInfoA.idx.rcType === markerInfoB.idx.rcType &&\n      markerInfoA.idx.rc === markerInfoB.idx.rc\n    );\n  }\n\n  static selectSelectables(dataset) {\n    // console.log(\"inside selectSelectables\");\n\n    let { numMatrix, candidates, markerNums, trace } = dataset;\n\n    const targetTrace = this.getTraceItemsWithSelectables(trace);\n\n    for (let targetTraceItem of targetTrace) {\n      let numTrace = null;\n      let candidateTrace = [];\n      let markerTrace = [];\n\n      for (let cellInfo of targetTraceItem.candidate) {\n        const newCellInfo = this.deepCopy(cellInfo);\n\n        if (\n          this.isSelectableCellInfo(newCellInfo) &&\n          this.isSelectable(this.getCandidateStatus(candidates, newCellInfo))\n        ) {\n          newCellInfo.prevStatus = Config.candidateStatus.selectable;\n          newCellInfo.status = Config.candidateStatus.selected;\n\n          numMatrix = this.assignNum2NumMatrix(numMatrix, newCellInfo);\n          numTrace = newCellInfo;\n\n          candidates = this.assignSelected2Candidates(candidates, newCellInfo);\n\n          const markerIdxs = Util.getMarkerIdxsFromCellIdx(newCellInfo.idx);\n\n          for (let markerIdx of markerIdxs) {\n            const markerInfo = Util.initMarkerInfo(markerIdx, newCellInfo.num);\n            let markerInfos4Trace = [];\n\n            if (Util.isTheNumInMarker(markerNums, markerInfo)) {\n              [markerNums, markerInfos4Trace] = Util.resetMarker(markerNums, [\n                markerInfo\n              ]);\n            }\n\n            markerTrace = markerTrace.concat(markerInfos4Trace);\n          }\n\n          candidateTrace.push(newCellInfo);\n        } else if (this.isRemovableCellInfo(newCellInfo)) {\n          if (\"idxs\" in newCellInfo) {\n            let idxs = [];\n            for (let idx of newCellInfo.idxs) {\n              const cellInfoSub = this.initCellInfo(idx, newCellInfo.num);\n              const status = this.getCandidateStatus(candidates, cellInfoSub);\n\n              if (this.isRemovable(status)) {\n                candidates = this.assignRemoved2Candidates(\n                  candidates,\n                  cellInfoSub\n                );\n\n                idxs.push(idx);\n                newCellInfo.prevStatuses.push(status);\n              }\n            }\n\n            if (idxs.length === 0) {\n              continue;\n            }\n\n            newCellInfo.idxs = idxs;\n            newCellInfo.status = Config.candidateStatus.removed;\n            candidateTrace.push(newCellInfo);\n          } else if (\n            this.isRemovable(this.getCandidateStatus(candidates, newCellInfo))\n          ) {\n            candidates = this.assignRemoved2Candidates(candidates, newCellInfo);\n\n            newCellInfo.prevStatus = Config.candidateStatus.removable;\n            newCellInfo.status = Config.candidateStatus.removed;\n            candidateTrace.push(newCellInfo);\n          }\n        }\n      }\n\n      if (numTrace !== null) {\n        trace.push(\n          this.initTraceItem(\n            numTrace,\n            candidateTrace,\n            markerTrace,\n            Config.operationTypes.auto\n          )\n        );\n      } else if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n    }\n\n    return dataset;\n  }\n\n  static convertSelectable2Selected(dataset) {\n    let { numMatrix, candidates } = dataset;\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      const i = this.getSelectableIdx(candidates, idx);\n      const cellInfo = this.initCellInfo(idx, this.i2n(i));\n      if (typeof i === \"number\") {\n        numMatrix = this.assignNum2NumMatrix(numMatrix, cellInfo);\n\n        [candidates] = this.updateCandidateOfTheCell(candidates, cellInfo);\n      }\n    }\n\n    return dataset;\n  }\n\n  static eraseRmovalbe(dataset) {\n    // console.log(\"inside eraseRmovalbe\");\n\n    let { candidates, trace } = dataset;\n    const targetTrace = this.getTraceItemsWithRemovableWithoutSelectable(trace);\n\n    for (let targetTraceItem of targetTrace) {\n      let candidateTrace = [];\n      for (let cellInfo of targetTraceItem.candidate) {\n        let newCellInfo = this.deepCopy(cellInfo);\n\n        if (\"idxs\" in newCellInfo) {\n          newCellInfo.prevStatuses = [];\n\n          // const idxs = newCellInfo.idxs.filter(idx => {\n          //   const cellInfoSub = this.initCellInfo(\n          //     idx,\n          //     newCellInfo.num,\n          //     newCellInfo.status\n          //   );\n          //   return (\n          //     this.isRemovableCellInfo(cellInfoSub) &&\n          //     this.isRemovable(this.getCandidateStatus(candidates, cellInfoSub))\n          //   );\n          // });\n\n          // const idxs = newCellInfo.idxs.filter(idx =>\n          //   this.isRemovable4erase(\n          //     candidates,\n          //     this.initCellInfo(idx, newCellInfo.num, newCellInfo.status)\n          //   )\n          // );\n\n          let idxs = [];\n          for (let idx of newCellInfo.idxs) {\n            const cellInfoSub = this.initCellInfo(\n              idx,\n              newCellInfo.num,\n              newCellInfo.status\n            );\n            if (this.isRemovable4erase(candidates, cellInfoSub)) {\n              idxs.push(idx);\n            }\n          }\n          // idxs = idxs.filter(idx =>\n          //   this.isRemovable4erase(\n          //     candidates,\n          //     idx,\n          //     newCellInfo.num,\n          //     newCellInfo.status\n          //   )\n          // );\n\n          if (idxs.length === 0) {\n            continue;\n          }\n\n          for (let idx of idxs) {\n            const cellInfoSub = this.initCellInfo(\n              idx,\n              newCellInfo.num,\n              newCellInfo.status\n            );\n\n            newCellInfo.prevStatuses.push(Config.candidateStatus.removable);\n\n            candidates = this.assignRemoved2Candidates(candidates, cellInfoSub);\n\n            // candidateTrace.push(cellInfo);\n          }\n\n          newCellInfo.status = Config.candidateStatus.removed;\n        } else {\n          if (\n            this.isRemovableCellInfo(newCellInfo) &&\n            this.isRemovable(this.getCandidateStatus(candidates, newCellInfo))\n          ) {\n            newCellInfo.prevStatus = Config.candidateStatus.removable;\n            newCellInfo.status = Config.candidateStatus.removed;\n\n            candidates = this.assignRemoved2Candidates(candidates, newCellInfo);\n\n            // candidateTrace.push(cellInfo);\n          } else {\n            continue;\n          }\n        }\n        candidateTrace.push(newCellInfo);\n      }\n\n      if (candidateTrace.length > 0) {\n        trace.push(\n          this.initTraceItemCandidate(\n            candidateTrace,\n            Config.operationTypes.auto\n          )\n        );\n      }\n    }\n\n    return dataset;\n  }\n\n  static isRemovable4erase(candidates, cellInfo) {\n    // const cellInfoSub = this.initCellInfo(\n    //   idx,\n    //   newCellInfo.num,\n    //   newCellInfo.status\n    // );\n    return (\n      this.isRemovableCellInfo(cellInfo) &&\n      this.isRemovable(this.getCandidateStatus(candidates, cellInfo))\n    );\n  }\n\n  // static isRemovable4erase(candidates, idx, num, status) {\n  //   const cellInfo = this.initCellInfo(idx, num, status);\n\n  //   return (\n  //     this.isRemovableCellInfo(cellInfo) &&\n  //     this.isRemovable(this.getCandidateStatus(candidates, cellInfo))\n  //   );\n  // }\n\n  static eraseExclusiveColors(candidates, trace) {\n    let candidateTrace = [];\n    const numArray = this.getNsequence();\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let num of numArray) {\n      const cellInfo4num = this.initCellInfo(\n        [],\n        num,\n        Config.candidateStatus.candidate\n      );\n      cellInfo4num.prevStatuses = [];\n\n      for (let idx of allIdxs) {\n        const cellInfo = this.initCellInfo(\n          idx,\n          num,\n          Config.candidateStatus.candidate\n        );\n\n        const status = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isWideExclusiveCandidate(status)) {\n          cellInfo4num.idxs.push(idx);\n          cellInfo4num.prevStatuses.push(status);\n\n          candidates = this.assignCandidate2Candidates(candidates, cellInfo);\n        }\n      }\n\n      if (cellInfo4num.idxs.length > 0) {\n        candidateTrace.push(cellInfo4num);\n      }\n    }\n\n    if (candidateTrace.length > 0) {\n      trace.push(\n        this.initTraceItemCandidate(candidateTrace, Config.operationTypes.auto)\n      );\n    }\n\n    return [candidates, trace];\n  }\n\n  static filterTraceItems(trace, status, excludingStatus = \"dummyStatus\") {\n    const traceCopy = this.deepCopy(trace);\n\n    return traceCopy.filter(\n      traceItem =>\n        traceItem.candidate !== null &&\n        traceItem.candidate.reduce(\n          (hasStatus, cellInfo) => cellInfo.status === status || hasStatus,\n          false\n        ) &&\n        !traceItem.candidate.reduce(\n          (hasStatus, cellInfo) =>\n            cellInfo.status === excludingStatus || hasStatus,\n          false\n        )\n    );\n  }\n\n  static getTraceItemsWithSelectables(trace) {\n    return this.filterTraceItems(trace, Config.candidateStatus.selectable);\n  }\n\n  static getTraceItemsWithRemovable(trace) {\n    return this.filterTraceItems(trace, Config.candidateStatus.removable);\n  }\n\n  static getTraceItemsWithRemovableWithoutSelectable(trace) {\n    return this.filterTraceItems(\n      trace,\n      Config.candidateStatus.removable,\n      Config.candidateStatus.selectable\n    );\n  }\n\n  static convertExclusive2Candidates(status) {\n    return Config.narrowCandidateList.includes(status)\n      ? Config.candidateStatus.candidate\n      : status;\n  }\n\n  static setBackCandidates(candidates) {\n    candidates = candidates.map(row =>\n      row.map(cell =>\n        cell.map(\n          status =>\n            Config.wideCandidateList.includes(status)\n              ? Config.candidateStatus.candidate\n              : status\n          // this.convertExclusive2Candidates(status)\n        )\n      )\n    );\n\n    return candidates;\n  }\n\n  static updateCandidates4UnionA(candidates, unionCell, isSkipIneffective) {\n    // console.log(\"inside updateCandidates4UnionA\");\n\n    let status = Config.wideExclusiveStatuses[unionCell.unionSize];\n\n    let candidateTrace = [];\n    let relatedCellInfos = this.getRelatedCellInfo4unionA(\n      candidates,\n      unionCell\n    );\n\n    if (isSkipIneffective && relatedCellInfos.length === 0) {\n      return [candidates, []];\n    }\n\n    for (let idx of unionCell.idxs) {\n      for (let num of unionCell.nums) {\n        const targetCellInfo = this.initCellInfo(idx, num, status);\n        const prevStatus = this.getCandidateStatus(candidates, targetCellInfo);\n\n        if (this.isNarrowCandidate(prevStatus)) {\n          candidates = this.assignStatus2Candidates(\n            candidates,\n            targetCellInfo,\n            status\n          );\n\n          targetCellInfo.prevStatus = prevStatus;\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    for (let cellInfo of relatedCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n        return [null, null];\n      }\n    }\n\n    // console.log(\"relatedCellInfos\");\n    // console.log(relatedCellInfos);\n\n    // if (this.isCellsAllWideRemoved(candidates, relatedCellInfos.idxs)) {\n    //   return [null, null];\n    // }\n\n    candidateTrace = candidateTrace.concat(relatedCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates4UnionB(candidates, unionCell, isSkipIneffective) {\n    let candidateTrace = [];\n    let status = Config.wideExclusiveStatuses[unionCell.unionSize];\n\n    const numArray = this.getNsequence();\n\n    for (let idx of unionCell.idxs) {\n      for (let num of numArray) {\n        const assignStatus = unionCell.nums.includes(num)\n          ? status\n          : Config.candidateStatus.removable;\n        const targetCellInfo = this.initCellInfo(idx, num, assignStatus);\n        targetCellInfo.prevStatus = this.getCandidateStatus(\n          candidates,\n          targetCellInfo\n        );\n\n        if (this.isNarrowCandidate(targetCellInfo.prevStatus)) {\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    let relatedCellInfos = this.getRelatedCellInfo4unionB(\n      candidates,\n      unionCell\n    );\n\n    const removableTargetCellInfos = candidateTrace.filter(\n      cellInfo => cellInfo.status === Config.candidateStatus.removable\n    );\n\n    if (\n      isSkipIneffective &&\n      removableTargetCellInfos.length === 0 &&\n      relatedCellInfos.length === 0\n    ) {\n      return [candidates, []];\n    }\n\n    for (let cellInfo of candidateTrace) {\n      candidates = this.assignStatus2Candidates(\n        candidates,\n        cellInfo,\n        cellInfo.status\n      );\n    }\n\n    for (let cellInfo of relatedCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      // // This problem may never happen //\n      // if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n      //   return [null, null];\n      // }\n    }\n\n    candidateTrace = candidateTrace.concat(relatedCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates4Square(\n    candidates,\n    squareCellInfo,\n    rowcol,\n    isSkipIneffective\n  ) {\n    // console.log(\"inside updateCandidates4Square\");\n\n    const counterDirection = this.flipRowCol(rowcol);\n    const counterRC = this.getFirstLetter(counterDirection);\n\n    // console.log(\"counterDirection: \", counterDirection);\n\n    // const squareIndices = squareCellInfo.idxs1.concat(squareCellInfo.idxs2);\n    const squareIndices = this.flattenMatrix2Array(squareCellInfo.idxsArray);\n    const rawRCIdxs = squareCellInfo.idxsArray.map(idxs =>\n      this.flattenMatrix2Array(idxs.map(idx => idx[counterRC]))\n    );\n    const keyRCIdxs = this.getUnionNumbers(rawRCIdxs);\n\n    // console.log(\"squareIndices\");\n    // console.log(squareIndices);\n\n    // console.log(\"rawRCIdxs\");\n    // console.log(rawRCIdxs);\n\n    // console.log(\"keyRCIdxs\");\n    // console.log(keyRCIdxs);\n\n    let candidateTrace = [];\n\n    let targetCellInfos = [];\n    let unTargetCellInfos = [];\n\n    // for (let keyIdx of squareCellInfo.idxs1) {\n    // for (let keyIdx of squareCellInfo.idxsArray[0]) {\n    for (let keyRCIdx of keyRCIdxs) {\n      const cellIndices = this.getCandidateCellIndices(\n        candidates,\n        // keyIdx[counterRC],\n        keyRCIdx,\n        counterDirection\n      );\n\n      for (let idx of cellIndices) {\n        const cellInfo = this.initCellInfo(idx, squareCellInfo.num);\n        cellInfo.prevStatus = this.getCandidateStatus(candidates, cellInfo);\n\n        if (this.isInCellInfoArray(squareIndices, idx)) {\n          cellInfo.status = Config.candidateStatus.exclusiveSquare;\n\n          targetCellInfos.push(cellInfo);\n        } else if (this.isNarrowCandidate(cellInfo.prevStatus)) {\n          cellInfo.status = Config.candidateStatus.removable;\n\n          unTargetCellInfos.push(cellInfo);\n        }\n      }\n    }\n\n    if (isSkipIneffective && unTargetCellInfos.length === 0) {\n      // continue;\n      return [candidates, []];\n    }\n\n    // console.log(\"targetCellInfos\");\n    // console.log(targetCellInfos);\n\n    for (let cellInfo of targetCellInfos) {\n      candidates = this.assignExclusiveSquare2Candidates(candidates, cellInfo);\n    }\n\n    // console.log(\"unTargetCellInfos\");\n    // console.log(unTargetCellInfos);\n\n    for (let cellInfo of unTargetCellInfos) {\n      candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n      if (this.isCellAllWideRemoved(candidates, cellInfo.idx)) {\n        return null;\n      }\n    }\n\n    candidateTrace = candidateTrace.concat(targetCellInfos);\n    candidateTrace = candidateTrace.concat(unTargetCellInfos);\n\n    return [candidates, candidateTrace];\n  }\n\n  static findCandidateSingle(cellInfos) {\n    return cellInfos.filter(cellInfo => cellInfo.idxs.length === 1);\n  }\n\n  static findSingleCandidateCellsB(\n    candidates,\n    exclusiveCandidates,\n    // helpMode,\n    isStepByStep = true\n  ) {\n    // console.log(\"inside findSingleCandidateCells\");\n\n    let singleCandidateCells = [];\n\n    // breakPoint:\n    for (let [r, row] of candidates.entries()) {\n      for (let [c, cell] of row.entries()) {\n        if (\n          cell.filter(cand => Config.wideSelectedList.includes(cand)).length > 0\n        ) {\n          continue;\n        }\n\n        if (\n          cell.filter(cand => Config.narrowCandidateList.includes(cand))\n            .length === 1\n        ) {\n          const idxs = Config.narrowCandidateList\n            .map(status => cell.indexOf(status))\n            .filter(idx => idx >= 0);\n\n          if (idxs.length === 1) {\n            const i = idxs.pop();\n\n            const targetCellInfo = this.initCellInfo(\n              this.initCellIdx(r, c),\n              this.i2n(i),\n              Config.candidateStatus.selectable\n            );\n\n            if (\n              !this.isInExclusiveCandidates(exclusiveCandidates, targetCellInfo)\n            ) {\n              singleCandidateCells.push(targetCellInfo);\n              // exclusiveCandidates.push(targetCellInfo);\n\n              if (\n                isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateTypes.singleCandidate\n                )\n              ) {\n                return singleCandidateCells;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return singleCandidateCells;\n  }\n\n  static isInsoluble(candidates) {\n    const allIdxs = this.getAllCellIndicies();\n\n    for (let idx of allIdxs) {\n      if (this.isCellAllWideRemoved(candidates, idx)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static findExclusiveCandidateUnionA(\n    candidates,\n    exclusiveCandidates,\n    unionSize = 2,\n    isStepByStep = true\n  ) {\n    // console.log(\"inside findExclusiveCandidateUnionA\");\n    // console.log(\"unionSize: \", unionSize);\n\n    // union size 2 finds 2 cells with the same two candidates //\n    // such as [5, 7] and [5, 7] from cells with 2 remaining candidates //\n    // union size 3 finds 3 cells with three candidates //\n    // such as [1, 4, 8], [1, 4], [4, 8] from cells with 2 or 3 remaining candidates //\n\n    let unionCells = [];\n    const candNumMatrix = this.getCandidateNumMatrix(candidates);\n    const idxArray = this.getIndexSequence();\n\n    // candLengths [2] for unionSize 2, [2,3] for unionSize 3\n    const candLengths = this.getIndexSequence(unionSize - 1).map(i => i + 2);\n\n    for (let type of Config.restrictionTypesArray) {\n      for (let rcbIdx of idxArray) {\n        let cellIndices = this.getCandidateCellIndices(\n          candidates,\n          rcbIdx,\n          type\n        );\n\n        cellIndices = cellIndices.filter(idx =>\n          candLengths.includes(candNumMatrix[idx.r][idx.c].length)\n        );\n\n        if (cellIndices.length >= unionSize) {\n          let cellInfoArray = cellIndices.map(idx => {\n            return {\n              nums: candNumMatrix[idx.r][idx.c],\n              idx: idx\n            };\n          });\n\n          const candIdxArray = this.getIndexSequence(cellInfoArray.length);\n          for (let unionIdxs of k_combinations(candIdxArray, unionSize)) {\n            const idxs = unionIdxs.map(i => cellInfoArray[i].idx);\n            if (type === \"blk\" && this.isInSameRowCol(idxs)) {\n              continue;\n            }\n\n            const numsUnion = this.getUnionNumbers(\n              unionIdxs.map(i => cellInfoArray[i].nums)\n            );\n\n            if (numsUnion.length === unionSize) {\n              const unionCell = {\n                nums: numsUnion,\n                idxs: idxs,\n                type: type,\n                rcbIdx: rcbIdx\n              };\n\n              if (\n                isStepByStep &&\n                Config.stepByStepLevels.includes(\n                  Config.candidateLevelTypes.level4\n                ) &&\n                !this.isInExclusiveCandidates(exclusiveCandidates, unionCell)\n              ) {\n                return [unionCell];\n              }\n\n              unionCells.push(unionCell);\n            }\n          }\n        }\n      }\n    }\n\n    return unionCells;\n  }\n\n  // set status for the very cell //\n  static updateCandidateOfTheCell(\n    candidates,\n    cellInfo,\n    // level = 1,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside updateCandidateOfTheCell\");\n\n    let indexArray = [];\n    let selectStatus = Config.candidateStatus.candidate;\n    let removeStatus = Config.candidateStatus.candidate;\n    let candidateTrace = [];\n\n    // set candidate types depending on the action type //\n    if (processType === Config.processTypes.insertion) {\n      selectStatus = Config.candidateStatus.selected;\n      removeStatus = Config.candidateStatus.removed;\n    } else {\n      selectStatus = Config.candidateStatus.selectable;\n      if (\n        [\n          Config.processTypes.candidates,\n          Config.processTypes.singleNum\n        ].includes(processType)\n      ) {\n        removeStatus = Config.candidateStatus.removable;\n      }\n    }\n\n    if (processType === Config.processTypes.singleNum) {\n      indexArray.push(Util.n2i(cellInfo.num));\n    } else {\n      indexArray = this.getIndexSequence();\n    }\n\n    for (let i of indexArray) {\n      const targetCellInfo = Util.initCellInfo(cellInfo.idx, Util.i2n(i));\n\n      if (cellInfo.num === Util.i2n(i)) {\n        let targetCellInfo = this.initCellInfo(\n          cellInfo.idx,\n          cellInfo.num,\n          selectStatus\n        );\n\n        targetCellInfo.prevStatus = this.getCandidateStatus(\n          candidates,\n          cellInfo\n        );\n        candidates = Util.assignStatus2Candidates(\n          candidates,\n          cellInfo,\n          selectStatus\n        );\n\n        candidateTrace.push(targetCellInfo);\n      } else {\n        const prevStatus = Util.getCandidateStatus(candidates, targetCellInfo);\n\n        if (!Util.isRemoved(prevStatus)) {\n          candidates = Util.assignStatus2Candidates(\n            candidates,\n            targetCellInfo,\n            removeStatus\n          );\n\n          targetCellInfo.status = removeStatus;\n          targetCellInfo.prevStatus = prevStatus;\n          candidateTrace.push(targetCellInfo);\n        }\n      }\n    }\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateRelatedCells(\n    candidates,\n    cellInfo,\n    level = 1,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside updateRelatedCells\");\n\n    let candidateTrace = [];\n\n    if (level === 0) {\n      return [candidates, candidateTrace];\n    }\n\n    const removeStatus =\n      processType === Config.processTypes.insertion\n        ? Config.candidateStatus.removed\n        : Config.candidateStatus.removable;\n\n    const relatedIndices = this.getSingleNumCandidateCells(\n      candidates,\n      cellInfo.num,\n      this.getRelatedIndicesBesidesItself(cellInfo.idx),\n      processType\n    );\n\n    for (let idx of relatedIndices) {\n      let targetCellInfo = this.initCellInfo(idx, cellInfo.num, removeStatus);\n      targetCellInfo.prevStatus = Util.getCandidateStatus(\n        candidates,\n        targetCellInfo\n      );\n\n      candidates = Util.assignStatus2Candidates(\n        candidates,\n        Util.initCellInfo(idx, cellInfo.num),\n        removeStatus\n      );\n\n      if (this.isCellAllWideRemoved(candidates, idx)) {\n        return [null, null];\n      }\n\n      candidateTrace.push(targetCellInfo);\n    }\n\n    return [candidates, candidateTrace];\n  }\n\n  static updateCandidates(dataset, cellInfo, candidateLevel) {\n    let { candidates } = dataset;\n\n    let candidateTrace = [];\n    let candidateTraceTmp = [];\n\n    [candidates, candidateTrace] = this.updateCandidateOfTheCell(\n      candidates,\n      cellInfo\n    );\n\n    [candidates, candidateTraceTmp] = this.updateRelatedCells(\n      candidates,\n      cellInfo,\n      candidateLevel,\n      Config.processTypes.insertion\n    );\n\n    // There is a cell full of wide-removed //\n    if (candidates === null) {\n      return null;\n    }\n\n    if (candidateTraceTmp.length > 0) {\n      candidateTrace = candidateTrace.concat(candidateTraceTmp);\n    }\n\n    if (candidateTrace.length > 0) {\n      dataset.trace.push(\n        this.initTraceItemCandidate(candidateTrace, Config.operationTypes.auto)\n      );\n    }\n\n    return dataset;\n  }\n\n  static flipCandidateStatus(candidates, cellInfo) {\n    const status = this.getCandidateStatus(candidates, cellInfo);\n\n    cellInfo.prevStatus = status;\n    if (status !== Config.candidateStatus.removed) {\n      cellInfo.status = Config.candidateStatus.removed;\n      candidates = this.assignRemoved2Candidates(candidates, cellInfo);\n    } else {\n      cellInfo.status = Config.candidateStatus.candidate;\n      candidates = this.assignCandidate2Candidates(candidates, cellInfo);\n    }\n\n    return [candidates, cellInfo];\n  }\n\n  static isSelected(candidateStatus) {\n    return Config.selectedList.includes(candidateStatus);\n  }\n\n  static hasSelected(candidates, idx) {\n    return this.getCandidateStatusArray(candidates, idx).reduce(\n      (having, status) => having || this.isSelected(status),\n      false\n    );\n  }\n\n  static isWideSelected(candidateStatus) {\n    return Config.wideSelectedList.includes(candidateStatus);\n  }\n\n  static isWideSelectedInStatuses(statuses) {\n    return statuses.reduce(\n      (isSelected, status) => this.isWideSelected(status) || isSelected,\n      false\n    );\n  }\n\n  static isWideSelectedInCell(candidates, idx) {\n    return this.isWideSelectedInStatuses(\n      this.getCandidateStatusArray(candidates, idx)\n    );\n  }\n\n  static isStatusesAllNarrowCandidates(statuses) {\n    return statuses.reduce(\n      (isCandidates, status) => this.isNarrowCandidate(status) && isCandidates,\n      true\n    );\n  }\n\n  static isStatusesAllWideRemoved(statuses) {\n    return statuses.reduce(\n      (isRemoved, status) => this.isWideRemoved(status) && isRemoved,\n      true\n    );\n  }\n\n  static isCellAllWideRemoved(candidates, idx) {\n    return this.countWideRemoved(candidates, idx) === Config.size;\n  }\n\n  static isCellsAllWideRemoved(candidates, idxs) {\n    return idxs.reduce(\n      (isWrong, idx) => this.isCellAllWideRemoved(candidates, idx) || isWrong,\n      false\n    );\n  }\n\n  static isLastCandidate(candidates, cellInfo) {\n    return (\n      this.countCandidates(candidates, cellInfo.idx) === 1 &&\n      this.isCandidate(this.getCandidateStatus(candidates, cellInfo))\n    );\n  }\n\n  static isWideCandidate(candidateStatus) {\n    return Config.wideCandidateList.includes(candidateStatus);\n  }\n\n  static isNarrowCandidate(candidateStatus) {\n    return Config.narrowCandidateList.includes(candidateStatus);\n  }\n\n  static isCandidate(candidateStatus) {\n    // console.log(\"inside isCandidate\");\n\n    return Config.candidateList.includes(candidateStatus);\n  }\n\n  static isNarrowSelected(status) {\n    return status === Config.candidateStatus.selected;\n  }\n\n  static isSelectable(status) {\n    return status === Config.candidateStatus.selectable;\n  }\n\n  static isSelectableCell(candidates, idx) {\n    const statuses = this.getCandidateStatusArray(candidates, idx);\n    return statuses.includes(Config.candidateStatus.selectable);\n  }\n\n  static isRemovable(status) {\n    return status === Config.candidateStatus.removable;\n  }\n\n  static isRemoved(status) {\n    return status === Config.candidateStatus.removed;\n  }\n\n  static isWideRemoved(status) {\n    return Config.wideRemovedList.includes(status);\n  }\n\n  static isExclusiveSingle(status) {\n    return status === Config.candidateStatus.exclusiveSingle;\n  }\n\n  static isExclusiveDouble(status) {\n    return status === Config.candidateStatus.exclusiveDouble;\n  }\n\n  static isExclusiveTriple(status) {\n    return status === Config.candidateStatus.exclusiveTriple;\n  }\n\n  static isExclusiveQuadruple(status) {\n    return status === Config.candidateStatus.exclusiveQuadruple;\n  }\n\n  static isExclusiveMultiple(status) {\n    return Config.exclusiveMultiples.includes(status);\n  }\n\n  static isExclusiveDoubleOrTriple(status) {\n    return this.isExclusiveDouble(status) || this.isExclusiveTriple(status);\n  }\n\n  static isExclusiveSquare(status) {\n    return status === Config.candidateStatus.exclusiveSquare;\n  }\n\n  static isAssumptionTest(status) {\n    return status === Config.candidateStatus.assumptionTest;\n  }\n\n  static isWideExclusiveCandidate(status) {\n    return Config.wideExclusiveStatuses.includes(status);\n  }\n\n  static isCandidateWithoutRemovable(candidate) {\n    const candidateUpper = candidate.toUpperCase();\n    const statusCandidateUpper = Config.candidateStatus.candidate.toUpperCase();\n    const statusSelectable = Config.candidateStatus.selectable;\n    const statusRemovable = Config.candidateStatus.removable;\n\n    return (\n      (candidateUpper.includes(statusCandidateUpper) &&\n        candidate !== statusRemovable) ||\n      candidate === statusSelectable\n    );\n  }\n\n  static isSelectableCellInfo(cellInfo) {\n    return cellInfo.status === Config.candidateStatus.selectable;\n  }\n\n  static isRemovableCellInfo(cellInfo) {\n    return cellInfo.status === Config.candidateStatus.removable;\n  }\n\n  static getNarrowCandidateNums(candidates, idx) {\n    const nums = this.getNsequence();\n\n    return nums.filter(num =>\n      this.isNarrowCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n  }\n\n  static getCandidateNums(candidates, idx) {\n    const statusArray = this.getCandidateStatusArray(candidates, idx);\n\n    let candNums = [];\n    for (let [i, status] of statusArray.entries()) {\n      if (this.isCandidate(status)) {\n        candNums.push(this.i2n(i));\n      }\n    }\n\n    return candNums;\n  }\n\n  static getWideCandidateNums(candidates, idx) {\n    const nums = this.getNsequence();\n\n    return nums.filter(num =>\n      this.isWideCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n  }\n\n  // not used? //\n  static getCandidateIndicesFromCandidateArray(candidateArray) {\n    const idxArray = this.getIndexSequence();\n    return idxArray.filter(i => this.isCandidate(candidateArray[i]));\n  }\n\n  // not used? //\n  static getCandidateIndicesFromCandidateArrayExcludingRemovable(\n    candidateArray\n  ) {\n    const idxArray = this.getIndexSequence();\n    return idxArray.filter(i =>\n      this.isCandidateWithoutRemovable(candidateArray[i])\n    );\n  }\n\n  static extractCellInfoFromCandidate(candidates, num, cellIndices) {\n    // console.log(\"inside extractCellInfoFromCandidate\");\n\n    const filteredCellIndices = cellIndices.filter(idx =>\n      this.isNarrowCandidate(\n        this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n      )\n    );\n\n    if (filteredCellIndices.length === 0) {\n      return null;\n    }\n\n    return this.initCellInfo(filteredCellIndices, num);\n  }\n\n  // not used? //\n  static extractCellInfoFromCandidateExcludingRemovable(\n    candidates,\n    num,\n    cellIndices\n  ) {\n    const filteredCellIndices = cellIndices.filter(idx =>\n      this.isCandidateWithoutRemovable(candidates[idx.r][idx.c][num - 1])\n    );\n\n    if (filteredCellIndices.length === 0) {\n      return null;\n    }\n    return { num: num, idxs: filteredCellIndices };\n  }\n\n  // seems not used //\n  static getSelectableCandidate4Num(candidates, num, cellIndices) {\n    // console.log(\"inside getSelectableCandidate4Num\");\n\n    const cellInfo = this.extractCellInfoFromCandidate(\n      candidates,\n      num,\n      cellIndices\n    );\n\n    if (cellInfo !== null && cellInfo.idxs.length === 1) {\n      return {\n        idx: cellInfo.idxs[0],\n        num: num\n      };\n    }\n    return null;\n  }\n\n  // Seems not used //\n  static updateCandidates4Selectable(candidates, cellInfo) {\n    // console.log(\"updateCandidates4Selectable is called\");\n\n    if (cellInfo !== null) {\n      for (let i of this.getIndexSequence()) {\n        if (i === cellInfo.num - 1) {\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] =\n            Config.candidateStatus.selectable;\n        } else if (\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] !==\n          Config.candidateStatus.removed\n        ) {\n          candidates[cellInfo.idx.r][cellInfo.idx.c][i] =\n            Config.candidateStatus.removable;\n        }\n      }\n    }\n\n    return candidates;\n  }\n\n  static getSingleNumCandidateCells(\n    candidates,\n    num,\n    cellIndices,\n    processType = Config.processTypes.insertion\n  ) {\n    // console.log(\"inside getSingleNumCandidateCells\");\n\n    let candidateCells = [];\n\n    for (let idx of cellIndices) {\n      const status = this.getCandidateStatus(\n        candidates,\n        this.initCellInfo(idx, num)\n      );\n\n      if (processType === Config.processTypes.insertion) {\n        if (this.isSelected(status)) {\n          return [];\n        } else if (this.isWideCandidate(status)) {\n          candidateCells.push(idx);\n        }\n      } else {\n        if (this.isWideSelected(status)) {\n          return [];\n        } else if (this.isNarrowCandidate(status)) {\n          candidateCells.push(idx);\n        }\n      }\n    }\n\n    return candidateCells;\n  }\n\n  static setRelatedCandidatesBySingleMark(\n    candidates,\n    markerInfo,\n    markerNums = null\n  ) {\n    // console.log(\"inside setRelatedCandidatesBySingleMark\");\n\n    let candidateTrace = [];\n    let markerTrace = [];\n\n    const num = markerInfo.num;\n\n    let cellIndices = this.getRelatedCellIndicesByMarkerIdx(\n      markerInfo.idx,\n      candidates\n    );\n\n    for (let idx of cellIndices) {\n      const targetCellInfo = this.initCellInfo(idx, num);\n      targetCellInfo.prevStatus = this.getCandidateStatus(\n        candidates,\n        targetCellInfo\n      );\n\n      if (!this.isNarrowCandidate(targetCellInfo.prevStatus)) {\n        continue;\n      }\n\n      // if ( this.isNarrowCandidate( targetCellInfo.prevStatus ) ) {\n\n      candidates = this.assignRemovable2Candidates(candidates, targetCellInfo);\n\n      targetCellInfo.status = Config.candidateStatus.removable;\n\n      candidateTrace.push(targetCellInfo);\n\n      // find selectable type A //\n      if (markerNums !== null) {\n        let markerTraceTmp = null;\n\n        [markerNums, markerTraceTmp] = this.setSelectableA2MarkerNums(\n          markerNums,\n          candidates,\n          this.initCellInfo(idx, num)\n        );\n\n        if (markerTraceTmp) {\n          markerTrace = markerTrace.concat(markerTraceTmp);\n        }\n      }\n\n      // find selectable type B //\n      let markerTraceTmp = null;\n      [markerNums, markerTraceTmp] = this.setSelectableB2MarkerNums(\n        markerNums,\n        candidates,\n        idx\n      );\n\n      if (markerTraceTmp) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      // }\n    }\n\n    return [candidates, markerNums, candidateTrace, markerTrace];\n  }\n\n  static setSelectableA2MarkerNums(markerNums, candidates, cellInfo) {\n    // console.log(\"inside setSelectableA2MarkerNums\");\n\n    let markerTrace = [];\n    const num = cellInfo.num;\n    const relatedMarkerIdxs = this.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    for (let relatedMarkerIdx of relatedMarkerIdxs) {\n      const relatedMarkerInfo = this.initMarkerInfo(relatedMarkerIdx, num);\n\n      if (!this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n        continue;\n      }\n\n      // if (this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n\n      let concerningCellIdxs = this.getTargetCellIndicesByMarkerIdx(\n        relatedMarkerIdx,\n        candidates\n      );\n\n      let concerningCellInfos = concerningCellIdxs.map(idx =>\n        this.initCellInfo(idx, num)\n      );\n\n      if (this.countNumInCandidates(candidates, concerningCellInfos) !== 1) {\n        continue;\n      }\n\n      // if (this.countNumInCandidates(candidates, concerningCellInfos) === 1) {\n\n      relatedMarkerInfo.prevStatus = this.getMarkerStatus(\n        markerNums,\n        relatedMarkerIdx\n      );\n      relatedMarkerInfo.status = Config.candidateStatus.selectable;\n\n      markerNums = this.assignSelectable2MarkerNums(\n        markerNums,\n        relatedMarkerInfo\n      );\n\n      markerTrace.push(relatedMarkerInfo);\n      // }\n      // }\n    }\n\n    return [markerNums, markerTrace];\n  }\n\n  static setSelectableB2MarkerNums(markerNums, candidates, cellIdx) {\n    let markerTrace = [];\n    const selectableNum = this.getSelectableNum(candidates, cellIdx);\n\n    if (markerNums === null || selectableNum === null) {\n      return [markerNums, markerTrace];\n    }\n\n    // if (markerNums !== null && selectableNum !== null) {\n\n    const relatedMarkerIdxs = this.getMarkerIdxsFromCellIdx(cellIdx);\n\n    for (let relatedMarkerIdx of relatedMarkerIdxs) {\n      const relatedMarkerInfo = this.initMarkerInfo(\n        relatedMarkerIdx,\n        selectableNum\n      );\n\n      if (!this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n        continue;\n      }\n\n      // if (this.isTheNumInMarker(markerNums, relatedMarkerInfo)) {\n\n      relatedMarkerInfo.prevStatus = this.getMarkerStatus(\n        markerNums,\n        relatedMarkerIdx\n      );\n      relatedMarkerInfo.status = Config.candidateStatus.selectable;\n\n      markerNums = this.assignSelectable2MarkerNums(\n        markerNums,\n        relatedMarkerInfo\n      );\n\n      markerTrace.push(relatedMarkerInfo);\n      // }\n    }\n    // }\n\n    return [markerNums, markerTrace];\n  }\n\n  static setRelatedCandidatesByMultipleMarks(\n    candidates,\n    markerNums,\n    markerInfo\n  ) {\n    // console.log(\"inside setRelatedCandidatesByMultipleMarks\");\n\n    let candidateTrace = [];\n    let markerTrace = [];\n\n    const markerIdx = markerInfo.idx;\n    const assignedNums = this.getNumsFromMarkerNums(markerNums, markerIdx);\n\n    if (assignedNums.length < 2) {\n      return [candidates, markerNums];\n    }\n\n    let concernedCellIdxs = this.getTargetCellIndicesByMarkerIdx(\n      markerIdx,\n      candidates\n    );\n    let targetCellIdxs = [];\n\n    if (assignedNums.length === 2 && concernedCellIdxs.length === 3) {\n      targetCellIdxs = concernedCellIdxs.filter(idx =>\n        assignedNums.reduce(\n          (isNumInCell, num) =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            ) || isNumInCell,\n          false\n        )\n      );\n    } else {\n      targetCellIdxs = concernedCellIdxs;\n    }\n\n    if (assignedNums.length === targetCellIdxs.length) {\n      const removableNums = this.getNsequence().filter(\n        num => !assignedNums.includes(num)\n      );\n\n      for (let num of removableNums) {\n        for (let idx of targetCellIdxs) {\n          const cellInfo = this.initCellInfo(idx, num);\n          const status = this.getCandidateStatus(candidates, cellInfo);\n\n          if (!this.isNarrowCandidate(status)) {\n            continue;\n          }\n\n          // if (this.isNarrowCandidate(status)) {\n\n          cellInfo.prevStatus = status;\n          cellInfo.status = Config.candidateStatus.removable;\n\n          candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n          candidateTrace.push(cellInfo);\n          // }\n        }\n      }\n\n      markerInfo.nums = assignedNums;\n\n      markerInfo.prevStatuses = [];\n      for (let num of markerInfo.nums) {\n        const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n        const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n        if (idx) {\n          tmpMarkerInfo.idx = idx;\n          markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n        } else {\n          markerInfo.prevStatuses.push(null);\n        }\n      }\n\n      if (assignedNums.length === 2) {\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n      } else {\n        markerNums = this.assignExclusiveTriple2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveTriple;\n      }\n\n      markerTrace.push(markerInfo);\n    } else {\n      const doubleExclusiveCellIdxs = targetCellIdxs.filter(idx =>\n        this.isTwoArraysSame(\n          assignedNums,\n          this.getWideCandidateNums(candidates, idx)\n        )\n      );\n\n      if (doubleExclusiveCellIdxs.length === 2) {\n        markerInfo.nums = assignedNums;\n\n        markerInfo.prevStatuses = [];\n        for (let num of markerInfo.nums) {\n          const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n          if (idx) {\n            tmpMarkerInfo.idx = idx;\n            markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n          } else {\n            markerInfo.prevStatuses.push(null);\n          }\n        }\n\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n\n        markerTrace.push(markerInfo);\n\n        if (concernedCellIdxs.length === 3) {\n          const unTargetIdxs = concernedCellIdxs.filter(\n            idx => !this.isIdxInDuplicates(doubleExclusiveCellIdxs, idx)\n          );\n\n          if (unTargetIdxs.length === 1) {\n            for (let num of assignedNums) {\n              const cellInfo = this.initCellInfo(unTargetIdxs[0], num);\n              const status = this.getCandidateStatus(candidates, cellInfo);\n              if (this.isNarrowCandidate(status)) {\n                cellInfo.prevStatus = status;\n                cellInfo.status = Config.candidateStatus.removable;\n\n                candidates = this.assignRemovable2Candidates(\n                  candidates,\n                  cellInfo\n                );\n\n                candidateTrace.push(cellInfo);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // a case that two nums form double exclusive //\n    if (assignedNums.length === 3) {\n      let targetCellInfos4nums = assignedNums.map(num => {\n        return {\n          idxs: targetCellIdxs.filter(idx =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            )\n          ),\n          num: num\n        };\n      });\n\n      const targetCellInfos4nums2 = targetCellInfos4nums.filter(\n        cellInfo => cellInfo.idxs.length === 2\n      );\n\n      if (\n        targetCellInfos4nums2.length === 2 &&\n        this.isTwoIdxSetsSame(\n          targetCellInfos4nums2[0].idxs,\n          targetCellInfos4nums2[1].idxs\n        )\n      ) {\n        markerInfo.nums = targetCellInfos4nums2.map(cellInfo => cellInfo.num);\n\n        markerInfo.prevStatuses = [];\n        for (let num of markerInfo.nums) {\n          const tmpMarkerInfo = this.initMarkerInfo(markerInfo.idx, num);\n          const idx = this.findNumInMarker(markerNums, tmpMarkerInfo);\n\n          if (idx) {\n            tmpMarkerInfo.idx = idx;\n            markerInfo.prevStatuses.push(this.getMarkerStatus(markerNums, idx));\n          } else {\n            markerInfo.prevStatuses.push(null);\n          }\n        }\n\n        markerNums = this.assignExclusiveDouble2MarkerNums(\n          markerNums,\n          markerInfo\n        );\n\n        markerInfo.status = Config.candidateStatus.exclusiveDouble;\n\n        markerTrace.push(markerInfo);\n      }\n\n      const targetCellInfos = targetCellIdxs.map(idx => {\n        return {\n          idx: idx,\n          nums: assignedNums.filter(num =>\n            this.isNarrowCandidate(\n              this.getCandidateStatus(candidates, this.initCellInfo(idx, num))\n            )\n          )\n        };\n      });\n\n      const selectableCellInfos = targetCellInfos.filter(\n        cellInfo => cellInfo.nums.length === 1\n      );\n\n      for (let selectableCellInfo of selectableCellInfos) {\n        markerInfo.nums = selectableCellInfo.nums;\n\n        markerNums = this.assignSelectable2MarkerNums(markerNums, markerInfo);\n\n        const removableCellIdxs = targetCellIdxs.filter(\n          idx => !this.isTwoIdxsSame(selectableCellInfo.idx, idx)\n        );\n\n        for (let idx of removableCellIdxs) {\n          const cellInfo = this.initCellInfo(idx, selectableCellInfo.nums[0]);\n          const status = this.getCandidateStatus(candidates, cellInfo);\n\n          if (!this.isNarrowCandidate(status)) {\n            continue;\n          }\n\n          // if (this.isNarrowCandidate(status)) {\n          cellInfo.prevStatus = status;\n          cellInfo.status = Config.candidateStatus.removable;\n\n          candidates = this.assignRemovable2Candidates(candidates, cellInfo);\n\n          candidateTrace.push(cellInfo);\n          // }\n        }\n      }\n    }\n\n    return [candidates, markerNums, candidateTrace, markerTrace];\n  }\n\n  static isNewStatusHigher(oldStatus, newStatus) {\n    return (\n      Config.narrowCandidateList.indexOf(oldStatus) <\n      Config.narrowCandidateList.indexOf(newStatus)\n    );\n  }\n\n  static isSingleNumCandidateCell(appearanceMatrix, idx) {\n    return [\n      Config.candidateStatus.candidate,\n      Config.candidateStatus.exclusive\n    ].includes(appearanceMatrix[idx.r][idx.c]);\n  }\n\n  static isInExclusiveCandidates(exclusiveCandidates, targetCellInfo) {\n    return this.isInCellInfoArray(exclusiveCandidates, targetCellInfo);\n  }\n\n  static isInCellInfoArray(cellInfoArray, targetCellInfo) {\n    for (let cellInfo of cellInfoArray) {\n      if (this.isTwoIdxsSame(cellInfo, targetCellInfo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isInCellInfoArrayIgnoringRCBInfo(cellInfoArray, targetCellInfo) {\n    let ary = [];\n    let target = {};\n    const removingKeys = [\"rcbIdx\", \"type\"];\n    if (Object.keys(targetCellInfo).includes(\"rcbIdx\")) {\n      target = this.deepCopy(targetCellInfo);\n      removingKeys.forEach(keyName => delete target[keyName]);\n\n      ary = this.deepCopy(cellInfoArray);\n      ary.forEach(item =>\n        removingKeys.forEach(keyName => delete item[keyName])\n      );\n    } else {\n      target = targetCellInfo;\n      ary = cellInfoArray;\n    }\n\n    for (let cellInfo of ary) {\n      if (this.isTwoIdxsSame(cellInfo, target)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isInExclusiveSquareCandidates(exSquares, cellInfo) {\n    const targetIdxs = this.flattenMatrix2Array(cellInfo.idxsArray);\n\n    for (let exSquare of exSquares) {\n      const idxs = this.flattenMatrix2Array(exSquare.idxsArray);\n\n      if (\n        targetIdxs.reduce(\n          (isSame, tIdx) => this.isInCellInfoArray(idxs, tIdx) && isSame,\n          true\n        )\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static convertRemovable2Removed(candidates) {\n    // console.log(\"inside: convertRemovable2Removed\");\n\n    return candidates.map(row =>\n      row.map(cell =>\n        cell.map(status =>\n          status === Config.candidateStatus.removable\n            ? Config.candidateStatus.removed\n            : status\n        )\n      )\n    );\n  }\n\n  static removeNullsFromArray(ary) {\n    return ary.filter(x => x !== null);\n  }\n\n  static removeNullsFromNumbersWithIndex(ary) {\n    return ary.filter(x => x.num !== null);\n  }\n\n  static removeNullsFromCellInfo(cellInfoArray) {\n    return cellInfoArray.filter(x => x.num !== null);\n  }\n\n  static convertShortBRC(type) {\n    return Config.restrictionTypesShort[type];\n  }\n\n  static convertLingBRC(rcType) {\n    return Config.invBRC[rcType];\n  }\n\n  static flipRowCol(rc) {\n    return rc === \"row\" ? \"col\" : \"row\";\n  }\n\n  static flipRCType(rcType) {\n    return rcType === \"r\" ? \"c\" : \"r\";\n  }\n\n  static getUnionSizes(max = Config.maxUnionSize) {\n    return this.getIndexSequence(max - 1).map(i => i + 2);\n  }\n\n  static getRCTypeFromCellInfo(cellInfo) {\n    for (let rcType of Config.restrictionTypesStraightShortArray) {\n      if (cellInfo.rcbTypes[rcType]) {\n        return rcType;\n      }\n    }\n\n    return null;\n  }\n\n  static convertRCType2Direction(rcType) {\n    return Config.invBRC[rcType];\n  }\n\n  static getFirstLetter(s) {\n    return s.slice(0, 1);\n  }\n\n  static getLastLetter(s) {\n    return s.slice(-1);\n  }\n\n  static removeLastLetter(s) {\n    return s.slice(0, s.length - 1);\n  }\n\n  static getCellNumClass(num, appearance = null, isSubCell = false) {\n    let clsName = \"\";\n    if (num !== null) {\n      if (isSubCell) {\n        clsName = Config.panelClassNames.cellNum + num;\n      } else {\n        clsName = Config.candidateStatus.selected + num;\n      }\n    }\n\n    if (appearance !== null) {\n      if (appearance.includes(Config.candidateStatus.inhibited)) {\n        clsName = appearance;\n      } else {\n        clsName += this.capitalize(appearance);\n      }\n    }\n\n    return clsName;\n  }\n\n  static getCandidateLevelTitle(level) {\n    return this.capitalize(level.slice(0, 1) + level.slice(-1));\n  }\n\n  static getLevelNum(level) {\n    if (Config.candidateControlArray.includes(level)) {\n      return level;\n    }\n    return parseInt(level.slice(-1));\n  }\n\n  static getLevelNumFromFunctionName(functionName) {\n    return Config.candidateLevelTypesArray.indexOf(functionName);\n  }\n\n  static getSingleNumBtnId(level) {\n    return Config.buttonIds.singleNumButton + Util.capitalize(level);\n  }\n\n  // warned not use eval //\n  // static fillBlockIdTemplate = function(templateString, n) {\n  //   // return new Function(\"return `\" + templateString + \"`;\").call(n);\n  //   return eval(\"`\" + templateString + \"`\");\n  // };\n\n  // not work nicely as I expected\n  // static interpolate = function(template, ...expressions) {\n  //   return template.reduce((accumulator, part, i) => {\n  //     return accumulator + expressions[i - 1] + part;\n  //   });\n  // };\n\n  static appendNum(str, num) {\n    return str + num;\n  }\n\n  static getUnionNumbers(numSet) {\n    const numsArray = this.flattenMatrix2Array(numSet);\n    return this.removeDuplicatedNumbers(numsArray).sort();\n  }\n\n  static getUnionIndices(idxSet) {\n    const idxsArray = idxSet.reduce((ary, idxs) => ary.concat(idxs), []);\n    return this.removeDuplicatedIndices(idxsArray);\n  }\n\n  static getCandidateLevelId(level) {\n    return Config.buttonIds.candidateLevels + this.capitalize(level);\n  }\n\n  static getControlId(type) {\n    return Config.buttonIds.controls + this.capitalize(type);\n  }\n\n  static capitalize(str) {\n    if (str !== null && str.length > 0) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    return null;\n  }\n\n  static decapitalize(str) {\n    if (str !== null && str.length > 0) {\n      return str.charAt(0).toLowerCase() + str.slice(1);\n    }\n    return null;\n  }\n\n  static flattenMatrix2Array(m) {\n    return Array.prototype.concat.apply([], m);\n  }\n\n  static convNumMatrix2CSV(numMatrix) {\n    const numMatrix0 = this.convNull2Zero(numMatrix);\n    const lines = numMatrix0.map(row => row.join(\",\"));\n    let data = \"\";\n\n    for (let line of lines) {\n      data += line + \"\\n\";\n    }\n\n    return data;\n  }\n\n  static deepCopy(org) {\n    return JSON.parse(JSON.stringify(org));\n  }\n\n  // Function to download data to a file\n  static download(data, filename, type) {\n    var file = new Blob([data], { type: type });\n    if (window.navigator.msSaveOrOpenBlob)\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    else {\n      // Others\n      var a = document.createElement(\"a\"),\n        url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeout(function() {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  // static saveFile(text, filename) {\n  //   // var text = $(\"#textarea\").val();\n  //   // var filename = $(\"#input-fileName\").val()\n  //   var blob = new Blob( [text], { type: \"text/plain;charset=utf-8\" } );\n  //   saveAs(blob, filename + \".txt\");\n  // }\n}\n\nexport default Util;\n","import React, { Component } from \"react\";\n\nimport Cell from \"./Cell\";\n\nimport Util from \"../Util\";\nimport Config from \"../Config\";\n\nclass NumPanelBlock extends Component {\n  render() {\n    const {\n      blockId,\n      candidateLevel,\n      blockClass,\n      cellIdBase,\n      cellClass,\n      inhibitedClass,\n      appearanceArray,\n      onClickFunc\n    } = this.props;\n\n    const numArray = Util.getNsequence(Config.size);\n    let cellLabels = [];\n    let clsNames = [];\n\n    for (const [i, num] of numArray.entries()) {\n      cellLabels.push(cellIdBase + num);\n\n      let clsName = [cellClass, Util.getCellNumClass(num, null, true)].join(\n        \" \"\n      );\n\n      if (appearanceArray && appearanceArray[i] !== null) {\n        if (\n          candidateLevel ===\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.displayCandidates\n          )\n        ) {\n          let appearance = appearanceArray[i];\n          if (Config.wideExclusiveStatuses.includes(appearanceArray[i])) {\n            appearance = Config.candidateStatus.candidate;\n          }\n          clsName = [clsName, appearance].join(\" \");\n        } else {\n          clsName = [clsName, appearanceArray[i]].join(\" \");\n        }\n      }\n\n      if (inhibitedClass) {\n        clsName = [clsName, inhibitedClass].join(\" \");\n      }\n\n      clsNames.push(clsName);\n    }\n\n    const cells = numArray.map((num, i) => {\n      return (\n        <Cell\n          key={cellLabels[i]}\n          cellId={cellLabels[i]}\n          num={num}\n          onClick={onClickFunc}\n          clsName={clsNames[i]}\n        />\n      );\n    });\n\n    return (\n      <div id={blockId} className={blockClass}>\n        {cells}\n      </div>\n    );\n  }\n}\n\nexport default NumPanelBlock;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\nimport NumPanelBlock from \"../NumPanelBlock\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cell.css\";\n\nclass CellContainer extends Component {\n  render() {\n    const {\n      candidateLevel,\n      cellId,\n      lastCandidate,\n      appearanceSubCellArray,\n      appearanceSmallCell,\n      inhibitedClass,\n      onCellClick,\n      handleCandidateCell\n    } = this.props;\n\n    // console.log(\"inside CellContainer\");\n\n    const blockId = cellId + Util.capitalize(Config.panelIds.block);\n\n    let clsName = [Config.panelClassNames.smallCell, appearanceSmallCell].join(\n      \" \"\n    );\n    if (inhibitedClass) {\n      clsName = [clsName, inhibitedClass].join(\" \");\n    }\n\n    return (\n      <div\n        id={cellId + Config.panelIds.cellContainerSuffix}\n        className={Config.panelClassNames.cellContainer}\n      >\n        <NumPanelBlock\n          blockId={blockId}\n          candidateLevel={candidateLevel}\n          blockClass={Config.panelClassNames.subBlock}\n          cellIdBase={cellId + Config.panelIds.numPanelCell}\n          cellClass={Config.panelClassNames.subCell}\n          inhibitedClass={inhibitedClass}\n          appearanceArray={appearanceSubCellArray}\n          onClickFunc={handleCandidateCell}\n        />\n        <Cell\n          key={cellId}\n          cellId={cellId}\n          lastCandidate={lastCandidate}\n          onClick={inhibitedClass ? null : onCellClick}\n          clsName={clsName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CellContainer;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/cellColor.css\";\n\nclass Marker extends Component {\n  getCells = (cellIdBase, markerInfos) => {\n    const { markerStatus, onClickFunc, candidateLevel } = this.props;\n\n    const onClick =\n      markerStatus === Config.buttonStatus.active ? onClickFunc : null;\n    const cellClass = \"markCell\";\n\n    const numArray = Util.getNsequence(Config.sizeB);\n\n    let nums = markerInfos.nums;\n    if (!nums || nums.length !== Config.sizeB) {\n      nums = Util.initArray(null, Config.sizeB);\n    }\n\n    let clsNames = nums.map((n, i) =>\n      [cellClass, markerStatus, Util.getCellNumClass(n, null, true)].join(\" \")\n    );\n\n    if (\n      candidateLevel >\n      Util.getLevelNumFromFunctionName(Config.candidateTypes.displayCandidates)\n    ) {\n      clsNames = clsNames.map((clsName, i) =>\n        markerStatus === Config.buttonStatus.waiting ||\n        markerInfos.statuses[i] === null ||\n        markerInfos.statuses[i] === Config.candidateStatus.exclusiveSingle\n          ? clsName\n          : [clsName, markerInfos.statuses[i]].join(\" \")\n      );\n    }\n\n    let cellLabels = numArray.map(n => cellIdBase + \"I\" + n);\n    const cells = cellLabels.map((cellLabel, i) => {\n      return (\n        <Cell\n          key={cellLabel}\n          cellId={cellLabel}\n          num={markerStatus === Config.buttonStatus.active ? nums[i] : null}\n          onClick={onClick}\n          clsName={clsNames[i]}\n        />\n      );\n    });\n    return cells;\n  };\n\n  render() {\n    const { rowColType, blockId, markerNums } = this.props;\n\n    const rcType = Util.getFirstLetter(rowColType);\n    const wrapperBase = \"markWrapper\";\n    const rowColClass = \"mark\" + Util.capitalize(rowColType);\n    const idBase = rowColType;\n    const idBaseShort = Util.capitalize(Util.getFirstLetter(idBase));\n    const rowColIdBase = Util.abbreviateBlockId(blockId) + idBaseShort;\n    const wrapperId =\n      wrapperBase + Util.capitalize(blockId) + Util.capitalize(idBase);\n    const wrapperClass = wrapperBase + Util.capitalize(idBase);\n    const blockIdx = Util.getBlockIdxFromBlockId(blockId);\n    const rowColIndices = Util.getBlkRowColIndicesFromIdx(blockIdx, rowColType);\n    const rowColNIndices = rowColIndices.map(i => i + 1);\n    const cellIdBases = rowColNIndices.map(rc => rowColIdBase + rc);\n\n    const rowCols = rowColNIndices.map((nRC, i) => {\n      const markerIdx = Util.initMarkerIdx(blockIdx, rcType, nRC - 1);\n      const markerInfos = Util.getInfoArrayFromMarkerNums(\n        markerNums,\n        markerIdx\n      );\n      const cells = this.getCells(cellIdBases[i], markerInfos);\n\n      return (\n        <div\n          key={rowColIdBase + nRC}\n          id={rowColIdBase + nRC}\n          className={rowColClass}\n        >\n          {cells}\n        </div>\n      );\n    });\n\n    return (\n      <div id={wrapperId} className={wrapperClass}>\n        {rowCols}\n      </div>\n    );\n  }\n}\n\nexport default Marker;\n","import React, { Component } from \"react\";\n\nimport Cell from \"../Cell\";\nimport CellContainer from \"./CellContainer\";\nimport Marker from \"./Marker\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass BoardBlock extends Component {\n  render() {\n    const {\n      mode,\n      helpMode,\n      blockId,\n      singleNumValue,\n      multipleNums,\n      candidates,\n      candidateLevel,\n      markerStatus,\n\n      numArray,\n      appearanceArray,\n      markerNums,\n      cellLabels,\n      clsNames,\n\n      showFloating,\n      handleNumInsert,\n      handleCandidateCell,\n      handleMarkerCell\n    } = this.props;\n\n    // console.log(\"inside BoardBlock\");\n\n    const displayNums =\n      helpMode === Config.helpMode.multipleNums\n        ? multipleNums\n        : [singleNumValue];\n    const blockWrapperId = blockId + \"wrapper\";\n    const blockWrapperClass = \"blockWrapper\";\n    let inhibitedClass = null;\n\n    const cells = numArray.map((num, i) => {\n      let cell = null;\n\n      if (\n        [\n          Config.helpMode.candidates,\n          Config.helpMode.both,\n          Config.helpMode.multipleNums\n        ].includes(helpMode) &&\n        num === null\n      ) {\n        const cellIdx = Util.R1C12Index(cellLabels[i]);\n        let candidateArray = Util.getCandidateStatusArray(candidates, cellIdx);\n\n        if (\n          [Config.helpMode.both, Config.helpMode.multipleNums].includes(\n            helpMode\n          ) &&\n          candidateLevel >\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.displayCandidates\n            )\n        ) {\n          candidateArray = candidateArray.map((status, j) =>\n            displayNums.includes(Util.i2n(j)) || Util.isWideRemoved(status)\n              ? status\n              : Config.candidateStatus.weaklyShadowed\n          );\n        }\n\n        let appearanceSmallCell = null;\n        let onClickFunc = showFloating;\n\n        if (\n          helpMode !== Config.helpMode.multipleNums &&\n          0 < singleNumValue &&\n          singleNumValue <= Config.size\n        ) {\n          onClickFunc = handleNumInsert;\n        }\n\n        inhibitedClass = null;\n        if (\n          [Config.helpMode.both, Config.helpMode.multipleNums].includes(\n            helpMode\n          ) &&\n          appearanceArray[i].includes(Config.candidateStatus.inhibited)\n        ) {\n          inhibitedClass = appearanceArray[i];\n        }\n\n        const singleCandidate = Util.getSingleCandidate(candidates, cellIdx);\n        const isSelectable = Util.isSelectableCell(candidates, cellIdx);\n\n        if (singleCandidate || isSelectable) {\n          onClickFunc = handleNumInsert;\n        }\n\n        if (Util.isSelectableCell(candidates, cellIdx)) {\n          appearanceSmallCell = Config.candidateStatus.selectable;\n        }\n\n        cell = (\n          <CellContainer\n            key={cellLabels[i]}\n            cellId={cellLabels[i]}\n            candidateLevel={candidateLevel}\n            lastCandidate={singleCandidate}\n            appearanceSubCellArray={candidateArray}\n            appearanceSmallCell={appearanceSmallCell}\n            inhibitedClass={inhibitedClass}\n            onCellClick={onClickFunc}\n            handleCandidateCell={handleCandidateCell}\n            clsName={clsNames[i]}\n          />\n        );\n      } else {\n        let onClickFunc = showFloating;\n        if (helpMode !== Config.helpMode.multipleNums && singleNumValue) {\n          onClickFunc =\n            mode === Config.mode.set ||\n            !appearanceArray[i].includes(Config.candidateStatus.shadowed)\n              ? handleNumInsert\n              : null;\n        }\n\n        cell = (\n          <Cell\n            key={cellLabels[i]}\n            cellId={cellLabels[i]}\n            num={num}\n            onClick={onClickFunc}\n            clsName={clsNames[i]}\n          />\n        );\n      }\n      return cell;\n    });\n\n    const markOnClickFunc =\n      helpMode !== Config.helpMode.multipleNums && singleNumValue\n        ? handleMarkerCell\n        : showFloating;\n\n    return (\n      <div\n        key={blockWrapperId}\n        id={blockWrapperId}\n        className={blockWrapperClass}\n      >\n        <Marker\n          key={blockId + \"markRow\"}\n          markerStatus={markerStatus}\n          blockId={blockId}\n          rowColType=\"row\"\n          markerNums={markerNums}\n          candidateLevel={candidateLevel}\n          onClickFunc={markOnClickFunc}\n        />\n\n        <div id={blockId} className={Config.panelClassNames.block}>\n          {cells}\n        </div>\n\n        <div />\n        <Marker\n          key={blockId + \"markCol\"}\n          markerStatus={markerStatus}\n          blockId={blockId}\n          rowColType=\"col\"\n          markerNums={markerNums}\n          candidateLevel={candidateLevel}\n          onClickFunc={markOnClickFunc}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BoardBlock;\n","import React, { Component } from \"react\";\n\nimport BoardBlock from \"./BoardBlock\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nimport \"../../css/SudokuBoard.css\";\n\nclass SudokuBoard extends Component {\n  render() {\n    const {\n      mode,\n      helpMode,\n      checkMode,\n      numMatrix,\n      candidates,\n      isRegisteredMatrix,\n      duplicates,\n      singleNumValue,\n      multipleNums,\n      candidateLevel\n    } = this.props;\n\n    // console.log(\"inside SudokuBoard\");\n    // console.log(\"helpMode: \", helpMode);\n    // console.log(\"singleNumValue: \", singleNumValue);\n    // console.log(\"multipleNums\");\n    // console.log(multipleNums);\n\n    const numbers = Util.getNsequence(Config.size);\n\n    let appearanceMatrix = [];\n    if (\n      mode === Config.mode.play &&\n      [Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode)\n    ) {\n      // console.log(\"I want to see this\");\n\n      appearanceMatrix = Util.getAppearanceMatrixFromCandidates(\n        candidates,\n        // helpMode,\n        [singleNumValue],\n        candidateLevel\n      );\n    } else if (\n      helpMode === Config.helpMode.multipleNums &&\n      multipleNums &&\n      multipleNums.length > 0\n    ) {\n      appearanceMatrix = Util.getAppearanceMatrixFromCandidates(\n        candidates,\n        // helpMode,\n        multipleNums,\n        candidateLevel\n      );\n    } else if (singleNumValue !== null && singleNumValue !== 0) {\n      appearanceMatrix = Util.getAppearanceMatrixFromNumMatrix(numMatrix);\n    }\n\n    // console.log(\"inside render of SudokuBoard\");\n\n    const blocks = numbers.map(blockNum => {\n      const blockId = Util.getBlockIdByNum(blockNum);\n      const cellIndices = Util.getBlkIndicesFromNum(blockNum);\n      const numArray = Util.getNumbersFromIndices(numMatrix, cellIndices);\n      const isRegisteredArray = Util.getNumbersFromIndices(\n        isRegisteredMatrix,\n        cellIndices\n      );\n\n      let isDuplicatedArray = [];\n      if (checkMode !== Config.checkMode.none && duplicates) {\n        isDuplicatedArray = Util.getIsDuplicatedFromIndices(\n          duplicates,\n          cellIndices\n        );\n      }\n\n      const appearanceArray =\n        appearanceMatrix && appearanceMatrix.length === Config.size\n          ? Util.getNumbersFromIndices(appearanceMatrix, cellIndices)\n          : Util.initArray(null);\n\n      const cellLabels = cellIndices.map(idx => Util.index2R1C1(idx));\n\n      const clsNames = numArray.map((num, i) => {\n        let clsName = Config.panelClassNames.cell;\n        const appearanceClass =\n          appearanceArray[i] === null || appearanceArray[i] === \"\"\n            ? Util.getCellNumClass(num, appearanceArray[i])\n            : appearanceArray[i];\n        clsName = [clsName, appearanceClass].join(\" \");\n\n        if (isRegisteredArray[i]) {\n          clsName = [clsName, Config.registered].join(\" \");\n        }\n        if (isDuplicatedArray[i]) {\n          clsName = [clsName, Config.duplicated].join(\" \");\n        }\n        return clsName;\n      });\n\n      return (\n        <BoardBlock\n          key={blockId}\n          blockId={blockId}\n          numArray={numArray}\n          appearanceArray={appearanceArray}\n          cellLabels={cellLabels}\n          clsNames={clsNames}\n          {...this.props}\n        />\n      );\n    });\n\n    return <div id={Config.panelIds.sudokuBoard}>{blocks}</div>;\n  }\n}\n\nexport default SudokuBoard;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass NewGame extends Component {\n  render() {\n    const { lang, handleNewGame } = this.props;\n\n    return (\n      <div\n        id={Config.buttonIds.newGame}\n        className={Config.buttonClassNames.newGame}\n        onClick={handleNewGame}\n      >\n        {Config.buttonTitles.newGame[lang]}\n      </div>\n    );\n  }\n}\n\nexport default NewGame;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass SampleGames extends Component {\n  render() {\n    const { lang, gameLevel, handleSampleGames } = this.props;\n\n    // console.log(\"inside SampleGames\");\n\n    const buttonSet = Util.getSampleGameList().map(level => {\n      const innerWrapperId =\n        Config.buttonIds.sampleGameInnerWrapper + Util.capitalize(level);\n      const innerWrapperClass = Config.buttonClassNames.sampleGameInnerWrapper;\n\n      const buttons = Config.sampleGames[level].map((_, i) => {\n        const buttonId = Util.getSampleGameButtonId(level, i);\n\n        let btnClsName = Config.buttonClassNames.sampleGameButton;\n\n        const buttonTitle = Util.getSampleGameButtonLabel(level, i);\n\n        if (gameLevel === buttonId) {\n          btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n        }\n\n        let title = Util.getSampleGameButtonTitle(level, i, lang);\n\n        return (\n          <button\n            key={buttonId}\n            id={Config.buttonIds.sampleGame + Util.capitalize(buttonId)}\n            className={btnClsName}\n            title={title}\n            onClick={() => handleSampleGames(buttonId)}\n          >\n            {buttonTitle}\n          </button>\n        );\n      });\n\n      return (\n        <div\n          key={innerWrapperId}\n          id={innerWrapperId}\n          className={innerWrapperClass}\n        >\n          {buttons}\n        </div>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.sampleGameWrapper}\n        className={Config.buttonClassNames.sampleGameFrame}\n      >\n        <div>\n          <h3>{Config.buttonTitles.sampleGames[lang]}</h3>\n        </div>\n        <div className={Config.buttonClassNames.sampleGameWrapper}>\n          {buttonSet}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SampleGames;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass Restart extends Component {\n  render() {\n    const { lang, mode, trace, handleRestart } = this.props;\n\n    return (\n      <button\n        id={Config.buttonIds.restart}\n        className={Config.buttonClassNames.restart}\n        onClick={handleRestart}\n        disabled={mode === Config.mode.set || trace.length === 0 ? true : null}\n      >\n        {Config.buttonTitles.restart[lang]}\n      </button>\n    );\n  }\n}\n\nexport default Restart;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass SetUp extends Component {\n  render() {\n    const { lang, mode, handleSetUp } = this.props;\n\n    let buttonTitle = Config.buttonTitles.setup[lang];\n    if (mode === Config.mode.play) {\n      buttonTitle = Config.buttonTitles.edit[lang];\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.setup}\n        className={Config.buttonClassNames.setup}\n        onClick={handleSetUp}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default SetUp;\n","import React, { Component } from \"react\";\n\nimport NewGame from \"./NewGame\";\nimport SampleGames from \"./SampleGames\";\nimport Restart from \"./Restart\";\nimport SetUp from \"./SetUp\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ControlPanel.css\";\n\nclass ControlPanel extends Component {\n  render() {\n    const { lang } = this.props;\n\n    return (\n      <div\n        id={Config.panelIds.control}\n        className={Config.panelClassNames.control}\n      >\n        <h2>{Config.panelTitles.control[lang]}</h2>\n        <NewGame {...this.props} />\n        <SetUp {...this.props} />\n        <SampleGames {...this.props} />\n        <Restart {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default ControlPanel;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\nimport Util from \"../../Util\";\n\nclass Check extends Component {\n  getButton = level => {\n    const { lang, mode, checkMode, handleCheck } = this.props;\n\n    const myself = this.constructor.name.toLowerCase();\n    const label = Config.checkButtonLabels[level][lang];\n    const titleCaption = Config.checkTitleCaptions[level][lang];\n    let disabled = true;\n    let btnClsName = Config.buttonClassNames.checkButton;\n\n    if (level !== Config.checkMode.none && level === checkMode) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      [Config.checkMode.none, Config.checkMode.duplicates].includes(level) ||\n      mode === Config.mode.play\n    ) {\n      disabled = null;\n    }\n\n    return (\n      <button\n        key={level}\n        id={Config.buttonIds[myself] + Util.capitalize(level)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleCheck(level)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  render() {\n    const { lang, checkMode } = this.props;\n\n    // console.log(\"inside Check\");\n\n    let clsName = Config.buttonClassNames.candidateContainer;\n\n    let titleClassName = Config.buttonClassNames.checkTitle;\n    if (checkMode !== Config.checkMode.none) {\n      titleClassName = [titleClassName, Config.buttonStatus.active].join(\" \");\n    }\n\n    const buttons = Config.checkModeArray.map(type => this.getButton(type));\n\n    return (\n      <div id={Config.buttonIds.check} className={clsName}>\n        <div>\n          <h3 className={titleClassName}>\n            {Config.checkButtonLabels.title[lang]}\n          </h3>\n        </div>\n        <div\n          id={Config.buttonIds.checkWrapper}\n          className={Config.buttonClassNames.candidateButtonWrapper}\n        >\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Check;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nclass HelpModeButtons extends Component {\n  getButton = type => {\n    const { lang, mode, helpMode, handleHelpMode } = this.props;\n\n    // const myself = this.constructor.name.toLowerCase();\n    let disabled = true;\n\n    let btnClsName = Config.helpModeButtonClassNames[type];\n    if (\n      helpMode !== Config.helpMode.none &&\n      (helpMode === type ||\n        helpMode === Config.helpMode.both ||\n        helpMode === Config.helpMode.multipleNums)\n    ) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      mode === Config.mode.play &&\n      !(type === Config.helpMode.none && helpMode === Config.helpMode.none)\n    ) {\n      disabled = null;\n    }\n\n    const buttonType =\n      type === Config.helpMode.multipleNums ? Config.helpMode.singleNum : type;\n    const id = Config.helpModeButtonIds[buttonType];\n    let title = Config.helpModeCaptions[buttonType][lang];\n\n    if (type === Config.helpMode.singleNum) {\n      if (helpMode === Config.helpMode.singleNum) {\n        title = Config.helpModeCaptions[Config.helpMode.none][lang];\n      } else if (helpMode === Config.helpMode.candidates) {\n        title = Config.helpModeCaptions[Config.helpMode.both][lang];\n      } else if (helpMode === Config.helpMode.both) {\n        title = Config.helpModeCaptions[Config.helpMode.multipleNums][lang];\n      }\n    } else if (type === Config.helpMode.multipleNums) {\n      title = Config.helpModeCaptions[Config.helpMode.none][lang];\n    } else if (type === Config.helpMode.candidates) {\n      if (helpMode === Config.helpMode.candidates) {\n        title = Config.helpModeCaptions[Config.helpMode.none][lang];\n      } else if (helpMode === Config.helpMode.singleNum) {\n        title = Config.helpModeCaptions[Config.helpMode.both][lang];\n      }\n    }\n\n    return (\n      <button\n        key={id}\n        id={id}\n        className={btnClsName}\n        title={title}\n        onClick={() => handleHelpMode(type)}\n        disabled={disabled}\n      >\n        {Config.helpModeButtonLabels[type][lang]}\n      </button>\n    );\n  };\n\n  render() {\n    const { helpMode } = this.props;\n\n    const buttonTypes =\n      helpMode === Config.helpMode.multipleNums\n        ? Config.helpModeArray4displayOnMultipleNums\n        : Config.helpModeArray4display;\n    // let clsName = Config.helpModeButtonClassNames.container;\n\n    // if (mode !== Config.mode.play) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    const buttons = buttonTypes.map(type => this.getButton(type));\n\n    return (\n      <div\n        id={Config.helpModeButtonIds.wrapper}\n        className={Config.helpModeButtonClassNames.wrapper}\n      >\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default HelpModeButtons;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass SingleNum extends Component {\n  render() {\n    const { helpMode, singleNumValue, numCounts, handleSingleNum } = this.props;\n\n    const radios = Util.getIndexSequence(Config.size + 1).map(num => {\n      const id = Config.buttonIds.singleNumRadio + num;\n\n      let labelDivClassName = Config.panelClassNames.cellNum + num;\n      if (numCounts[num] === Config.size) {\n        labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 0);\n      }\n\n      let disabled = null;\n      if (\n        [Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode) &&\n        num === 0\n      ) {\n        disabled = true;\n      }\n\n      let labelClassName = null;\n      if (\n        numCounts[num] === Config.size ||\n        ([Config.helpMode.singleNum, Config.helpMode.both].includes(helpMode) &&\n          num === 0)\n      ) {\n        labelClassName = Config.buttonClassNames.singleNumDone;\n      } else if (numCounts[num] > Config.size) {\n        labelClassName = Config.buttonClassNames.singleNumExceeding;\n      }\n\n      return (\n        <label key={id} id={id} className={labelClassName}>\n          <div className={labelDivClassName}>{num > 0 ? num : \"-\"}</div>\n\n          <input\n            type=\"radio\"\n            name={Config.helpMode.singleNum}\n            value={num.toString()}\n            onChange={() => handleSingleNum(num)}\n            checked={singleNumValue === num}\n            disabled={disabled}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.singleNum}\n        className={Config.buttonClassNames.singleNumRadioWrapper}\n      >\n        {radios}\n      </div>\n    );\n  }\n}\n\nexport default SingleNum;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport \"../../../css/cell.css\";\n\nclass MultipleNums extends Component {\n  handleChange = event => {\n    const { handleMultipleNums } = this.props;\n\n    const num = parseInt(event.target.value);\n    // const checked = event.target.checked;\n\n    handleMultipleNums(num);\n  };\n\n  render() {\n    const { multipleNums, numCounts } = this.props;\n\n    const checkboxs = Util.getNsequence(Config.size).map(num => {\n      const id = Util.appendNum(Config.buttonIds.multipleNums, num);\n      const labelId = Util.appendNum(Config.buttonIds.multipleNumsLabel, num);\n      const checkboxId = Util.appendNum(\n        Config.buttonIds.multipleNumsCheckbox,\n        num\n      );\n\n      let labelDivClassName = Config.panelClassNames.cellNum + num;\n      if (numCounts[num] === Config.size) {\n        labelDivClassName = Util.appendNum(Config.panelClassNames.cellNum, 0);\n      }\n\n      let labelClassName = null;\n      if (numCounts[num] === Config.size) {\n        labelClassName = Config.buttonClassNames.multipleNumsDone;\n      } else if (numCounts[num] > Config.size) {\n        labelClassName = Config.buttonClassNames.multipleNumsExceeding;\n      }\n\n      const checked = multipleNums.includes(num);\n      const name = Util.appendNum(\"num\", num);\n\n      return (\n        <label key={id} id={id} className={labelClassName}>\n          <div key={labelId} className={labelDivClassName}>\n            {num > 0 ? num : \"-\"}\n          </div>\n\n          <input\n            type=\"checkbox\"\n            key={checkboxId}\n            name={name}\n            value={num.toString()}\n            onChange={this.handleChange}\n            checked={checked}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div\n        id={Config.buttonIds.multipleNums}\n        className={Config.buttonClassNames.multipleNumsCheckBoxWrapper}\n      >\n        {checkboxs}\n      </div>\n    );\n  }\n}\n\nexport default MultipleNums;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nclass CandidateLevels extends Component {\n  getButton = level => {\n    const {\n      lang,\n      mode,\n      helpMode,\n      candidateLevel,\n      handleCandidates: handleCandidateLevels\n    } = this.props;\n\n    const nLevel = Util.getLevelNum(level);\n    let disabled = true;\n    let label = \"\";\n    let titleCaption = \"\";\n    let btnClsName = Config.buttonClassNames.candidateButton;\n\n    label = Util.getCandidateLevelTitle(level);\n\n    if (helpMode === Config.helpMode.singleNum) {\n      if (Object.keys(Config.singleNumCaptions).includes(level)) {\n        titleCaption = Config.singleNumCaptions[level][lang];\n      }\n    } else {\n      titleCaption = Config.candidateLevelCaptions[level][lang];\n    }\n\n    if (Util.getLevelNum(level) === candidateLevel) {\n      btnClsName = [btnClsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    if (\n      mode === Config.mode.play &&\n      (helpMode === Config.helpMode.candidates ||\n        (helpMode === Config.helpMode.singleNum &&\n          nLevel <=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleExclusive\n            )) ||\n        ([\n          Config.helpMode.candidates,\n          Config.helpMode.both,\n          Config.helpMode.multipleNums\n        ].includes(helpMode) &&\n          nLevel <\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )))\n    ) {\n      disabled = null;\n    }\n\n    return (\n      <button\n        key={level}\n        id={Util.getCandidateLevelId(level)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleCandidateLevels(level)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  render() {\n    // const { mode, helpMode } = this.props;\n\n    // let clsName = Config.buttonClassNames.candidateContainer;\n\n    // if (\n    //   mode !== Config.mode.play ||\n    //   ![Config.helpMode.none, Config.helpMode.candidates].includes(helpMode)\n    // ) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    const buttons = Config.candidateLevels.map(candidateLevel =>\n      this.getButton(candidateLevel)\n    );\n\n    return (\n      <div\n        id={Config.buttonIds.candidates}\n        className={Config.buttonClassNames.candidateButtonWrapper}\n      >\n        {buttons}\n      </div>\n    );\n  }\n}\n\nexport default CandidateLevels;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport forwardLogo from \"../../../images/forward.svg\";\nimport forwardDisabledLogo from \"../../../images/forwardDisabled.svg\";\nimport fastForwardLogo from \"../../../images/fastForward.svg\";\nimport fastForwardDisabledLogo from \"../../../images/fastForwardDisabled.svg\";\nimport backwardLogo from \"../../../images/backward.svg\";\nimport backwardDisabledLogo from \"../../../images/backwardDisabled.svg\";\nimport rewindLogo from \"../../../images/rewind.svg\";\nimport rewindDisabledLogo from \"../../../images/rewindDisabled.svg\";\nimport selectLogo from \"../../../images/select.svg\";\nimport selectDisabledLogo from \"../../../images/selectDisabled.svg\";\nimport eraseLogo from \"../../../images/erase.svg\";\nimport eraseDisabledLogo from \"../../../images/eraseDisabled.svg\";\n\nclass Controls extends Component {\n  constructor() {\n    super();\n    this.state = { isSkipIneffective: true };\n  }\n\n  checkboxIsSkip = React.createRef();\n\n  getButton = controlType => {\n    const {\n      lang,\n      helpMode,\n      markerStatus,\n      trace,\n      candidateLevel,\n      handleControls\n    } = this.props;\n\n    let disabled = true;\n    let label = \"\";\n    let titleCaption = \"\";\n\n    const activeSymbols = {\n      [Config.candidateControls.forward]: forwardLogo,\n      [Config.candidateControls.fastForward]: fastForwardLogo,\n      [Config.candidateControls.backward]: backwardLogo,\n      [Config.candidateControls.reset]: rewindLogo,\n      [Config.candidateControls.select]: selectLogo,\n      [Config.candidateControls.erase]: eraseLogo\n    };\n\n    const disabledSymbols = {\n      [Config.candidateControls.forward]: forwardDisabledLogo,\n      [Config.candidateControls.fastForward]: fastForwardDisabledLogo,\n      [Config.candidateControls.backward]: backwardDisabledLogo,\n      [Config.candidateControls.reset]: rewindDisabledLogo,\n      [Config.candidateControls.select]: selectDisabledLogo,\n      [Config.candidateControls.erase]: eraseDisabledLogo\n    };\n\n    const iconSizeSmall = Config.candidateControlIconSizes.small;\n    const iconSizeLarge = Config.candidateControlIconSizes.large;\n    const iconStyleSmall = { width: iconSizeSmall, height: iconSizeSmall };\n    const iconStyleLarge = { width: iconSizeLarge, height: iconSizeLarge };\n\n    const iconStyles = {\n      [Config.candidateControls.forward]: iconStyleSmall,\n      [Config.candidateControls.fastForward]: iconStyleSmall,\n      [Config.candidateControls.backward]: iconStyleSmall,\n      [Config.candidateControls.reset]: iconStyleSmall,\n      [Config.candidateControls.select]: iconStyleLarge,\n      [Config.candidateControls.erase]: iconStyleLarge\n    };\n\n    let btnClsName = Config.buttonClassNames.candidateButton;\n\n    let symbol = disabledSymbols[controlType];\n\n    if (\n      ([\n        Config.candidateControls.backward,\n        Config.candidateControls.reset\n      ].includes(controlType) &&\n        trace.length > 0) ||\n      (controlType === Config.candidateControls.select &&\n        helpMode === Config.helpMode.candidates &&\n        markerStatus === Config.buttonStatus.active &&\n        candidateLevel >=\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.displayCandidates\n          )) ||\n      ([\n        Config.helpMode.candidates,\n        Config.helpMode.singleNum,\n        Config.helpMode.both,\n        Config.helpMode.multipleNums\n      ].includes(helpMode) &&\n        candidateLevel >=\n          Util.getLevelNumFromFunctionName(\n            Config.candidateTypes.singleCandidate\n          ))\n    ) {\n      symbol = activeSymbols[controlType];\n      disabled = null;\n    }\n\n    label = (\n      <img\n        src={symbol}\n        style={iconStyles[controlType]}\n        alt={Config.constrolIconCaptions[controlType][lang]}\n        title={Config.constrolIconCaptions[controlType][lang]}\n      />\n    );\n\n    return (\n      <button\n        key={controlType}\n        id={Util.getControlId(controlType)}\n        className={btnClsName}\n        title={titleCaption}\n        onClick={() => handleControls(controlType)}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    );\n  };\n\n  handleCheckbox = e => {\n    const { handleSkipIneffectiveStatus } = this.props;\n\n    const isSkipIneffective = e.currentTarget.checked;\n\n    this.setState({ isSkipIneffective });\n\n    handleSkipIneffectiveStatus(isSkipIneffective);\n  };\n\n  render() {\n    const { lang, mode, helpMode, candidateLevel } = this.props;\n\n    let disabled = true;\n    // let clsName = Config.buttonClassNames.candidateContainer;\n\n    // if (\n    //   mode !== Config.mode.play ||\n    //   ![Config.helpMode.none, Config.helpMode.candidates].includes(helpMode)\n    // ) {\n    //   clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    // }\n\n    if (\n      mode === Config.mode.play &&\n      helpMode === Config.helpMode.candidates &&\n      candidateLevel >\n        Util.getLevelNumFromFunctionName(\n          Config.candidateTypes.displayCandidates\n        )\n    ) {\n      disabled = null;\n    }\n\n    const buttons = Config.candidateControlArray.map(controlType =>\n      this.getButton(controlType)\n    );\n\n    return (\n      <div>\n        <div\n          id={Config.buttonIds.controls}\n          className={Config.buttonClassNames.candidateButtonWrapper}\n        >\n          {buttons}\n        </div>\n        <label\n          key={Config.buttonIds.controlLabelSkipIneffective}\n          id={Config.buttonIds.controlLabelSkipIneffective}\n          className={Config.buttonClassNames.controlSkipIneffective}\n        >\n          <input\n            type=\"checkbox\"\n            ref={this.checkboxIsSkip}\n            name={Config.formNames.skipIneffective}\n            onChange={this.handleCheckbox}\n            checked={this.state.isSkipIneffective}\n            disabled={disabled}\n          />\n          {Config.helpModeButtonLabels.skipIneffective[lang]}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../../Util\";\nimport Config from \"../../../Config\";\n\nimport HelpModeButtons from \"./HelpModeButtons\";\nimport SingleNum from \"./SingleNum\";\nimport MultipleNums from \"./MultipleNums\";\nimport CandidateLevels from \"./CandidatesLevels\";\nimport Controls from \"./Controls\";\n\nclass HelpModePane extends Component {\n  render() {\n    const { lang, mode, helpMode } = this.props;\n\n    let clsName = Config.helpModeButtonClassNames.container;\n\n    if (mode !== Config.mode.play) {\n      clsName = [clsName, Config.buttonClassNames.candidateDisabled].join(\" \");\n    }\n\n    let titleClassName = Config.buttonClassNames.candidateTitle;\n\n    const numPanel =\n      helpMode === Config.helpMode.multipleNums ? (\n        <MultipleNums {...this.props} />\n      ) : (\n        <SingleNum {...this.props} />\n      );\n\n    return (\n      <div id={Config.helpModeButtonIds.container} className={clsName}>\n        <div>\n          <h3 className={titleClassName}>\n            {Config.helpModeButtonLabels.title[lang]}\n          </h3>\n        </div>\n        <HelpModeButtons {...this.props} />\n        {numPanel}\n        <CandidateLevels {...this.props} />\n        <Controls {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default HelpModePane;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass MarkerButton extends Component {\n  render() {\n    const { lang, mode, markerStatus, handleMarker } = this.props;\n\n    let clsName = Config.buttonClassNames.marker;\n    if (markerStatus === Config.buttonStatus.active) {\n      clsName = [clsName, Config.buttonStatus.active].join(\" \");\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.marker}\n        className={clsName}\n        onClick={handleMarker}\n        disabled={mode === Config.mode.play ? null : true}\n      >\n        {Config.buttonTitles.marker[lang]}\n      </button>\n    );\n  }\n}\n\nexport default MarkerButton;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass LangButton extends Component {\n  render() {\n    const { lang, handleLang } = this.props;\n\n    // console.log(\"inside LangButton\");\n\n    let clsName = Config.buttonClassNames.lang;\n    const theOtherLang = Util.flipLang(lang);\n    const buttonTitle = Config.langButtonTitles[theOtherLang];\n\n    return (\n      <button\n        id={Config.buttonIds.lang}\n        className={clsName}\n        onClick={handleLang}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default LangButton;\n","import React, { Component } from \"react\";\n\n// import Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass HelpButton extends Component {\n  handleHelp = () => {\n    const { lang } = this.props;\n\n    const fileName = Config.helpFiles[lang];\n    const path = Config.helpPath + fileName;\n\n    // window.open(\"./help/help_ja.html\", \"_blank\");\n    window.open(path, \"_blank\");\n  };\n\n  render() {\n    const { lang } = this.props;\n\n    // console.log(\"inside HelpButton\");\n\n    let clsName = Config.buttonClassNames.help;\n\n    const buttonTitle = Config.buttonTitles.help[lang];\n\n    return (\n      <button\n        id={Config.buttonIds.help}\n        className={clsName}\n        onClick={this.handleHelp}\n      >\n        {buttonTitle}\n      </button>\n    );\n  }\n}\n\nexport default HelpButton;\n","import React, { Component } from \"react\";\n\nimport Check from \"./Check\";\nimport HelpModePane from \"./helpMode/HelpModePane\";\n// import HelpModeButtons from \"./helpMode/HelpModeButtons\";\n// import SingleNum from \"./helpMode/SingleNum\";\n// import CandidateLevels from \"./helpMode/CandidatesLevels\";\n// import Controls from \"./helpMode/Controls\";\nimport MarkerButton from \"./MarkerButton\";\nimport LangButton from \"./LangButton\";\nimport HelpButton from \"./HelpButton\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ControlPanel.css\";\n\nclass HelperlPanel extends Component {\n  render() {\n    const { lang } = this.props;\n\n    return (\n      <div\n        id={Config.panelIds.helper}\n        className={Config.panelClassNames.helper}\n      >\n        <h2>{Config.panelTitles.helper[lang]}</h2>\n        <Check {...this.props} />\n        <HelpModePane {...this.props} />\n        <MarkerButton {...this.props} />\n        <HelpButton {...this.props} />\n        <LangButton {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default HelperlPanel;\n","import React, { Component } from \"react\";\n\nimport Config from \"../Config\";\nimport Util from \"../Util\";\n\nimport \"../css/cell.css\";\nimport \"../css/cellColor.css\";\nimport \"../App.css\";\n\nclass Footer extends Component {\n  render() {\n    const { lang, gameLevel } = this.props;\n\n    const gameInfo = Util.getSampleGameInfo(gameLevel);\n\n    let credit = \"\";\n    if (gameInfo) {\n      credit = Util.getCredit(\n        Config.sampleGames[gameInfo.gameClass][gameInfo.idx].credit[lang],\n        lang\n      );\n    }\n\n    return (\n      <div\n        id={Config.panelIds.footer}\n        className={Config.panelClassNames.footer}\n      >\n        <span\n          id={Config.panelIds.footerCredit}\n          className={Config.panelClassNames.footerCredit}\n        >\n          {credit}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport Util from \"../../Util\";\nimport Config from \"../../Config\";\n\nclass Delete extends Component {\n  render() {\n    const { numMatrix, markerNums, activeCellIndex, handleDelete } = this.props;\n\n    let disabled = true;\n    if (activeCellIndex) {\n      if (typeof activeCellIndex.b !== \"undefined\") {\n        if (Util.isNumInMarker(markerNums, activeCellIndex)) {\n          disabled = null;\n        }\n      } else {\n        if (Util.isNumInCell(numMatrix, activeCellIndex)) {\n          disabled = null;\n        }\n      }\n    }\n\n    return (\n      <button\n        id={Config.buttonIds.delete}\n        onClick={handleDelete}\n        disabled={disabled}\n      >\n        {Config.buttonTitles.delete}\n      </button>\n    );\n  }\n}\n\nexport default Delete;\n","import React, { Component } from \"react\";\n\nimport Config from \"../../Config\";\n\nclass Cancel extends Component {\n  render() {\n    return (\n      <button id={Config.buttonIds.cancel} onClick={this.props.handleCancel}>\n        {Config.buttonTitles.cancel}\n      </button>\n    );\n  }\n}\n\nexport default Cancel;\n","import React, { Component } from \"react\";\n\nimport Delete from \"./Delete\";\nimport Cancel from \"./Cancel\";\n\nimport Config from \"../../Config\";\n\nclass NumPanelControl extends Component {\n  render() {\n    return (\n      <div id={Config.panelIds.numPanelControl}>\n        <Delete {...this.props} />\n        <Cancel {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default NumPanelControl;\n","import React, { Component } from \"react\";\n\nimport NumPanelBlock from \"../NumPanelBlock\";\nimport NumPanelControl from \"./NumPanelControl\";\n\nimport Config from \"../../Config\";\n\nclass NumPanel extends Component {\n  render() {\n    const { handleNumPanelClick } = this.props;\n\n    return (\n      <div id={Config.panelIds.numPanelContainer}>\n        <NumPanelBlock\n          key={Config.panelIds.numPanel}\n          blockId={Config.panelIds.numPanel}\n          blockClass={Config.panelClassNames.block}\n          cellIdBase={Config.panelIds.numPanelCell}\n          cellClass={Config.panelClassNames.cell}\n          onClickFunc={handleNumPanelClick}\n        />\n        <NumPanelControl {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default NumPanel;\n","import React, { Component } from \"react\";\n// Required to use React portals\n// import ReactDOM from \"react-dom\";\n\nimport NumPanel from \"./NumPanel\";\nimport Config from \"../../Config\";\n\nimport \"../../css/Floating.css\";\n\nclass Floating extends Component {\n  state = {\n    showNumPanel: !!this.props.showNumPanel\n  };\n\n  componentWillReceiveProps({ showNumPanel }) {\n    this.setState({ showNumPanel });\n  }\n\n  handleModalClick = () => {\n    this.setState({\n      showNumPanel: false\n    });\n  };\n\n  render() {\n    const { modal, closeOnModalClick, mousePosition } = this.props;\n    const { showNumPanel } = this.state;\n    const isModal = modal ? \" modal\" : \"\";\n    const doShow = showNumPanel ? \" show\" : \"\";\n    const id = Config.panelIds.numPanelWrapper;\n    const clsName = [\n      Config.panelClassNames.numPanelWrapper,\n      isModal,\n      doShow\n    ].join(\" \");\n\n    const props = {\n      onClick: closeOnModalClick ? this.handleModalClick : null\n    };\n\n    // const float = (\n    return (\n      <div\n        id={id}\n        {...props}\n        className={clsName}\n        style={{\n          position: \"absolute\",\n          left: mousePosition.x,\n          top: mousePosition.y,\n          display: showNumPanel ? \"flex\" : \"none\"\n        }}\n      >\n        <NumPanel {...this.props} />\n      </div>\n    );\n    // );\n\n    // return viewport ? ReactDOM.createPortal(float, document.body) : float;\n  }\n}\n\nexport default Floating;\n","import React, { Component } from \"react\";\n// Required to use React portals\n// import ReactDOM from \"react-dom\";\n\nimport Config from \"../../Config\";\n\nimport \"../../css/ShowMessage.css\";\n\nimport closeLogo from \"../../images/close.svg\";\n\nclass ShowMessage extends Component {\n  state = {\n    show: !!this.props.isShowMessage\n  };\n\n  componentWillReceiveProps({ isShowMessage }) {\n    this.setState({ isShowMessage });\n  }\n\n  render() {\n    const {\n      modal,\n      // viewport,\n      closeOnModalClick,\n      message,\n      handleMessageModalClick\n    } = this.props;\n    const { isShowMessage } = this.state;\n    const isModal = modal ? \" modal\" : \"\";\n    const doShow = isShowMessage ? \" show\" : \"\";\n    // const isViewport = viewport ? \" viewport\" : \"\";\n    const id = Config.panelIds.messageWrapper;\n    const clsName = [\n      Config.panelClassNames.messageWrapper,\n      isModal,\n      doShow\n    ].join(\" \");\n\n    const props = {\n      onClick: closeOnModalClick ? handleMessageModalClick : null\n    };\n\n    // const float = (\n    return (\n      <div\n        id={id}\n        {...props}\n        className={clsName}\n        style={{\n          position: \"absolute\",\n          display: isShowMessage ? \"flex\" : \"none\"\n        }}\n      >\n        {/* {this.props.children} */}\n        <h1>{message}</h1>\n        <img src={closeLogo} alt=\"close\" title=\"close\" />\n      </div>\n    );\n\n    // return viewport ? ReactDOM.createPortal(float, document.body) : float;\n  }\n}\n\nexport default ShowMessage;\n","import React, { Component } from \"react\";\n\nimport SudokuBoard from \"./components/sudokuBoard/SudokuBoard\";\nimport ControlPanel from \"./components/control/ControlPanel\";\nimport HelperPanel from \"./components/helper/HelperPanel\";\nimport Footer from \"./components/Footer\";\n\nimport Floating from \"./components/floating/Floating\";\nimport ShowMessage from \"./components/floating/ShowMessage\";\n\nimport Util from \"./Util\";\nimport Config from \"./Config\";\n\nimport { getRandomInt } from \"./util/Random\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  getInitialState() {\n    const numMatrix = Util.initMatrix();\n\n    return {\n      lang: Config.lang.en,\n      mode: Config.mode.set, // set, play\n      helpMode: Config.helpMode.none, // none, check, singleNum, candidates\n      checkMode: Config.checkMode.duplicates,\n\n      numMatrix: numMatrix,\n      ansMatrix: Util.initMatrix(),\n      isRegisteredMatrix: Util.getRegisteredFlags(numMatrix),\n      numCounts: Util.countNumbers(numMatrix),\n      candidates: Util.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      trace: [],\n      markerStatus: Config.buttonStatus.waiting,\n      markerNums: Util.initMarkerNums(),\n\n      gameLevel: null,\n\n      singleNumValue: 0,\n      multipleNums: [],\n\n      candidateLevel: null,\n      isStepByStep: true,\n      isSkipIneffective: true,\n      duplicates: [],\n\n      activeCellIndex: null,\n\n      mousePosition: {\n        x: 0,\n        y: 0\n      },\n\n      showNumPanel: false,\n      isShowMessage: false,\n      message: \"\",\n\n      isFilled: false,\n      isComplete: false,\n      isGameDone: false,\n      didUpdate: false\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = this.getInitialState();\n  }\n\n  componentDidUpdate() {\n    const { isFilled, isComplete, numMatrix, trace } = this.state;\n    // console.log(\"inside componentDidUpdate\");\n\n    if (!isComplete && !isFilled && Util.isAllFilled(numMatrix)) {\n      const successMessages = Config.messages.success;\n\n      this.setState({ isFilled: true });\n\n      if (this.doCheckDuplicates() === Config.result.passed) {\n        let isShowMessage = true;\n        let message = successMessages[getRandomInt(0, successMessages.length)];\n\n        if (Util.countManualInputs(trace) === 0) {\n          isShowMessage = false;\n        }\n\n        this.setState({\n          helpMode: Config.helpMode.none,\n          candidateLevel: null,\n          isComplete: true,\n          isShowMessage,\n          message\n        });\n      } else {\n        this.setState({\n          isShowMessage: true,\n          message: Config.messages.failure\n        });\n      }\n    }\n  }\n\n  calcAnswer = numMatrix => {\n    const { isSkipIneffective } = this.state;\n\n    // console.log(\"inside calcAnswer\");\n\n    const candidateLevel = Config.candidateLevelTypesArray.length - 1;\n    const helpMode = Config.helpMode.candidates;\n    const isStepByStep = false;\n    const isSkipLevel1 = false;\n    const singleNumValue = null;\n    const isMarkerOff = true;\n\n    let dataset = {\n      numMatrix: Util.deepCopy(numMatrix),\n      candidates: Util.initCube(Config.candidateStatus.candidate),\n      exclusiveCandidates: [],\n      markerNums: Util.initMarkerNums(),\n      trace: []\n    };\n\n    let conditions = {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep,\n      isSkipLevel1,\n      isSkipIneffective,\n      isMarkerOff\n    };\n\n    dataset = Util.setCandidates(dataset, conditions);\n\n    // There is a cell full of wide-removed //\n    if (dataset === null) {\n      return null;\n    }\n\n    dataset = Util.convertSelectable2Selected(dataset);\n\n    return dataset.numMatrix;\n  };\n\n  addNumNStore = cellInfo => {\n    const { checkMode, ansMatrix } = this.state;\n\n    // console.log(\"inside addNumNStore\");\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n      let helpMode = prevState.helpMode;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: prevState.isRegisteredMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      dataset = this.addNum(dataset, cellInfo);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      if (!duplicates) {\n        duplicates = [];\n      }\n\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      } else if (checkMode === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, dataset.numMatrix);\n      }\n\n      return {\n        helpMode: helpMode,\n        numMatrix: dataset.numMatrix,\n        isRegisteredMatrix: dataset.isRegisteredMatrix,\n        numCounts: Util.countNumbers(dataset.numMatrix),\n        trace: dataset.trace,\n        duplicates: duplicates,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  addNum = (dataset, cellInfo) => {\n    const { mode, helpMode, ansMatrix, candidateLevel } = this.state;\n\n    let { numMatrix, isRegisteredMatrix, trace } = dataset;\n\n    // console.log(\"inside addNum\");\n\n    const num = Util.getNumFromNumMatrix(numMatrix, cellInfo.idx);\n    if (num) {\n      cellInfo.prevNum = num;\n    }\n\n    numMatrix = Util.assignNum2NumMatrix(numMatrix, cellInfo);\n\n    if (!Util.isNumCorrect(ansMatrix, cellInfo)) {\n      cellInfo.isWrong = true;\n    }\n\n    // // process either game setting or playing\n    const traceLength = trace.length;\n    if (Config.updateHelpModes.includes(helpMode) && candidateLevel !== null) {\n      dataset = Util.updateCandidates(dataset, cellInfo, candidateLevel);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return null;\n      }\n    }\n\n    // process either game setting or playing\n    if (mode === Config.mode.set) {\n      isRegisteredMatrix = Util.assignTruth2regMatrix(\n        isRegisteredMatrix,\n        Util.initRegInfo(cellInfo.idx)\n      );\n    } else if (mode === Config.mode.play && !cellInfo.isBackward) {\n      if (trace.length > traceLength) {\n        const traceItem = trace[trace.length - 1];\n        traceItem.numMatrix = cellInfo;\n        traceItem.operation = Config.operationTypes.manual;\n      } else {\n        trace.push(\n          Util.initTraceItemNum(cellInfo, Config.operationTypes.manual)\n        );\n      }\n    }\n\n    dataset.isRegisteredMatrix = isRegisteredMatrix;\n\n    return dataset;\n  };\n\n  deleteNumNStore = idx => {\n    const { checkMode } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: prevState.isRegisteredMatrix,\n        trace: prevState.trace\n      };\n\n      dataset = this.deleteNum(dataset, idx);\n\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      }\n\n      return {\n        numMatrix: dataset.numMatrix,\n        isRegisteredMatrix: dataset.isRegisteredMatrix,\n        numCounts: Util.countNumbers(dataset.numMatrix),\n        trace: dataset.trace,\n\n        duplicates,\n\n        isFilled: false,\n        isComplete: false,\n        isGameDone: false\n      };\n    });\n  };\n\n  deleteNum = (dataset, idx, isBackward = false) => {\n    const { mode } = this.state;\n\n    // console.log(\"inside deleteNum\");\n\n    let { numMatrix, isRegisteredMatrix, trace } = dataset;\n\n    // save the num to be deleted for trace //\n    const num = Util.getNumFromNumMatrix(numMatrix, idx);\n\n    numMatrix = Util.assignNum2NumMatrix(\n      numMatrix,\n      Util.initCellInfo(idx, null)\n    );\n\n    if (mode === Config.mode.set) {\n      isRegisteredMatrix = Util.assignTruth2regMatrix(\n        isRegisteredMatrix,\n        Util.initRegInfo(idx, false)\n      );\n    }\n\n    if (mode === Config.mode.play && !isBackward) {\n      trace.push(Util.initTraceItem(Util.initCellInfo(idx, -num)));\n    }\n\n    dataset.isRegisteredMatrix = isRegisteredMatrix;\n\n    return dataset;\n  };\n\n  addMarkerNStore = markerInfo => {\n    // console.log(\"inside addMarker\");\n\n    this.setState(prevState => {\n      let dataset = {\n        markerNums: prevState.markerNums,\n        candidates: prevState.candidates,\n        trace: prevState.trace\n      };\n\n      dataset = this.addMarker(dataset, markerInfo);\n\n      return {\n        markerNums: dataset.markerNums,\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  addMarker = (dataset, markerInfo) => {\n    // console.log(\"inside addMarker\");\n\n    const { candidateLevel } = this.state;\n\n    let { markerNums, candidates, trace } = dataset;\n    let markerTrace = [];\n    let candidateTrace = [];\n\n    const duplicatedIdx = Util.findNumInMarker(markerNums, markerInfo);\n\n    if (duplicatedIdx !== null) {\n      return {};\n    }\n\n    markerInfo.status = Config.candidateStatus.exclusiveSingle;\n\n    markerNums = Util.setMarkerNum(markerNums, markerInfo);\n\n    if (candidateLevel !== null && candidateLevel > 0) {\n      let candidateTraceTmp = [];\n      let markerTraceTmp = [];\n\n      [\n        candidates,\n        markerNums,\n        candidateTraceTmp,\n        markerTraceTmp\n      ] = Util.setRelatedCandidatesBySingleMark(\n        candidates,\n        markerInfo,\n        markerNums\n      );\n\n      if (markerTraceTmp && markerTraceTmp.length > 0) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      if (candidateTraceTmp && candidateTraceTmp.length > 0) {\n        candidateTrace = candidateTrace.concat(candidateTraceTmp);\n      }\n\n      [\n        candidates,\n        markerNums,\n        candidateTraceTmp,\n        markerTraceTmp\n      ] = Util.setRelatedCandidatesByMultipleMarks(\n        candidates,\n        markerNums,\n        markerInfo\n      );\n\n      if (markerTraceTmp && markerTraceTmp.length > 0) {\n        markerTrace = markerTrace.concat(markerTraceTmp);\n      }\n      if (candidateTraceTmp && candidateTraceTmp.length > 0) {\n        candidateTrace = candidateTrace.concat(candidateTraceTmp);\n      }\n    }\n\n    if (\n      markerTrace.length === 0 ||\n      !Util.findPreviousMarkerInfo(markerNums, markerTrace, markerInfo)\n    ) {\n      markerTrace.push(markerInfo);\n    }\n\n    const traceItem = Util.initTraceItem(\n      null,\n      candidateTrace,\n      markerTrace,\n      Config.operationTypes.manual\n    );\n\n    trace.push(traceItem);\n\n    return dataset;\n  };\n\n  delMarker = markerInfos => {\n    // console.log(\"inside delMarker\");\n\n    this.setState(prevState => {\n      let trace = prevState.trace;\n\n      const [markerNums, newMarkerInfos] = Util.resetMarker(\n        prevState.markerNums,\n        markerInfos\n      );\n\n      trace.push(Util.initTraceItemMarker(newMarkerInfos));\n\n      return { markerNums, trace };\n    });\n  };\n\n  updateMarkerStatusNStore = cellInfo => {\n    // console.log(\"inside updateMarkerStatus\");\n\n    this.setState(prevState => {\n      let dataset = {\n        candidates: prevState.candidates,\n        markerNums: prevState.markerNums\n      };\n\n      dataset = this.updateMarkerStatus(dataset, cellInfo);\n\n      return {\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  updateMarkerStatus = (dataset, cellInfo) => {\n    // console.log(\"inside updateMarkerStatus\");\n\n    const { candidateLevel } = this.state;\n\n    let { candidates, markerNums } = dataset;\n\n    // update marker status of the cells added num //\n    let markerIdxs = Util.getMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    // convert exclusive type from triple to double //\n    for (let markerIdx of markerIdxs) {\n      let infos = Util.getInfosFromMarkerNums(markerNums, markerIdx);\n\n      if (\n        infos.nums.length === 2 &&\n        infos.statuses[0] === Config.candidateStatus.exclusiveTriple\n      ) {\n        for (let [i, num] of infos.nums.entries()) {\n          markerIdx.i = i;\n          const markerInfo = Util.initMarkerInfo(\n            markerIdx,\n            num,\n            Config.candidateStatus.exclusiveDouble\n          );\n          markerNums = Util.assignMarkerStatus(markerNums, markerInfo);\n        }\n      }\n    }\n\n    // update marker statuses remote from the cell added num //\n    markerIdxs = Util.getRelatedMarkerIdxsFromCellIdx(cellInfo.idx);\n\n    // set selectable type A to markerNums //\n    for (let markerIdx of markerIdxs) {\n      const nums = Util.getNumsFromMarkerNums(markerNums, markerIdx);\n\n      if (nums.length > 0) {\n        const cellIdxs = Util.getCorrespondingCellIdxs2MarkerIdx(markerIdx);\n\n        // find selectable type A //\n        for (let num of nums) {\n          let concerningCellInfos = cellIdxs.map(idx =>\n            Util.initCellInfo(idx, num)\n          );\n\n          if (\n            Util.countNumInCandidates(candidates, concerningCellInfos) === 1 &&\n            candidateLevel >\n              Util.getLevelNumFromFunctionName(\n                Config.candidateTypes.displayCandidates\n              )\n          ) {\n            const targetMarkerInfo = Util.initMarkerInfo(markerIdx, num);\n\n            markerNums = Util.assignSelectable2MarkerNums(\n              markerNums,\n              targetMarkerInfo\n            );\n          }\n        }\n      }\n    }\n\n    // set selectable type B to markerNums //\n    let relatedCellIdxs = Util.getRelatedIndicesBesidesItself(cellInfo.idx);\n    relatedCellIdxs = Util.removeWideSelectedCellIdxs(\n      candidates,\n      relatedCellIdxs\n    );\n\n    for (let cellIdx of relatedCellIdxs) {\n      markerNums = Util.setSelectableB2MarkerNums(\n        markerNums,\n        candidates,\n        cellIdx\n      );\n    }\n\n    return dataset;\n  };\n\n  // Pop up panel to input a number to a cell //\n  handleNumPanelClick = event => {\n    const { activeCellIndex } = this.state;\n\n    // console.log(\"inside handleNumPanelClick\");\n\n    const num = parseInt(event.target.id.slice(1, 2));\n    if (activeCellIndex && 0 < num && num < 10) {\n      if (Util.isMarkerIndex(activeCellIndex)) {\n        this.addMarkerNStore(Util.initMarkerInfo(activeCellIndex, num));\n      } else {\n        this.addNumNStore(Util.initCellInfo(activeCellIndex, num));\n      }\n    }\n\n    this.setState({\n      showNumPanel: false,\n      activeCellIndex: null\n    });\n  };\n\n  // To delete a number from a cell //\n  handleDelete = () => {\n    const { activeCellIndex } = this.state;\n\n    // console.log(\"inside handleDelete\");\n\n    if (activeCellIndex) {\n      if (Util.isMarkerIndex(activeCellIndex)) {\n        const markerInfo = Util.initCellInfo(activeCellIndex, null);\n\n        this.delMarker([markerInfo]);\n      } else {\n        this.deleteNumNStore(activeCellIndex);\n      }\n    }\n\n    this.setState({\n      showNumPanel: false,\n      activeCellIndex: null\n    });\n  };\n\n  // To cancel number insertion thru popup number panel //\n  handleCancel = () => {\n    // console.log(\"inside handleCancel\");\n\n    this.setState({\n      showNumPanel: false\n    });\n  };\n\n  // To check whether duplcates exist or matach to the answer //\n  handleCheck = level => {\n    // console.log(\"inside handleCheck\");\n\n    const id = Config.buttonIds.check + Util.capitalize(level);\n    const { numMatrix, ansMatrix } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplcates;\n\n      if (level === Config.checkMode.none || level === prevState.checkMode) {\n        duplicates = [];\n        level = Config.checkMode.none;\n      } else if (level === Config.checkMode.duplicates) {\n        duplicates = Util.checkDuplicate(numMatrix);\n      } else if (level === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, numMatrix);\n      }\n\n      return {\n        checkMode: level,\n        duplicates\n      };\n    });\n\n    document.getElementById(id).blur();\n  };\n\n  handleHelpMode = type => {\n    // console.log(\"inside handleHelpMode\");\n\n    let singleNumValue = 0;\n    let candidateLevel = null;\n    let candidates = Util.initCube(Config.candidateStatus.candidate);\n    let exclusiveCandidates = [];\n\n    this.setState(prevState => {\n      const prevHelpMode = prevState.helpMode;\n      const prevSingleNumValue = prevState.singleNumValue;\n      let prevMultipleNums = prevState.multipleNums;\n      let numMatrix = prevState.numMatrix;\n      let markerNums = prevState.markerNums;\n      let trace = prevState.trace;\n\n      let dataset = {\n        numMatrix,\n        candidates,\n        exclusiveCandidates,\n        markerNums,\n        trace\n      };\n\n      const stopCondition = Config.backwardStopCondition.numInsertion;\n\n      // kind of cancel //\n      if (prevHelpMode === type) {\n        dataset = this.doBackward(dataset, stopCondition);\n\n        return {\n          helpMode: Config.helpMode.none,\n          candidateLevel: null,\n          candidates: dataset.candidates,\n          exclusiveCandidates: dataset.exclusiveCandidates,\n          markerNums: dataset.markerNums,\n          trace: dataset.trace\n        };\n      } else if (\n        prevHelpMode === Config.helpMode.both ||\n        prevHelpMode === Config.helpMode.multipleNums\n      ) {\n        // return to candidates mode //\n        if (type === Config.helpMode.candidates) {\n          return {\n            helpMode: Config.helpMode.candidates,\n            singleNumValue: 0,\n            multipleNums: []\n          };\n\n          // change from both to multipleNums by pressing singleNum //\n        } else if (prevHelpMode === Config.helpMode.both) {\n          let candidateLevel = prevState.candidateLevel;\n          if (\n            candidateLevel >=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            candidateLevel = Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.removeByInsertedNum\n            );\n          }\n          return {\n            helpMode: Config.helpMode.multipleNums,\n            candidateLevel,\n            multipleNums: prevSingleNumValue ? [prevSingleNumValue] : [1]\n          };\n        } else if (prevHelpMode === Config.helpMode.multipleNums) {\n          dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n\n          // There is a cell full of wide-removed //\n          if (dataset === null) {\n            return {\n              helpMode: Config.helpMode.none,\n\n              candidates: Util.initCube,\n              exclusiveCandidates: [],\n              markerNums: this.initMarkerNums,\n              trace: [],\n              multipleNums: [],\n\n              isShowMessage: true,\n              message: Config.alertMessages.deadEnd\n            };\n          }\n\n          return {\n            helpMode: Config.helpMode.singleNum,\n            candidates: dataset.candidates,\n            exclusiveCandidates: dataset.exclusiveCandidates,\n            markerNums: dataset.markerNums,\n            trace: dataset.trace,\n            multipleNums: [],\n            singleNumValue:\n              prevMultipleNums.length > 0 ? prevMultipleNums.shift() : 1\n          };\n        }\n      } else {\n        if (Config.helpModeArray4display.includes(prevHelpMode)) {\n          let candidateLevel = prevState.candidateLevel;\n          if (\n            candidateLevel >=\n            Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.singleCandidate\n            )\n          ) {\n            candidateLevel = Util.getLevelNumFromFunctionName(\n              Config.candidateTypes.removeByInsertedNum\n            );\n          }\n\n          return {\n            helpMode: Config.helpMode.both,\n            candidateLevel,\n            singleNumValue: prevState.singleNumValue\n              ? prevState.singleNumValue\n              : 1\n          };\n        } else {\n          candidateLevel = 0;\n\n          if (type === Config.helpMode.singleNum) {\n            singleNumValue = prevState.singleNumValue\n              ? prevState.singleNumValue\n              : 1;\n\n            dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return {\n                isShowMessage: true,\n                message: Config.alertMessages.deadEnd\n              };\n            }\n          } else if (type === Config.helpMode.candidates) {\n            dataset.trace = [];\n\n            dataset = this.doInitCandidates(candidateLevel);\n\n            // There is a cell full of wide-removed //\n            if (dataset === null) {\n              return {\n                isShowMessage: true,\n                message: Config.alertMessages.deadEnd\n              };\n            }\n\n            trace = trace.concat(dataset.trace);\n          }\n        }\n      }\n\n      return {\n        helpMode: type,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace,\n        singleNumValue,\n        candidateLevel\n      };\n    });\n\n    const id = Config.helpModeButtonIds[type];\n    document.getElementById(id).blur();\n  };\n\n  doCheckDuplicates = () => {\n    const { checkMode, numMatrix, ansMatrix } = this.state;\n\n    let duplicates = Util.checkDuplicate(numMatrix);\n\n    if (checkMode === Config.checkMode.correctness) {\n      const wrongIdxs = Util.checkCorrectness(ansMatrix, numMatrix);\n      duplicates = duplicates.concat(wrongIdxs);\n    }\n\n    this.setState({\n      duplicates\n    });\n\n    if (duplicates.length === 0) {\n      return Config.result.passed;\n    }\n    return Config.result.failed;\n  };\n\n  handleSingleNum = (num, nLevel = null) => {\n    // console.log(\"inside handleSingleNum\");\n\n    const { mode, helpMode, candidateLevel, isSkipIneffective } = this.state;\n    const singleNumValue = parseInt(num);\n\n    if (singleNumValue === 0) {\n      if (helpMode === Config.helpMode.singleNum) {\n        this.setState({\n          helpMode: Config.helpMode.none,\n          singleNumValue\n        });\n      } else {\n        this.setState({\n          singleNumValue\n        });\n      }\n      return;\n    } else if (\n      mode === Config.mode.set ||\n      (helpMode === Config.helpMode.candidates && nLevel === null)\n    ) {\n      this.setState({\n        singleNumValue\n      });\n      return;\n    }\n\n    this.setState(prevState => {\n      if (prevState.mode === Config.mode.play) {\n        if (nLevel === null) {\n          if (candidateLevel === null) {\n            nLevel = 0;\n          } else {\n            nLevel = candidateLevel;\n          }\n        }\n      }\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      if (helpMode === Config.helpMode.both) {\n        const conditions = {\n          candidateLevel,\n          helpMode,\n          singleNumValue,\n          isStepByStep: true,\n          isSkipLevel1: true,\n          isSkipIneffective\n        };\n\n        dataset = Util.setCandidates(dataset, conditions);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return {\n            isShowMessage: true,\n            message: Config.alertMessages.deadEnd\n          };\n        }\n      } else {\n        dataset = this.doInitSingleNum(singleNumValue, nLevel);\n\n        // There is a cell full of wide-removed //\n        if (dataset === null) {\n          return {\n            isShowMessage: true,\n            message: Config.alertMessages.deadEnd\n          };\n        }\n      }\n\n      return {\n        helpMode:\n          helpMode === Config.helpMode.both\n            ? helpMode\n            : Config.helpMode.singleNum,\n        singleNumValue,\n        candidateLevel: nLevel,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  handleSingleNumLevel = level => {\n    // console.log(\"inside handleSingleNumLevel\");\n\n    // const { helpMode } = this.state;\n\n    let nLevel = Util.getLevelNum(level);\n    let { singleNumValue } = this.state;\n    const id = Util.getSingleNumBtnId(level);\n\n    document.getElementById(id).blur();\n\n    this.setState(() => {\n      const isSkipLevel1 = false;\n      const dataset = this.doCandidates(nLevel, singleNumValue, isSkipLevel1);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidateLevel: nLevel,\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  doInitSingleNum = (singleNumValue, candidateLevel = 0) => {\n    // console.log(\"inside doInitSingleNum\");\n\n    const { numMatrix, isSkipIneffective } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode: Config.helpMode.singleNum,\n      singleNumValue,\n      isStepByStep: true,\n      isSkipLevel1: false,\n      isSkipIneffective\n    };\n\n    return Util.initCandidates(numMatrix, conditions);\n  };\n\n  doInitCandidates = (candidateLevel = 0) => {\n    // console.log(\"inside doInitCandidates\");\n\n    const { numMatrix, isSkipIneffective } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode: Config.helpMode.candidates,\n      singleNumValue: 0,\n      isStepByStep: true,\n      isSkipLevel1: false,\n      isSkipIneffective\n    };\n\n    return Util.initCandidates(numMatrix, conditions);\n  };\n\n  doCandidates = (\n    candidateLevel = 0,\n    singleNumValue = 0,\n    isSkipLevel1 = false\n  ) => {\n    const {\n      helpMode,\n      numMatrix,\n      candidates,\n      exclusiveCandidates,\n      markerNums,\n      trace,\n      isSkipIneffective\n    } = this.state;\n\n    const conditions = {\n      candidateLevel,\n      helpMode,\n      singleNumValue,\n      isStepByStep: true,\n      isSkipLevel1,\n      isSkipIneffective\n    };\n\n    let dataset = {\n      numMatrix: Util.deepCopy(numMatrix),\n      candidates: Util.deepCopy(candidates),\n      exclusiveCandidates: Util.deepCopy(exclusiveCandidates),\n      markerNums: Util.deepCopy(markerNums),\n      trace: Util.deepCopy(trace)\n    };\n\n    return Util.setCandidates(dataset, conditions);\n  };\n\n  handleMultipleNums = num => {\n    this.setState(prevState => {\n      let multipleNums = prevState.multipleNums;\n\n      if (multipleNums.includes(num)) {\n        const index = multipleNums.indexOf(num);\n        if (index > -1) {\n          multipleNums.splice(index, 1);\n        }\n      } else {\n        multipleNums.push(num);\n        multipleNums.sort();\n      }\n\n      return { multipleNums };\n    });\n  };\n\n  handleNumInsert = event => {\n    const { singleNumValue, numMatrix } = this.state;\n\n    // console.log(\"inside handleNumInsert\");\n\n    const cellAddress = event.target.id;\n    const idx = Util.R1C12Index(cellAddress);\n\n    let num = parseInt(event.target.getAttribute(\"data-num\"));\n\n    if (isNaN(num)) {\n      if (singleNumValue !== null && singleNumValue !== 0) {\n        num = singleNumValue;\n      } else {\n        return;\n      }\n    }\n\n    if (0 < num && num < 10) {\n      if (Util.getNumFromNumMatrix(numMatrix, idx) === num) {\n        this.deleteNumNStore(idx);\n      } else {\n        this.addNumNStore(Util.initCellInfo(idx, num));\n      }\n    }\n\n    this.setState({\n      activeCellIndex: null\n    });\n  };\n\n  handleMarkerCell = event => {\n    const { singleNumValue, markerNums } = this.state;\n\n    // console.log(\"inside handleMarkerCell\");\n\n    const cellAddress = event.target.id;\n    let idx = null;\n    let num = null;\n\n    if (Util.isMarkerAddress(cellAddress)) {\n      idx = Util.markerId2Idx(cellAddress);\n\n      if (singleNumValue !== null && singleNumValue !== 0) {\n        num = singleNumValue;\n      } else {\n        return;\n      }\n\n      const markerInfo = Util.initMarkerInfo(idx, num);\n      const oldNum = Util.getNumFromMarkerNums(markerNums, idx);\n\n      if (oldNum === num) {\n        this.delMarker([markerInfo]);\n      } else {\n        this.addMarkerNStore(markerInfo);\n      }\n    }\n\n    this.setState({\n      activeCellIndex: null\n    });\n  };\n\n  handleCandidateLevels = level => {\n    // console.log(\"inside handleCandidates\");\n\n    const id = Util.getCandidateLevelId(level);\n    const { helpMode } = this.state;\n\n    this.setState(prevState => {\n      let candidateLevel = Util.getLevelNum(level);\n      let singleNumValue = prevState.singleNumValue;\n      let isSkipLevel1 = true;\n      let dataset = {};\n\n      if (prevState.candidateLevel === 0) {\n        isSkipLevel1 = false;\n      }\n\n      if (helpMode === Config.helpMode.singleNum) {\n        if (\n          !prevState.candidateLevel ||\n          prevState.candidateLevel > candidateLevel\n        ) {\n          dataset = this.doInitSingleNum(singleNumValue, candidateLevel);\n        } else {\n          dataset = this.doCandidates(\n            candidateLevel,\n            singleNumValue,\n            isSkipLevel1\n          );\n        }\n      } else {\n        singleNumValue = 0;\n\n        dataset = this.doCandidates(\n          candidateLevel,\n          singleNumValue,\n          isSkipLevel1\n        );\n      }\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidateLevel,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace\n      };\n    });\n\n    document.getElementById(id).blur();\n  };\n\n  handleControls = controlType => {\n    // console.log(\"inside handleControls\");\n\n    const id = Util.getControlId(controlType);\n\n    const { candidateLevel } = this.state;\n\n    if (controlType === Config.candidateControls.backward) {\n      this.doBackwardNStore();\n\n      return;\n    } else if (controlType === Config.candidateControls.reset) {\n      const isAll = true;\n      this.doBackwardNStore(isAll);\n\n      return;\n    } else if (\n      controlType === Config.candidateControls.select &&\n      candidateLevel >\n        Util.getLevelNumFromFunctionName(\n          Config.candidateTypes.displayCandidates\n        )\n    ) {\n      this.doSelectSelectableCandidates();\n    } else if (\n      candidateLevel >=\n      Util.getLevelNumFromFunctionName(Config.candidateTypes.singleCandidate)\n    ) {\n      if (\n        [\n          Config.candidateControls.forward,\n          Config.candidateControls.fastForward\n        ].includes(controlType)\n      ) {\n        this.doForward(controlType);\n        // } else if (controlType === Config.candidateControls.select) {\n        //   this.doSelectSelectableCandidates();\n      } else if (controlType === Config.candidateControls.erase) {\n        this.doEraseExclusiveColors();\n      }\n    }\n\n    document.getElementById(id).blur();\n  };\n\n  handleSkipIneffectiveStatus = isSkipIneffective => {\n    this.setState({ isSkipIneffective });\n  };\n\n  doEraseExclusiveColors = () => {\n    this.setState(prevState => {\n      let candidates = prevState.candidates;\n      let trace = prevState.trace;\n\n      [candidates, trace] = Util.eraseExclusiveColors(candidates, trace);\n\n      return {\n        candidates,\n        trace\n      };\n    });\n  };\n\n  doSelectSelectableCandidates = () => {\n    // console.log(\"inside doSelectSelectableCandidates\");\n\n    this.setState(prevState => {\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      dataset = Util.selectSelectables(dataset);\n\n      dataset = Util.eraseRmovalbe(dataset);\n\n      return {\n        numMatrix: dataset.numMatrix,\n        candidates: dataset.candidates,\n        markerNums: dataset.markerNums,\n        trace: prevState.trace,\n        numCounts: Util.countNumbers(dataset.numMatrix)\n      };\n    });\n  };\n\n  doForward = controlType => {\n    const {\n      helpMode,\n      singleNumValue,\n      candidateLevel,\n      isSkipIneffective\n    } = this.state;\n\n    // console.log(\"inside doForward\");\n\n    this.setState(prevState => {\n      const isSkipLevel1 = true;\n      const isStepByStep =\n        controlType === Config.candidateControls.forward ? true : false;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      let conditions = {\n        candidateLevel,\n        helpMode:\n          helpMode === Config.helpMode.both\n            ? Config.helpMode.candidates\n            : helpMode,\n        singleNumValue,\n        isStepByStep,\n        isSkipLevel1,\n        isSkipIneffective\n      };\n\n      dataset = Util.setCandidates(dataset, conditions);\n\n      // There is a cell full of wide-removed //\n      if (dataset === null) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      return {\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        trace: dataset.trace,\n        markerNums: dataset.markerNums\n      };\n    });\n  };\n\n  doEraseCandidates = () => {\n    this.setState(prevState => {\n      let dataset = {\n        candidates: prevState.candidates,\n        trace: prevState.trace\n      };\n\n      dataset = Util.eraseRmovalbe(dataset);\n\n      return {\n        candidates: dataset.candidates,\n        trace: dataset.trace\n      };\n    });\n  };\n\n  doBackwardNStore = (isAll = false) => {\n    // console.log(\"inside doBackwardNStore\");\n\n    const { ansMatrix } = this.state;\n\n    this.setState(prevState => {\n      let duplicates = prevState.duplicates;\n      let checkMode = prevState.checkMode;\n\n      let dataset = {\n        numMatrix: prevState.numMatrix,\n        isRegisteredMatrix: null,\n        candidates: prevState.candidates,\n        exclusiveCandidates: prevState.exclusiveCandidates,\n        markerNums: prevState.markerNums,\n        trace: prevState.trace\n      };\n\n      let stopCondtion = null;\n      if (isAll) {\n        stopCondtion = Config.backwardStopCondition.wrongInsertion;\n      }\n\n      dataset = this.doBackward(dataset, stopCondtion);\n\n      if (isAll) {\n        checkMode = Config.checkMode.correctness;\n      }\n      if (checkMode === Config.checkMode.duplicates || duplicates.length > 0) {\n        duplicates = Util.checkDuplicate(dataset.numMatrix);\n      } else if (checkMode === Config.checkMode.correctness) {\n        duplicates = Util.checkCorrectness(ansMatrix, dataset.numMatrix);\n      }\n\n      // if (duplicates.length === 0) {\n      //   checkMode = Config.checkMode.none;\n      // }\n\n      return {\n        checkMode,\n        numMatrix: dataset.numMatrix,\n        candidates: dataset.candidates,\n        exclusiveCandidates: dataset.exclusiveCandidates,\n        markerNums: dataset.markerNums,\n        trace: dataset.trace,\n        duplicates\n      };\n    });\n  };\n\n  doBackward = (dataset, stopCondition = null) => {\n    // console.log(\"inside doBackward\");\n\n    let { candidates, markerNums, trace } = dataset;\n\n    if (trace.length === 0) {\n      return dataset;\n    }\n\n    let loopMax = 1;\n    if (stopCondition) {\n      loopMax = trace.length;\n    }\n\n    let datasetTmp = {\n      numMatrix: Util.deepCopy(dataset.numMatrix),\n      isRegisteredMatrix: null,\n      candidates: Util.deepCopy(dataset.candidates),\n      exclusiveCandidates: Util.deepCopy(dataset.exclusiveCandidates),\n      markerNums: Util.deepCopy(dataset.markerNums),\n      trace: []\n    };\n\n    for (let i = 0; i < loopMax; i++) {\n      const lastEvent = trace.pop();\n\n      const numInfo = Util.getNumInfoFromTraceItem(lastEvent);\n\n      if (numInfo) {\n        if (\n          stopCondition === Config.backwardStopCondition.numInsertion &&\n          \"isWrong\" in numInfo &&\n          numInfo.isWrong\n        ) {\n          trace.push(lastEvent);\n          break;\n        }\n\n        const num = numInfo.num;\n        const idx = numInfo.idx;\n\n        if (num > 0) {\n          if (\"prevNum\" in numInfo && typeof numInfo.prevNum === \"number\") {\n            let tmpCellInfo = Util.initCellInfo(numInfo.idx, numInfo.prevNum);\n            datasetTmp.numMatrix = Util.assignNum2NumMatrix(\n              datasetTmp.numMatrix,\n              tmpCellInfo\n            );\n          } else {\n            const isBackward = true;\n            datasetTmp = this.deleteNum(datasetTmp, idx, isBackward);\n          }\n        } else {\n          let cellInfo = Util.initCellInfo(idx, Math.abs(num));\n\n          cellInfo.isBackward = true;\n          datasetTmp = this.addNum(datasetTmp, cellInfo);\n        }\n\n        dataset.numMatrix = datasetTmp.numMatrix;\n      }\n\n      const candInfos = Util.getCandidateInfoFromTraceItem(lastEvent);\n\n      if (candInfos && candInfos.length > 0) {\n        dataset.candidates = Util.traceBackCandidates(candidates, candInfos);\n\n        if (lastEvent.operation === Config.operationTypes.auto) {\n          dataset.exclusiveCandidates.pop();\n        }\n      }\n\n      const markerInfos = Util.getMarkerInfoFromTraceItem(lastEvent);\n\n      if (markerInfos && markerInfos.length > 0) {\n        [dataset.markerNums] = Util.resetMarker(markerNums, markerInfos);\n      }\n    }\n\n    return dataset;\n  };\n\n  handleCandidateCell = event => {\n    // console.log( \"inside handleCandidateCell\" );\n\n    let cellInfo = Util.R1C1N12CellInfo(event.target.id);\n\n    this.setState(prevState => {\n      let candidates = prevState.candidates;\n      let markerNums = prevState.markerNums;\n      let trace = prevState.trace;\n\n      const prevStatus = Util.getCandidateStatus(candidates, cellInfo);\n\n      if (Util.isLastCandidate(candidates, cellInfo)) {\n        return {\n          isShowMessage: true,\n          message: Config.alertMessages.deadEnd\n        };\n      }\n\n      [candidates, cellInfo] = Util.flipCandidateStatus(candidates, cellInfo);\n\n      const traceItem = Util.initTraceItemCandidate(\n        [cellInfo],\n        Config.operationTypes.manual\n      );\n\n      if (Util.isNarrowCandidate(prevStatus)) {\n        let markerIdxs = Util.getMarkerIdxsFromCellIdx(cellInfo.idx);\n        let markerTrace = [];\n\n        for (let markerIdx of markerIdxs) {\n          const markerInfo = Util.initMarkerInfo(markerIdx, cellInfo.num);\n          const targetMarkerIdx = Util.findNumInMarker(markerNums, markerInfo);\n\n          if (targetMarkerIdx !== null) {\n            let concerningCellIdxs = Util.getTargetCellIndicesByMarkerIdx(\n              targetMarkerIdx,\n              candidates\n            );\n\n            concerningCellIdxs = concerningCellIdxs.filter(idx =>\n              Util.isNarrowCandidate(\n                Util.getCandidateStatus(\n                  candidates,\n                  Util.initCellInfo(idx, markerInfo.num)\n                )\n              )\n            );\n\n            if (concerningCellIdxs.length === 1) {\n              const markerInfo = Util.initMarkerInfo(\n                targetMarkerIdx,\n                cellInfo.num\n              );\n              markerNums = Util.assignSelectable2MarkerNums(\n                markerNums,\n                markerInfo\n              );\n\n              markerTrace.push(markerInfo);\n            }\n          }\n        }\n\n        if (markerTrace.length > 0) {\n          traceItem.marker = markerTrace;\n        }\n      }\n      trace.push(traceItem);\n\n      return { candidates, markerNums, trace };\n    });\n  };\n\n  handleMarker = () => {\n    // console.log(\"inside handleMarker\");\n\n    this.setState(prevState => {\n      const markerStatus = Util.flipMarkerStatus(prevState.markerStatus);\n\n      return { markerStatus };\n    });\n\n    document.getElementById(Config.buttonIds.marker).blur();\n  };\n\n  handleStepBack = () => {\n    const { trace } = this.state;\n\n    // console.log(\"hangleStepBack\");\n\n    if (!!trace.length) {\n      const lastEvent = trace.pop();\n      const num = lastEvent.numMatrix.num;\n      const idx = lastEvent.numMatrix.idx;\n\n      if (num > 0) {\n        this.deleteNumNStore(idx, false);\n      } else {\n        this.addNumNStore(Util.initCellInfo(idx, Math.abs(num)));\n      }\n    }\n\n    document.getElementById(Config.buttonIds.stepBack).blur();\n  };\n\n  handleClear = () => {\n    // console.log(\"inside handleClear\");\n\n    this.setState({\n      helpMode: Config.helpMode.none,\n      exclusiveCandidates: [],\n      duplicates: [],\n      singleNumValue: 0,\n      showNumPanel: false,\n      isShowMessage: false\n    });\n    document.getElementById(Config.buttonIds.clear).blur();\n  };\n\n  handleNewGame = () => {\n    // console.log(\"inside handleNewGame\");\n\n    const { lang } = this.state;\n    let origState = this.getInitialState();\n    origState.lang = lang;\n\n    this.setState(origState);\n\n    document.getElementById(Config.buttonIds.newGame).blur();\n  };\n\n  handleSampleGames = sampleLevel => {\n    // console.log(\"inside handleSampleGames\");\n\n    const { lang } = this.state;\n    const origState = this.getInitialState();\n\n    const sampleMatrix = Util.getSampleMatrix(sampleLevel);\n    const id = Config.buttonIds.sampleGame + Util.capitalize(sampleLevel);\n\n    origState.numMatrix = sampleMatrix;\n    origState.gameLevel = sampleLevel;\n\n    origState.lang = lang;\n\n    origState.ansMatrix = this.calcAnswer(sampleMatrix);\n\n    // There is a cell full of wide-removed //\n    if (origState.ansMatrix === null) {\n      this.setState({\n        isShowMessage: true,\n        message: Config.alertMessages.deadEnd\n      });\n    }\n\n    if (origState.ansMatrix) {\n      origState.mode = Config.mode.play;\n      origState.checkMode = Config.checkMode.none;\n      origState.isRegisteredMatrix = Util.getRegisteredFlags(sampleMatrix);\n    }\n\n    this.setState(origState);\n\n    document.getElementById(id).blur();\n  };\n\n  handleSetUp = () => {\n    // console.log(\"inside handleSetUp\");\n\n    const { mode } = this.state;\n\n    if (mode === Config.mode.set) {\n      if (this.doCheckDuplicates() === Config.result.passed) {\n        this.setState(prevState => {\n          const ansMatrix = this.calcAnswer(prevState.numMatrix);\n\n          if (ansMatrix) {\n            return {\n              mode: Config.mode.play,\n              helpMode: Config.helpMode.none,\n              checkMode: Config.checkMode.none,\n              singleNumValue: 0,\n              ansMatrix\n            };\n          } else {\n            return {\n              isShowMessage: true,\n              message: Config.alertMessages.wrongQuestion\n            };\n          }\n        });\n      } else {\n        this.setState({\n          checkMode: Config.checkMode.duplicates,\n          isShowMessage: true,\n          message: Config.alertMessages.duplicates\n        });\n      }\n    } else {\n      this.setState(prevState => {\n        let numMatrix = prevState.numMatrix;\n        const isRegisteredMatrix = prevState.isRegisteredMatrix;\n\n        return {\n          mode: Config.mode.set,\n          helpMode: Config.helpMode.none,\n          checkMode: Config.checkMode.duplicates,\n          numMatrix: Util.resetNumMatrix(numMatrix, isRegisteredMatrix),\n          candidates: Util.initCube(),\n          exclusiveCandidates: [],\n          markerNums: Util.initMarkerNums(),\n          trace: [],\n          singleNumValue: 0\n        };\n      });\n    }\n\n    document.getElementById(Config.buttonIds.setup).blur();\n  };\n\n  handleRestart = () => {\n    const { lang, numMatrix, isRegisteredMatrix, gameLevel } = this.state;\n    const origState = this.getInitialState();\n\n    // console.log(\"inside handleRestart\");\n\n    origState.lang = lang;\n    origState.mode = Config.mode.play;\n    origState.checkMode = Config.checkMode.none;\n\n    origState.numMatrix = Util.resetNumMatrix(numMatrix, isRegisteredMatrix);\n    origState.isRegisteredMatrix = isRegisteredMatrix;\n    origState.gameLevel = gameLevel;\n\n    this.setState(origState);\n\n    document.getElementById(Config.buttonIds.restart).blur();\n  };\n\n  handleLang = () => {\n    this.setState(prevState => {\n      return { lang: Util.flipLang(prevState.lang) };\n    });\n\n    document.getElementById(Config.buttonIds.lang).blur();\n  };\n\n  showFloating = event => {\n    const { mode, isRegisteredMatrix } = this.state;\n\n    // console.log(\"insdie showFloating\");\n\n    let idx = null;\n    const cellAddress = event.target.id;\n\n    if (Util.isMarkerAddress(cellAddress)) {\n      idx = Util.markerId2Idx(cellAddress);\n    } else {\n      idx = Util.R1C12Index(cellAddress);\n    }\n\n    if (\n      !idx ||\n      (!Util.isMarkerIndex(idx) &&\n        (mode === Config.mode.play && isRegisteredMatrix[idx.r][idx.c]))\n    ) {\n      return;\n    }\n\n    this.setState({\n      activeCellIndex: idx,\n      mousePosition: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      showNumPanel: true\n    });\n  };\n\n  handleMessageModalClick = () => {\n    // console.log(\"inside handleMessageModalClick\");\n\n    this.setState({\n      isShowMessage: false\n    });\n  };\n\n  render() {\n    const { lang } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>{Config.panelTitles.header[lang]}</h1>\n        </header>\n        <main className=\"App-main\">\n          <ControlPanel\n            {...this.state}\n            handleRestart={this.handleRestart}\n            handleSetUp={this.handleSetUp}\n            handleNewGame={this.handleNewGame}\n            handleSampleGames={this.handleSampleGames}\n            handleSave={this.handleSave}\n          />\n          <SudokuBoard\n            {...this.state}\n            showFloating={this.showFloating}\n            handleNumInsert={this.handleNumInsert}\n            handleCandidateCell={this.handleCandidateCell}\n            handleMarkerCell={this.handleMarkerCell}\n          />\n          <HelperPanel\n            {...this.state}\n            handleCheck={this.handleCheck}\n            handleHelpMode={this.handleHelpMode}\n            handleSingleNum={this.handleSingleNum}\n            handleSingleNumLevel={this.handleSingleNumLevel}\n            handleMultipleNums={this.handleMultipleNums}\n            handleCandidates={this.handleCandidateLevels}\n            handleControls={this.handleControls}\n            handleSkipIneffectiveStatus={this.handleSkipIneffectiveStatus}\n            handleMarker={this.handleMarker}\n            handleLang={this.handleLang}\n            handleClear={this.handleClear}\n          />\n        </main>\n        <Footer {...this.state} />\n        {/* Popup panels (invisible at start) */}\n        <Floating\n          {...this.state}\n          modal\n          // viewport\n          closeOnModalClick\n          handleNumPanelClick={this.handleNumPanelClick}\n          handleDelete={this.handleDelete}\n          handleCancel={this.handleCancel}\n        />\n        <ShowMessage\n          {...this.state}\n          modal\n          closeOnModalClick\n          handleMessageModalClick={this.handleMessageModalClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport { getRandomArbitrary, getRandomInt, getRandomIntInclusive };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}